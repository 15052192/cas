---
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Enable debug logs."
  name: "debug"
  defaultValue: false
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties"
  type: "java.lang.Boolean"
  description: "Flag to say that a process should fail if there is an encryption or\
    \ decryption error."
  name: "encrypt.fail-on-error"
  defaultValue: true
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties"
  type: "java.lang.String"
  description: "A symmetric key. As a stronger alternative, consider using a keystore."
  name: "encrypt.key"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "java.lang.String"
  description: "Alias for a key in the store."
  name: "encrypt.key-store.alias"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file, e.g. classpath:/keystore.jks."
  name: "encrypt.key-store.location"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "java.lang.String"
  description: "Password that locks the keystore."
  name: "encrypt.key-store.password"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "java.lang.String"
  description: "Secret protecting the key (defaults to the same as the password)."
  name: "encrypt.key-store.secret"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
  type: "java.lang.String"
  description: "The KeyStore type. Defaults to jks."
  name: "encrypt.key-store.type"
  defaultValue: "jks"
- owner: "org.springframework.cloud.bootstrap.encrypt.RsaProperties"
  type: "org.springframework.security.rsa.crypto.RsaAlgorithm"
  description: "The RSA algorithm to use (DEFAULT or OEAP). Once it is set, do not\
    \ change it (or existing ciphers will not be decryptable)."
  name: "encrypt.rsa.algorithm"
  defaultValue: ""
- owner: "org.springframework.cloud.bootstrap.encrypt.RsaProperties"
  type: "java.lang.String"
  description: "Salt for the random secret used to encrypt cipher text. Once it is\
    \ set, do not change it (or existing ciphers will not be decryptable)."
  name: "encrypt.rsa.salt"
  defaultValue: "deadbeef"
- owner: "org.springframework.cloud.bootstrap.encrypt.RsaProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that \"strong\" AES encryption should be used internally.\
    \ If true, then the GCM algorithm is applied to the AES encrypted bytes. Default\
    \ is false (in which case \"standard\" CBC is used instead). Once it is set, do\
    \ not change it (or existing ciphers will not be decryptable)."
  name: "encrypt.rsa.strong"
  defaultValue: false
- owner: "org.springframework.cloud.bootstrap.encrypt.KeyProperties"
  type: "java.lang.String"
  description: "A salt for the symmetric key, in the form of a hex-encoded byte array.\
    \ As a stronger alternative, consider using a keystore."
  name: "encrypt.salt"
  defaultValue: "deadbeef"
- type: "java.util.Map<java.lang.String,java.lang.Object>"
  description: "Arbitrary properties to add to the info endpoint."
  name: "info"
  defaultValue: ""
- type: "java.nio.Charset"
  description: "Charset to use for console output."
  name: "logging.charset.console"
  defaultValue: ""
- type: "java.nio.Charset"
  description: "Charset to use for file output."
  name: "logging.charset.file"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Location of the logging configuration file. For instance, `classpath:logback.xml`\
    \ for Logback."
  name: "logging.config"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Conversion word used when logging exceptions."
  name: "logging.exception-conversion-word"
  defaultValue: "%wEx"
- type: "java.lang.String"
  description: "Log file name (for instance, `myapp.log`). Names can be an exact location\
    \ or relative to the current directory."
  name: "logging.file"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "logging.file.name"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Whether to clean the archive log files on startup. Only supported\
    \ with the default logback setup."
  name: "logging.file.clean-history-on-start"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.clean-history-on-start"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Integer"
  description: "Maximum number of days archive log files are kept. Only supported\
    \ with the default logback setup."
  name: "logging.file.max-history"
  defaultValue: 7
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.max-history"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum log file size. Only supported with the default logback setup."
  name: "logging.file.max-size"
  defaultValue: "10MB"
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.max-file-size"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Log file name (for instance, `myapp.log`). Names can be an exact location\
    \ or relative to the current directory."
  name: "logging.file.name"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Location of the log file. For instance, `/var/log`."
  name: "logging.file.path"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "org.springframework.util.unit.DataSize"
  description: "Total size of log backups to be kept. Only supported with the default\
    \ logback setup."
  name: "logging.file.total-size-cap"
  defaultValue: "0B"
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.total-size-cap"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.util.Map<java.lang.String,java.util.List<java.lang.String>>"
  description: "Log groups to quickly change multiple loggers at the same time. For\
    \ instance, `logging.group.db=org.hibernate,org.springframework.jdbc`."
  name: "logging.group"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`."
  name: "logging.level"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Whether to clean the archive log files on startup."
  name: "logging.logback.rollingpolicy.clean-history-on-start"
  defaultValue: false
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Pattern for rolled-over log file names."
  name: "logging.logback.rollingpolicy.file-name-pattern"
  defaultValue: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum log file size."
  name: "logging.logback.rollingpolicy.max-file-size"
  defaultValue: "10MB"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Integer"
  description: "Maximum number of days archive log files are kept."
  name: "logging.logback.rollingpolicy.max-history"
  defaultValue: 7
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "org.springframework.util.unit.DataSize"
  description: "Total size of log backups to be kept."
  name: "logging.logback.rollingpolicy.total-size-cap"
  defaultValue: "0B"
- type: "java.lang.String"
  description: "Location of the log file. For instance, `/var/log`."
  name: "logging.path"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "logging.file.path"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Appender pattern for output to the console. Supported only with the\
    \ default Logback setup."
  name: "logging.pattern.console"
  defaultValue: "%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint}\
    \ %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint}\
    \ %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Appender pattern for log date format. Supported only with the default\
    \ Logback setup."
  name: "logging.pattern.dateformat"
  defaultValue: "yyyy-MM-dd HH:mm:ss.SSS"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Appender pattern for output to a file. Supported only with the default\
    \ Logback setup."
  name: "logging.pattern.file"
  defaultValue: "%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p}\
    \ ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Appender pattern for log level. Supported only with the default Logback\
    \ setup."
  name: "logging.pattern.level"
  defaultValue: "%5p"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.String"
  description: "Pattern for rolled-over log file names. Supported only with the default\
    \ Logback setup."
  name: "logging.pattern.rolling-file-name"
  defaultValue: "${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz"
  deprecationLevel: "WARNING"
  deprecationReplacement: "logging.logback.rollingpolicy.file-name-pattern"
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Register a shutdown hook for the logging system when it is initialized."
  name: "logging.register-shutdown-hook"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable storage of audit events."
  name: "management.auditevents.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable extended Cloud Foundry actuator endpoints."
  name: "management.cloudfoundry.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to skip SSL verification for Cloud Foundry actuator endpoint\
    \ security calls."
  name: "management.cloudfoundry.skip-ssl-validation"
  defaultValue: false
- owner: "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.auditevents.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the auditevents endpoint."
  name: "management.endpoint.auditevents.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.beans.BeansEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.beans.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.beans.BeansEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the beans endpoint."
  name: "management.endpoint.beans.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.cache.CachesEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.caches.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.cache.CachesEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the caches endpoint."
  name: "management.endpoint.caches.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.conditions.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the conditions endpoint."
  name: "management.endpoint.conditions.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.configprops.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the configprops endpoint."
  name: "management.endpoint.configprops.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
  type: "java.lang.String[]"
  description: "Keys that should be sanitized. Keys can be simple strings that the\
    \ property ends with or regular expressions."
  name: "management.endpoint.configprops.keys-to-sanitize"
  defaultValue:
  - "password"
  - "secret"
  - "key"
  - "token"
  - ".*credentials.*"
  - "vcap_services"
  - "sun.java.command"
- owner: "org.springframework.boot.actuate.env.EnvironmentEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.env.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.env.EnvironmentEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the env endpoint."
  name: "management.endpoint.env.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
  type: "java.lang.String[]"
  description: "Keys that should be sanitized. Keys can be simple strings that the\
    \ property ends with or regular expressions."
  name: "management.endpoint.env.keys-to-sanitize"
  defaultValue:
  - "password"
  - "secret"
  - "key"
  - "token"
  - ".*credentials.*"
  - "vcap_services"
  - "sun.java.command"
- type: "java.lang.Boolean"
  description: "Enables writable environment endpoint."
  name: "management.endpoint.env.post.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.client.actuator.FeaturesEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.features.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.cloud.client.actuator.FeaturesEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the features endpoint."
  name: "management.endpoint.features.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.flyway.FlywayEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.flyway.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.flyway.FlywayEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the flyway endpoint."
  name: "management.endpoint.flyway.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.health.HealthEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.health.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.health.HealthEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the health endpoint."
  name: "management.endpoint.health.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
  type: "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group>"
  description: "Health endpoint groups."
  name: "management.endpoint.health.group"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable liveness and readiness probes."
  name: "management.endpoint.health.probes.enabled"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
  type: "java.util.Set<java.lang.String>"
  description: "Roles used to determine whether or not a user is authorized to be\
    \ shown details. When empty, all authenticated users are authorized."
  name: "management.endpoint.health.roles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
  type: "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"
  description: "When to show components. If not specified the 'show-details' setting\
    \ will be used."
  name: "management.endpoint.health.show-components"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
  type: "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"
  description: "When to show full health details."
  name: "management.endpoint.health.show-details"
  defaultValue: "never"
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
  type: "java.util.Map<java.lang.String,java.lang.Integer>"
  description: "Mapping of health statuses to HTTP status codes. By default, registered\
    \ health statuses map to sensible defaults (for example, UP maps to 200)."
  name: "management.endpoint.health.status.http-mapping"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of health statuses in order of severity."
  name: "management.endpoint.health.status.order"
  defaultValue:
  - "DOWN"
  - "OUT_OF_SERVICE"
  - "UP"
  - "UNKNOWN"
- owner: "org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.heapdump.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the heapdump endpoint."
  name: "management.endpoint.heapdump.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.httptrace.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the httptrace endpoint."
  name: "management.endpoint.httptrace.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.info.InfoEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.info.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.info.InfoEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the info endpoint."
  name: "management.endpoint.info.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.integration.IntegrationGraphEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.integrationgraph.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.integration.IntegrationGraphEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the integrationgraph endpoint."
  name: "management.endpoint.integrationgraph.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Jolokia settings. Refer to the documentation of Jolokia for more details."
  name: "management.endpoint.jolokia.config"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the jolokia endpoint."
  name: "management.endpoint.jolokia.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.liquibase.LiquibaseEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.liquibase.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.liquibase.LiquibaseEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the liquibase endpoint."
  name: "management.endpoint.liquibase.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.logfile.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the logfile endpoint."
  name: "management.endpoint.logfile.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties"
  type: "java.io.File"
  description: "External Logfile to be accessed. Can be used if the logfile is written\
    \ by output redirect and not by the logging system itself."
  name: "management.endpoint.logfile.external-file"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.logging.LoggersEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.loggers.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.logging.LoggersEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the loggers endpoint."
  name: "management.endpoint.loggers.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.mappings.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the mappings endpoint."
  name: "management.endpoint.mappings.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.metrics.MetricsEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.metrics.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.metrics.MetricsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the metrics endpoint."
  name: "management.endpoint.metrics.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable the /pause endpoint (to send Lifecycle.stop())."
  name: "management.endpoint.pause.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.prometheus.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the prometheus endpoint."
  name: "management.endpoint.prometheus.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.endpoint.RefreshEndpoint"
  type: "java.lang.Boolean"
  description: "Enable the /refresh endpoint to refresh configuration and re-initialize\
    \ refresh scoped beans."
  name: "management.endpoint.refresh.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.context.restart.RestartEndpoint"
  type: "java.lang.Boolean"
  description: "Enable the /restart endpoint to restart the application context."
  name: "management.endpoint.restart.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable the /resume endpoint (to send Lifecycle.start())."
  name: "management.endpoint.resume.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.scheduledtasks.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the scheduledtasks endpoint."
  name: "management.endpoint.scheduledtasks.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.serviceregistry.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the serviceregistry endpoint."
  name: "management.endpoint.serviceregistry.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.session.SessionsEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the sessions endpoint."
  name: "management.endpoint.sessions.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.context.ShutdownEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the shutdown endpoint."
  name: "management.endpoint.shutdown.enabled"
  defaultValue: false
- owner: "org.springframework.boot.actuate.startup.StartupEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the startup endpoint."
  name: "management.endpoint.startup.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.management.ThreadDumpEndpoint"
  type: "java.time.Duration"
  description: "Maximum time that a response can be cached."
  name: "management.endpoint.threaddump.cache.time-to-live"
  defaultValue: "0ms"
- owner: "org.springframework.boot.actuate.management.ThreadDumpEndpoint"
  type: "java.lang.Boolean"
  description: "Whether to enable the threaddump endpoint."
  name: "management.endpoint.threaddump.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable or disable all endpoints by default."
  name: "management.endpoints.enabled-by-default"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties"
  type: "java.lang.String"
  description: "Endpoints JMX domain name. Fallback to 'spring.jmx.default-domain'\
    \ if set."
  name: "management.endpoints.jmx.domain"
  defaultValue: "org.springframework.boot"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure"
  type: "java.util.Set<java.lang.String>"
  description: "Endpoint IDs that should be excluded or '*' for all."
  name: "management.endpoints.jmx.exposure.exclude"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure"
  type: "java.util.Set<java.lang.String>"
  description: "Endpoint IDs that should be included or '*' for all."
  name: "management.endpoints.jmx.exposure.include"
  defaultValue: "*"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties"
  type: "java.util.Properties"
  description: "Additional static properties to append to all ObjectNames of MBeans\
    \ representing Endpoints."
  name: "management.endpoints.jmx.static-names"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether unique runtime object names should be ensured."
  name: "management.endpoints.jmx.unique-names"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.jmx.unique-names"
- type: "java.lang.Boolean"
  description: "Whether to transparently migrate legacy endpoint IDs."
  name: "management.endpoints.migrate-legacy-ids"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
  type: "java.lang.String"
  description: "Base path for Web endpoints. Relative to the servlet context path\
    \ (server.servlet.context-path) or WebFlux base path (spring.webflux.base-path)\
    \ when the management server is sharing the main server port. Relative to the\
    \ management server base path (management.server.base-path) when a separate management\
    \ server port (management.server.port) is configured."
  name: "management.endpoints.web.base-path"
  defaultValue: "/actuator"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.lang.Boolean"
  description: "Whether credentials are supported. When not set, credentials are not\
    \ supported."
  name: "management.endpoints.web.cors.allow-credentials"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of headers to allow in a request. '*' allows\
    \ all headers."
  name: "management.endpoints.web.cors.allowed-headers"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of methods to allow. '*' allows all methods.\
    \ When not set, defaults to GET."
  name: "management.endpoints.web.cors.allowed-methods"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of origins to allow. '*' allows all origins.\
    \ When not set, CORS support is disabled."
  name: "management.endpoints.web.cors.allowed-origins"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of headers to include in a response."
  name: "management.endpoints.web.cors.exposed-headers"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
  type: "java.time.Duration"
  description: "How long the response from a pre-flight request can be cached by clients.\
    \ If a duration suffix is not specified, seconds will be used."
  name: "management.endpoints.web.cors.max-age"
  defaultValue: "1800s"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure"
  type: "java.util.Set<java.lang.String>"
  description: "Endpoint IDs that should be excluded or '*' for all."
  name: "management.endpoints.web.exposure.exclude"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure"
  type: "java.util.Set<java.lang.String>"
  description: "Endpoint IDs that should be included or '*' for all."
  name: "management.endpoints.web.exposure.include"
  defaultValue:
  - "health"
  - "info"
- owner: "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Mapping between endpoint IDs and the path that should expose them."
  name: "management.endpoints.web.path-mapping"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable Cassandra health check."
  name: "management.health.cassandra.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Couchbase health check."
  name: "management.health.couchbase.enabled"
  defaultValue: true
- type: "java.time.Duration"
  description: "Timeout for getting the Bucket information from the server."
  name: "management.health.couchbase.timeout"
  defaultValue: "1000ms"
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable database health check."
  name: "management.health.db.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore AbstractRoutingDataSources when creating database\
    \ health indicators."
  name: "management.health.db.ignore-routing-data-sources"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable default health indicators."
  name: "management.health.defaults.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable disk space health check."
  name: "management.health.diskspace.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
  type: "java.io.File"
  description: "Path used to compute the available disk space."
  name: "management.health.diskspace.path"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Minimum disk space that should be available."
  name: "management.health.diskspace.threshold"
  defaultValue: "10MB"
- type: "java.lang.Boolean"
  description: "Whether to enable Elasticsearch health check."
  name: "management.health.elasticsearch.enabled"
  defaultValue: true
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated index names."
  name: "management.health.elasticsearch.indices"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.time.Duration"
  description: "Time to wait for a response from the cluster."
  name: "management.health.elasticsearch.response-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable InfluxDB health check."
  name: "management.health.influxdb.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable JMS health check."
  name: "management.health.jms.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable LDAP health check."
  name: "management.health.ldap.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable liveness state health check."
  name: "management.health.livenessstate.enabled"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable Mail health check."
  name: "management.health.mail.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable MongoDB health check."
  name: "management.health.mongo.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Neo4j health check."
  name: "management.health.neo4j.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable ping health check."
  name: "management.health.ping.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable liveness and readiness probes."
  name: "management.health.probes.enabled"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "management.endpoint.health.probes.enabled"
- type: "java.lang.Boolean"
  description: "Whether to enable RabbitMQ health check."
  name: "management.health.rabbit.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable readiness state health check."
  name: "management.health.readinessstate.enabled"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable Redis health check."
  name: "management.health.redis.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enable the health endpoint for the refresh scope."
  name: "management.health.refresh.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Solr health check."
  name: "management.health.solr.enabled"
  defaultValue: true
- name: "management.health.status.order"
  defaultValue:
  - "DOWN"
  - "OUT_OF_SERVICE"
  - "UP"
  - "UNKNOWN"
- type: "java.lang.Boolean"
  description: "Whether to enable build info."
  name: "management.info.build.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable default info contributors."
  name: "management.info.defaults.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable environment info."
  name: "management.info.env.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable git info."
  name: "management.info.git.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git"
  type: "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
  description: "Mode to use to expose git information."
  name: "management.info.git.mode"
  defaultValue: "simple"
- type: "java.lang.Boolean"
  description: "Whether to enable files metrics."
  name: "management.metrics.binders.files.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, filter 'process.files' metrics."
  deprecationReplacement: "management.metrics.enable.process.files"
- type: "java.lang.Boolean"
  description: "Whether to enable JVM metrics."
  name: "management.metrics.binders.jvm.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, disable JvmMetricsAutoConfiguration or filter 'jvm'\
    \ metrics."
  deprecationReplacement: "management.metrics.enable.jvm"
- type: "java.lang.Boolean"
  description: "Whether to enable Logback metrics."
  name: "management.metrics.binders.logback.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, disable LogbackMetricsAutoConfiguration or filter 'logback'\
    \ metrics."
  deprecationReplacement: "management.metrics.enable.logback"
- type: "java.lang.Boolean"
  description: "Whether to enable processor metrics."
  name: "management.metrics.binders.processor.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, filter 'system.cpu' and 'process.cpu' metrics."
- type: "java.lang.Boolean"
  description: "Whether to enable uptime metrics."
  name: "management.metrics.binders.uptime.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Instead, filter 'process.uptime' and 'process.start.time' metrics."
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Maximum value that meter IDs starting with the specified name are\
    \ expected to observe. The longest match wins. Values can be specified as a long\
    \ or as a Duration value (for timer meters, defaulting to ms if no unit specified)."
  name: "management.metrics.distribution.maximum-expected-value"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Minimum value that meter IDs starting with the specified name are\
    \ expected to observe. The longest match wins. Values can be specified as a long\
    \ or as a Duration value (for timer meters, defaulting to ms if no unit specified)."
  name: "management.metrics.distribution.minimum-expected-value"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,java.lang.Double[]>"
  description: "Specific computed non-aggregable percentiles to ship to the backend\
    \ for meter IDs starting-with the specified name. The longest match wins, the\
    \ key `all` can also be used to configure all meters."
  name: "management.metrics.distribution.percentiles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,java.lang.Boolean>"
  description: "Whether meter IDs starting with the specified name should publish\
    \ percentile histograms. For monitoring systems that support aggregable percentile\
    \ calculation based on a histogram, this can be set to true. For other systems,\
    \ this has no effect. The longest match wins, the key `all` can also be used to\
    \ configure all meters."
  name: "management.metrics.distribution.percentiles-histogram"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary[]>"
  name: "management.metrics.distribution.sla"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "management.metrics.distribution.slo"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
  type: "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary[]>"
  description: "Specific service-level objective boundaries for meter IDs starting\
    \ with the specified name. The longest match wins. Counters will be published\
    \ for each specified boundary. Values can be specified as a long or as a Duration\
    \ value (for timer meters, defaulting to ms if no unit specified)."
  name: "management.metrics.distribution.slo"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
  type: "java.util.Map<java.lang.String,java.lang.Boolean>"
  description: "Whether meter IDs starting with the specified name should be enabled.\
    \ The longest match wins, the key `all` can also be used to configure all meters."
  name: "management.metrics.enable"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.String"
  description: "AppOptics API token."
  name: "management.metrics.export.appoptics.api-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.appoptics.batch-size"
  defaultValue: 500
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.appoptics.connect-timeout"
  defaultValue: "5s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.appoptics.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.Boolean"
  description: "Whether to ship a floored time, useful when sending measurements from\
    \ multiple hosts to align them on a given time boundary."
  name: "management.metrics.export.appoptics.floor-times"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.String"
  description: "Tag that will be mapped to \"@host\" when shipping metrics to AppOptics."
  name: "management.metrics.export.appoptics.host-tag"
  defaultValue: "instance"
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.appoptics.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.appoptics.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.appoptics.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to."
  name: "management.metrics.export.appoptics.uri"
  defaultValue: "https://api.appoptics.com/v1/measurements"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.atlas.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Frequency for refreshing config settings from the LWC service."
  name: "management.metrics.export.atlas.config-refresh-frequency"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Time to live for subscriptions from the LWC service."
  name: "management.metrics.export.atlas.config-time-to-live"
  defaultValue: "150s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.String"
  description: "URI for the Atlas LWC endpoint to retrieve current subscriptions."
  name: "management.metrics.export.atlas.config-uri"
  defaultValue: "http://localhost:7101/lwc/api/v1/expressions/local-dev"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.atlas.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.atlas.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.String"
  description: "URI for the Atlas LWC endpoint to evaluate the data for a subscription."
  name: "management.metrics.export.atlas.eval-uri"
  defaultValue: "http://localhost:7101/lwc/api/v1/evaluate"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable streaming to Atlas LWC."
  name: "management.metrics.export.atlas.lwc-enabled"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Time to live for meters that do not have any activity. After this\
    \ period the meter will be considered expired and will not get reported."
  name: "management.metrics.export.atlas.meter-time-to-live"
  defaultValue: "15m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.atlas.num-threads"
  defaultValue: 4
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.atlas.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.atlas.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
  type: "java.lang.String"
  description: "URI of the Atlas server."
  name: "management.metrics.export.atlas.uri"
  defaultValue: "http://localhost:7101/api/v1/publish"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.String"
  description: "Datadog API key."
  name: "management.metrics.export.datadog.api-key"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.String"
  description: "Datadog application key. Not strictly required, but improves the Datadog\
    \ experience by sending meter descriptions, types, and base units to Datadog."
  name: "management.metrics.export.datadog.application-key"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.datadog.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.datadog.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.Boolean"
  description: "Whether to publish descriptions metadata to Datadog. Turn this off\
    \ to minimize the amount of metadata sent."
  name: "management.metrics.export.datadog.descriptions"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.datadog.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.String"
  description: "Tag that will be mapped to \"host\" when shipping metrics to Datadog."
  name: "management.metrics.export.datadog.host-tag"
  defaultValue: "instance"
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.datadog.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.datadog.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.datadog.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to. If you need to publish metrics to an internal\
    \ proxy en-route to Datadog, you can define the location of the proxy with this."
  name: "management.metrics.export.datadog.uri"
  defaultValue: "https://api.datadoghq.com"
- type: "java.lang.Boolean"
  description: "Whether to enable default metrics exporters."
  name: "management.metrics.export.defaults.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "Dynatrace authentication token."
  name: "management.metrics.export.dynatrace.api-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.dynatrace.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.dynatrace.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "ID of the custom device that is exporting metrics to Dynatrace."
  name: "management.metrics.export.dynatrace.device-id"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.dynatrace.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "Group for exported metrics. Used to specify custom device group name\
    \ in the Dynatrace UI."
  name: "management.metrics.export.dynatrace.group"
  defaultValue: ""
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.dynatrace.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.dynatrace.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.dynatrace.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "Technology type for exported metrics. Used to group metrics under\
    \ a logical technology name in the Dynatrace UI."
  name: "management.metrics.export.dynatrace.technology-type"
  defaultValue: "java"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to. Should be used for SaaS, self managed instances\
    \ or to en-route through an internal proxy."
  name: "management.metrics.export.dynatrace.uri"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.Boolean"
  description: "Whether to create the index automatically if it does not exist."
  name: "management.metrics.export.elastic.auto-create-index"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.elastic.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.elastic.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.elastic.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Host to export metrics to."
  name: "management.metrics.export.elastic.host"
  defaultValue: "http://localhost:9200"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Index to export metrics to."
  name: "management.metrics.export.elastic.index"
  defaultValue: "micrometer-metrics"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Index date format used for rolling indices. Appended to the index\
    \ name."
  name: "management.metrics.export.elastic.index-date-format"
  defaultValue: "yyyy-MM"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Prefix to separate the index name from the date format used for rolling\
    \ indices."
  name: "management.metrics.export.elastic.index-date-separator"
  defaultValue: "-"
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.elastic.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Login password of the Elastic server."
  name: "management.metrics.export.elastic.password"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Ingest pipeline name. By default, events are not pre-processed."
  name: "management.metrics.export.elastic.pipeline"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.elastic.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.elastic.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Name of the timestamp field."
  name: "management.metrics.export.elastic.timestamp-field-name"
  defaultValue: "@timestamp"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
  type: "java.lang.String"
  description: "Login user of the Elastic server."
  name: "management.metrics.export.elastic.user-name"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "info.ganglia.gmetric4j.gmetric.GMetric$UDPAddressingMode"
  description: "UDP addressing mode, either unicast or multicast."
  name: "management.metrics.export.ganglia.addressing-mode"
  defaultValue: "multicast"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Base time unit used to report durations."
  name: "management.metrics.export.ganglia.duration-units"
  defaultValue: "milliseconds"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to Ganglia is enabled."
  name: "management.metrics.export.ganglia.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.String"
  description: "Host of the Ganglia server to receive exported metrics."
  name: "management.metrics.export.ganglia.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.Integer"
  description: "Port of the Ganglia server to receive exported metrics."
  name: "management.metrics.export.ganglia.port"
  defaultValue: 8649
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.String"
  description: "Ganglia protocol version. Must be either 3.1 or 3.0."
  name: "management.metrics.export.ganglia.protocol-version"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReason: "No longer used by Micrometer."
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Base time unit used to report rates."
  name: "management.metrics.export.ganglia.rate-units"
  defaultValue: "seconds"
  deprecationLevel: "WARNING"
  deprecationReason: "No longer used by Micrometer."
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.ganglia.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
  type: "java.lang.Integer"
  description: "Time to live for metrics on Ganglia. Set the multi-cast Time-To-Live\
    \ to be one greater than the number of hops (routers) between the hosts."
  name: "management.metrics.export.ganglia.time-to-live"
  defaultValue: 1
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Base time unit used to report durations."
  name: "management.metrics.export.graphite.duration-units"
  defaultValue: "milliseconds"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to Graphite is enabled."
  name: "management.metrics.export.graphite.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.Boolean"
  description: "Whether Graphite tags should be used, as opposed to a hierarchical\
    \ naming convention. Enabled by default unless \"tagsAsPrefix\" is set."
  name: "management.metrics.export.graphite.graphite-tags-enabled"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.String"
  description: "Host of the Graphite server to receive exported metrics."
  name: "management.metrics.export.graphite.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.Integer"
  description: "Port of the Graphite server to receive exported metrics."
  name: "management.metrics.export.graphite.port"
  defaultValue: 2004
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "io.micrometer.graphite.GraphiteProtocol"
  description: "Protocol to use while shipping data to Graphite."
  name: "management.metrics.export.graphite.protocol"
  defaultValue: "pickled"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.util.concurrent.TimeUnit"
  description: "Base time unit used to report rates."
  name: "management.metrics.export.graphite.rate-units"
  defaultValue: "seconds"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.graphite.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
  type: "java.lang.String[]"
  description: "For the hierarchical naming convention, turn the specified tag keys\
    \ into part of the metric prefix. Ignored if \"graphiteTagsEnabled\" is true."
  name: "management.metrics.export.graphite.tags-as-prefix"
  defaultValue: []
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.lang.String"
  description: "Humio API token."
  name: "management.metrics.export.humio.api-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.humio.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.humio.connect-timeout"
  defaultValue: "5s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.humio.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.humio.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.humio.read-timeout"
  defaultValue: "10s"
- name: "management.metrics.export.humio.repository"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.humio.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Humio tags describing the data source in which metrics will be stored.\
    \ Humio tags are a distinct concept from Micrometer's tags. Micrometer's tags\
    \ are used to divide metrics along dimensional boundaries."
  name: "management.metrics.export.humio.tags"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to. If you need to publish metrics to an internal\
    \ proxy en-route to Humio, you can define the location of the proxy with this."
  name: "management.metrics.export.humio.uri"
  defaultValue: "https://cloud.humio.com"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Boolean"
  description: "Whether to create the Influx database if it does not exist before\
    \ attempting to publish metrics to it."
  name: "management.metrics.export.influx.auto-create-db"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.influx.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable GZIP compression of metrics batches published to\
    \ Influx."
  name: "management.metrics.export.influx.compressed"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.influx.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "io.micrometer.influx.InfluxConsistency"
  description: "Write consistency for each point."
  name: "management.metrics.export.influx.consistency"
  defaultValue: "one"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Tag that will be mapped to \"host\" when shipping metrics to Influx."
  name: "management.metrics.export.influx.db"
  defaultValue: "mydb"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.influx.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.influx.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Login password of the Influx server."
  name: "management.metrics.export.influx.password"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.influx.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Time period for which Influx should retain data in the current database.\
    \ For instance 7d, check the influx documentation for more details on the duration\
    \ format."
  name: "management.metrics.export.influx.retention-duration"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Retention policy to use (Influx writes to the DEFAULT retention policy\
    \ if one is not specified)."
  name: "management.metrics.export.influx.retention-policy"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.Integer"
  description: "How many copies of the data are stored in the cluster. Must be 1 for\
    \ a single node instance."
  name: "management.metrics.export.influx.retention-replication-factor"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Time range covered by a shard group. For instance 2w, check the influx\
    \ documentation for more details on the duration format."
  name: "management.metrics.export.influx.retention-shard-duration"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.influx.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "URI of the Influx server."
  name: "management.metrics.export.influx.uri"
  defaultValue: "http://localhost:8086"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
  type: "java.lang.String"
  description: "Login user of the Influx server."
  name: "management.metrics.export.influx.user-name"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties"
  type: "java.lang.String"
  description: "Metrics JMX domain name."
  name: "management.metrics.export.jmx.domain"
  defaultValue: "metrics"
- type: "java.lang.Boolean"
  description: "Whether exporting of metrics to JMX is enabled."
  name: "management.metrics.export.jmx.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.jmx.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.kairos.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.kairos.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.kairos.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.kairos.num-threads"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.String"
  description: "Login password of the KairosDB server."
  name: "management.metrics.export.kairos.password"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.kairos.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.kairos.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.String"
  description: "URI of the KairosDB server."
  name: "management.metrics.export.kairos.uri"
  defaultValue: "http://localhost:8080/api/v1/datapoints"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
  type: "java.lang.String"
  description: "Login user of the KairosDB server."
  name: "management.metrics.export.kairos.user-name"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.String"
  description: "New Relic account ID."
  name: "management.metrics.export.newrelic.account-id"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.String"
  description: "New Relic API key."
  name: "management.metrics.export.newrelic.api-key"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.newrelic.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "io.micrometer.newrelic.ClientProviderType"
  description: "Client provider type to use."
  name: "management.metrics.export.newrelic.client-provider-type"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.newrelic.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.newrelic.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.String"
  description: "The event type that should be published. This property will be ignored\
    \ if 'meter-name-event-type-enabled' is set to 'true'."
  name: "management.metrics.export.newrelic.event-type"
  defaultValue: "SpringBootSample"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.Boolean"
  description: "Whether to send the meter name as the event type instead of using\
    \ the 'event-type' configuration property value. Can be set to 'true' if New Relic\
    \ guidelines are not being followed or event types consistent with previous Spring\
    \ Boot releases are required."
  name: "management.metrics.export.newrelic.meter-name-event-type-enabled"
  defaultValue: false
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.newrelic.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.newrelic.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.newrelic.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to."
  name: "management.metrics.export.newrelic.uri"
  defaultValue: "https://insights-collector.newrelic.com"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable publishing descriptions as part of the scrape payload\
    \ to Prometheus. Turn this off to minimize the amount of data sent on each scrape."
  name: "management.metrics.export.prometheus.descriptions"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether exporting of metrics to Prometheus is enabled."
  name: "management.metrics.export.prometheus.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
  type: "io.micrometer.prometheus.HistogramFlavor"
  description: "Histogram type for backing DistributionSummary and Timer."
  name: "management.metrics.export.prometheus.histogram-flavor"
  defaultValue: "prometheus"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.String"
  description: "Base URL for the Pushgateway."
  name: "management.metrics.export.prometheus.pushgateway.base-url"
  defaultValue: "http://localhost:9091"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.Boolean"
  description: "Enable publishing via a Prometheus Pushgateway."
  name: "management.metrics.export.prometheus.pushgateway.enabled"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Grouping key for the pushed metrics."
  name: "management.metrics.export.prometheus.pushgateway.grouping-key"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.String"
  description: "Job identifier for this application instance."
  name: "management.metrics.export.prometheus.pushgateway.job"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.String"
  description: "Login password of the Prometheus Pushgateway."
  name: "management.metrics.export.prometheus.pushgateway.password"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.time.Duration"
  description: "Frequency with which to push metrics."
  name: "management.metrics.export.prometheus.pushgateway.push-rate"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusPushGatewayManager$ShutdownOperation"
  description: "Operation that should be performed on shutdown."
  name: "management.metrics.export.prometheus.pushgateway.shutdown-operation"
  defaultValue: "none"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
  type: "java.lang.String"
  description: "Login user of the Prometheus Pushgateway."
  name: "management.metrics.export.prometheus.pushgateway.username"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.prometheus.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.String"
  description: "SignalFX access token."
  name: "management.metrics.export.signalfx.access-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.signalfx.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.signalfx.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.signalfx.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.signalfx.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.signalfx.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.String"
  description: "Uniquely identifies the app instance that is publishing metrics to\
    \ SignalFx. Defaults to the local host name."
  name: "management.metrics.export.signalfx.source"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.signalfx.step"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
  type: "java.lang.String"
  description: "URI to ship metrics to."
  name: "management.metrics.export.signalfx.uri"
  defaultValue: "https://ingest.signalfx.com"
- type: "java.lang.Boolean"
  description: "Whether, in the absence of any other exporter, exporting of metrics\
    \ to an in-memory backend is enabled."
  name: "management.metrics.export.simple.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
  type: "io.micrometer.core.instrument.simple.CountingMode"
  description: "Counting mode."
  name: "management.metrics.export.simple.mode"
  defaultValue: "cumulative"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.simple.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.stackdriver.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.stackdriver.connect-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.stackdriver.enabled"
  defaultValue: true
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.stackdriver.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.lang.String"
  description: "Identifier of the Google Cloud project to monitor."
  name: "management.metrics.export.stackdriver.project-id"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.stackdriver.read-timeout"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.lang.String"
  description: "Monitored resource type."
  name: "management.metrics.export.stackdriver.resource-type"
  defaultValue: "global"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.stackdriver.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to StatsD is enabled."
  name: "management.metrics.export.statsd.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "io.micrometer.statsd.StatsdFlavor"
  description: "StatsD line protocol to use."
  name: "management.metrics.export.statsd.flavor"
  defaultValue: "datadog"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.String"
  description: "Host of the StatsD server to receive exported metrics."
  name: "management.metrics.export.statsd.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.Integer"
  description: "Total length of a single payload should be kept within your network's\
    \ MTU."
  name: "management.metrics.export.statsd.max-packet-length"
  defaultValue: 1400
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.time.Duration"
  description: "How often gauges will be polled. When a gauge is polled, its value\
    \ is recalculated and if the value has changed (or publishUnchangedMeters is true),\
    \ it is sent to the StatsD server."
  name: "management.metrics.export.statsd.polling-frequency"
  defaultValue: "10s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.Integer"
  description: "Port of the StatsD server to receive exported metrics."
  name: "management.metrics.export.statsd.port"
  defaultValue: 8125
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "io.micrometer.statsd.StatsdProtocol"
  description: "Protocol of the StatsD server to receive exported metrics."
  name: "management.metrics.export.statsd.protocol"
  defaultValue: "udp"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
  type: "java.lang.Boolean"
  description: "Whether to send unchanged meters to the StatsD server."
  name: "management.metrics.export.statsd.publish-unchanged-meters"
  defaultValue: true
- name: "management.metrics.export.statsd.queue-size"
  defaultValue: 2147483647
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.String"
  description: "API token used when publishing metrics directly to the Wavefront API\
    \ host."
  name: "management.metrics.export.wavefront.api-token"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.Integer"
  description: "Number of measurements per request to use for this backend. If more\
    \ measurements are found, then multiple requests will be made."
  name: "management.metrics.export.wavefront.batch-size"
  defaultValue: 10000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.time.Duration"
  description: "Connection timeout for requests to this backend."
  name: "management.metrics.export.wavefront.connect-timeout"
  defaultValue: "1s"
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.Boolean"
  description: "Whether exporting of metrics to this backend is enabled."
  name: "management.metrics.export.wavefront.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.String"
  description: "Global prefix to separate metrics originating from this app's white\
    \ box instrumentation from those originating from other Wavefront integrations\
    \ when viewed in the Wavefront UI."
  name: "management.metrics.export.wavefront.global-prefix"
  defaultValue: ""
- type: "java.lang.Integer"
  description: "Number of threads to use with the metrics publishing scheduler."
  name: "management.metrics.export.wavefront.num-threads"
  defaultValue: 2
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.time.Duration"
  description: "Read timeout for requests to this backend."
  name: "management.metrics.export.wavefront.read-timeout"
  defaultValue: "10s"
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender"
  type: "java.time.Duration"
  name: "management.metrics.export.wavefront.sender.flush-interval"
  defaultValue: "1s"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender"
  type: "java.lang.Integer"
  name: "management.metrics.export.wavefront.sender.max-queue-size"
  defaultValue: 50000
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender"
  type: "org.springframework.util.unit.DataSize"
  name: "management.metrics.export.wavefront.sender.message-size"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.lang.String"
  description: "Unique identifier for the app instance that is the source of metrics\
    \ being published to Wavefront. Defaults to the local host name."
  name: "management.metrics.export.wavefront.source"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.time.Duration"
  description: "Step size (i.e. reporting frequency) to use."
  name: "management.metrics.export.wavefront.step"
  defaultValue: "1m"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
  type: "java.net.URI"
  description: "URI to ship metrics to."
  name: "management.metrics.export.wavefront.uri"
  defaultValue: "https://longboard.wavefront.com"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Common tags that are applied to every meter."
  name: "management.metrics.tags"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
  type: "java.lang.Boolean"
  description: "Whether auto-configured MeterRegistry implementations should be bound\
    \ to the global static registry on Metrics. For testing, set this to 'false' to\
    \ maximize test independence."
  name: "management.metrics.use-global-registry"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client"
  type: "java.lang.Integer"
  description: "Maximum number of unique URI tag values allowed. After the max number\
    \ of tag values is reached, metrics with additional tag values are denied by filter."
  name: "management.metrics.web.client.max-uri-tags"
  defaultValue: 100
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically time web client requests."
  name: "management.metrics.web.client.request.autotime.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Double[]"
  description: "Computed non-aggregable percentiles to publish."
  name: "management.metrics.web.client.request.autotime.percentiles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  description: "Whether percentile histograms should be published."
  name: "management.metrics.web.client.request.autotime.percentiles-histogram"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest"
  type: "java.lang.String"
  description: "Name of the metric for sent requests."
  name: "management.metrics.web.client.request.metric-name"
  defaultValue: "http.client.requests"
- type: "java.lang.String"
  name: "management.metrics.web.client.requests-metric-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "management.metrics.web.client.request.metric-name"
- type: "java.lang.Boolean"
  name: "management.metrics.web.server.auto-time-requests"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "management.metrics.web.server.request.autotime.enabled"
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server"
  type: "java.lang.Integer"
  description: "Maximum number of unique URI tag values allowed. After the max number\
    \ of tag values is reached, metrics with additional tag values are denied by filter."
  name: "management.metrics.web.server.max-uri-tags"
  defaultValue: 100
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically time web server requests."
  name: "management.metrics.web.server.request.autotime.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Double[]"
  description: "Computed non-aggregable percentiles to publish."
  name: "management.metrics.web.server.request.autotime.percentiles"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
  type: "java.lang.Boolean"
  description: "Whether percentile histograms should be published."
  name: "management.metrics.web.server.request.autotime.percentiles-histogram"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest"
  type: "java.lang.Boolean"
  description: "Whether the trailing slash should be ignored when recording metrics."
  name: "management.metrics.web.server.request.ignore-trailing-slash"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest"
  type: "java.lang.String"
  description: "Name of the metric for received requests."
  name: "management.metrics.web.server.request.metric-name"
  defaultValue: "http.server.requests"
- type: "java.lang.String"
  name: "management.metrics.web.server.requests-metric-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "management.metrics.web.server.request.metric-name"
- type: "java.lang.Boolean"
  description: "Add the \"X-Application-Context\" HTTP header in each response."
  name: "management.server.add-application-context-header"
  defaultValue: false
- owner: "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
  type: "java.net.InetAddress"
  description: "Network address to which the management endpoints should bind. Requires\
    \ a custom management.server.port."
  name: "management.server.address"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
  type: "java.lang.String"
  description: "Management endpoint base path (for instance, `/management`). Requires\
    \ a custom management.server.port."
  name: "management.server.base-path"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
  type: "java.lang.Integer"
  description: "Management endpoint HTTP port (uses the same port as the application\
    \ by default). Configure a different port to use management-specific SSL."
  name: "management.server.port"
  defaultValue: ""
- owner: "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties$Servlet"
  type: "java.lang.String"
  description: "Management endpoint context-path (for instance, `/management`). Requires\
    \ a custom management.server.port."
  name: "management.server.servlet.context-path"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "management.server.base-path"
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  description: "Supported SSL ciphers."
  name: "management.server.ssl.ciphers"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "org.springframework.boot.web.server.Ssl$ClientAuth"
  description: "Client authentication mode. Requires a trust store."
  name: "management.server.ssl.client-auth"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support."
  name: "management.server.ssl.enabled"
  defaultValue: true
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  description: "Enabled SSL protocols."
  name: "management.server.ssl.enabled-protocols"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Alias that identifies the key in the key store."
  name: "management.server.ssl.key-alias"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the key in the key store."
  name: "management.server.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Path to the key store that holds the SSL certificate (typically a\
    \ jks file)."
  name: "management.server.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  name: "management.server.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Provider for the key store."
  name: "management.server.ssl.key-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  name: "management.server.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  name: "management.server.ssl.protocol"
  defaultValue: "TLS"
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Trust store that holds SSL certificates."
  name: "management.server.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the trust store."
  name: "management.server.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Provider for the trust store."
  name: "management.server.ssl.trust-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  name: "management.server.ssl.trust-store-type"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable HTTP request-response tracing."
  name: "management.trace.http.enabled"
  defaultValue: true
- owner: "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties"
  type: "java.util.Set<org.springframework.boot.actuate.trace.http.Include>"
  description: "Items to be included in the trace. Defaults to request headers (excluding\
    \ Authorization and Cookie), response headers (excluding Set-Cookie), and time\
    \ taken."
  name: "management.trace.http.include"
  defaultValue:
  - "request-headers"
  - "response-headers"
  - "errors"
- name: "management.trace.include"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "management.trace.http.include"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "java.net.InetAddress"
  description: "Network address to which the server should bind."
  name: "server.address"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Compression"
  type: "java.lang.Boolean"
  description: "Whether response compression is enabled."
  name: "server.compression.enabled"
  defaultValue: false
- owner: "org.springframework.boot.web.server.Compression"
  type: "java.lang.String[]"
  description: "Comma-separated list of user agents for which responses should not\
    \ be compressed."
  name: "server.compression.excluded-user-agents"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Compression"
  type: "java.lang.String[]"
  description: "Comma-separated list of MIME types that should be compressed."
  name: "server.compression.mime-types"
  defaultValue:
  - "text/html"
  - "text/xml"
  - "text/plain"
  - "text/css"
  - "text/javascript"
  - "application/javascript"
  - "application/json"
  - "application/xml"
- owner: "org.springframework.boot.web.server.Compression"
  type: "org.springframework.util.unit.DataSize"
  description: "Minimum \"Content-Length\" value that is required for compression\
    \ to be performed."
  name: "server.compression.min-response-size"
  defaultValue: "2KB"
- type: "java.time.Duration"
  name: "server.connection-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Each server behaves differently."
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
  description: "When to include \"errors\" attribute."
  name: "server.error.include-binding-errors"
  defaultValue: "never"
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "java.lang.Boolean"
  description: "Include the \"exception\" attribute."
  name: "server.error.include-exception"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
  description: "When to include \"message\" attribute."
  name: "server.error.include-message"
  defaultValue: "never"
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeStacktrace"
  description: "When to include the \"trace\" attribute."
  name: "server.error.include-stacktrace"
  defaultValue: "never"
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties"
  type: "java.lang.String"
  description: "Path of the error controller."
  name: "server.error.path"
  defaultValue: "/error"
- owner: "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel"
  type: "java.lang.Boolean"
  description: "Whether to enable the default error page displayed in browsers in\
    \ case of a server error."
  name: "server.error.whitelabel.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
  description: "Strategy for handling X-Forwarded-* headers."
  name: "server.forward-headers-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Http2"
  type: "java.lang.Boolean"
  description: "Whether to enable HTTP/2 support, if the current environment supports\
    \ it."
  name: "server.http2.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "java.lang.Integer"
  name: "server.jetty.acceptors"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.jetty.threads.acceptors"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.Boolean"
  description: "Append to log."
  name: "server.jetty.accesslog.append"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.String"
  description: "Custom log format, see org.eclipse.jetty.server.CustomRequestLog.\
    \ If defined, overrides the \"format\" configuration key."
  name: "server.jetty.accesslog.custom-format"
  defaultValue: ""
- name: "server.jetty.accesslog.date-format"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.Boolean"
  description: "Enable access log."
  name: "server.jetty.accesslog.enabled"
  defaultValue: false
- name: "server.jetty.accesslog.extended-format"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.format"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.String"
  description: "Date format to place in log file name."
  name: "server.jetty.accesslog.file-date-format"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.String"
  description: "Log filename. If not specified, logs redirect to \"System.err\"."
  name: "server.jetty.accesslog.filename"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
  description: "Log format."
  name: "server.jetty.accesslog.format"
  defaultValue: "ncsa"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.util.List<java.lang.String>"
  description: "Request paths that should not be logged."
  name: "server.jetty.accesslog.ignore-paths"
  defaultValue: ""
- name: "server.jetty.accesslog.locale"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- name: "server.jetty.accesslog.log-cookies"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- name: "server.jetty.accesslog.log-latency"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- name: "server.jetty.accesslog.log-server"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog"
  type: "java.lang.Integer"
  description: "Number of days before rotated log files are deleted."
  name: "server.jetty.accesslog.retention-period"
  defaultValue: 31
- name: "server.jetty.accesslog.time-zone"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.accesslog.custom-format"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "java.time.Duration"
  description: "Time that the connection can be idle before it is closed."
  name: "server.jetty.connection-idle-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the form content in any HTTP post request."
  name: "server.jetty.max-http-form-post-size"
  defaultValue: "200000B"
- type: "org.springframework.util.unit.DataSize"
  name: "server.jetty.max-http-post-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.jetty.max-http-form-post-size"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "java.lang.Integer"
  name: "server.jetty.max-queue-capacity"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.jetty.threads.max-queue-capacity"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "java.lang.Integer"
  name: "server.jetty.max-threads"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.jetty.threads.max"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "java.lang.Integer"
  name: "server.jetty.min-threads"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.jetty.threads.min"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "java.lang.Integer"
  name: "server.jetty.selectors"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.jetty.threads.selectors"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
  type: "java.time.Duration"
  name: "server.jetty.thread-idle-timeout"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.jetty.threads.idle-timeout"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Number of acceptor threads to use. When the value is -1, the default,\
    \ the number of acceptors is derived from the operating environment."
  name: "server.jetty.threads.acceptors"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.time.Duration"
  description: "Maximum thread idle time."
  name: "server.jetty.threads.idle-timeout"
  defaultValue: "60000ms"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Maximum number of threads."
  name: "server.jetty.threads.max"
  defaultValue: 200
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Maximum capacity of the thread pool's backing queue. A default is\
    \ computed based on the threading configuration."
  name: "server.jetty.threads.max-queue-capacity"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Minimum number of threads."
  name: "server.jetty.threads.min"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads"
  type: "java.lang.Integer"
  description: "Number of selector threads to use. When the value is -1, the default,\
    \ the number of selectors is derived from the operating environment."
  name: "server.jetty.threads.selectors"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the HTTP message header."
  name: "server.max-http-header-size"
  defaultValue: "8KB"
- type: "java.lang.Integer"
  description: "Maximum size in bytes of the HTTP post content."
  name: "server.max-http-post-size"
  defaultValue: 0
  deprecationLevel: "ERROR"
  deprecationReason: "Use dedicated property for each container."
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "java.time.Duration"
  description: "Connection timeout of the Netty channel."
  name: "server.netty.connection-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum content length of an H2C upgrade request."
  name: "server.netty.h2c-max-content-length"
  defaultValue: "0B"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "org.springframework.util.unit.DataSize"
  description: "Initial buffer size for HTTP request decoding."
  name: "server.netty.initial-buffer-size"
  defaultValue: "128B"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum chunk size that can be decoded for an HTTP request."
  name: "server.netty.max-chunk-size"
  defaultValue: "8KB"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum length that can be decoded for an HTTP request's initial line."
  name: "server.netty.max-initial-line-length"
  defaultValue: "4KB"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
  type: "java.lang.Boolean"
  description: "Whether to validate headers when decoding requests."
  name: "server.netty.validate-headers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "java.lang.Integer"
  description: "Server HTTP port."
  name: "server.port"
  defaultValue: 8080
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "java.lang.String"
  description: "Value to use for the Server response header (if empty, no header is\
    \ sent)."
  name: "server.server-header"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  type: "java.lang.String"
  description: "Display name of the application."
  name: "server.servlet.application-display-name"
  defaultValue: "application"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Servlet context init parameters."
  name: "server.servlet.context-parameters"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  type: "java.lang.String"
  description: "Context path of the application."
  name: "server.servlet.context-path"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.nio.charset.Charset"
  name: "server.servlet.encoding.charset"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable http encoding support."
  name: "server.servlet.encoding.enabled"
  defaultValue: true
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.lang.Boolean"
  name: "server.servlet.encoding.force"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.lang.Boolean"
  name: "server.servlet.encoding.force-request"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.lang.Boolean"
  name: "server.servlet.encoding.force-response"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Encoding"
  type: "java.util.Map<java.util.Locale,java.nio.charset.Charset>"
  name: "server.servlet.encoding.mapping"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Jsp"
  type: "java.lang.String"
  description: "Class name of the servlet to use for JSPs. If registered is true and\
    \ this class\n\t * is on the classpath then it will be registered."
  name: "server.servlet.jsp.class-name"
  defaultValue: "org.apache.jasper.servlet.JspServlet"
- owner: "org.springframework.boot.web.servlet.server.Jsp"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Init parameters used to configure the JSP servlet."
  name: "server.servlet.jsp.init-parameters"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Jsp"
  type: "java.lang.Boolean"
  description: "Whether the JSP servlet is registered."
  name: "server.servlet.jsp.registered"
  defaultValue: true
- type: "java.lang.String"
  description: "Path of the main dispatcher servlet."
  name: "server.servlet.path"
  defaultValue: "/"
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.mvc.servlet.path"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet"
  type: "java.lang.Boolean"
  description: "Whether to register the default Servlet with the container."
  name: "server.servlet.register-default-servlet"
  defaultValue: false
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.String"
  description: "Comment for the session cookie."
  name: "server.servlet.session.cookie.comment"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.String"
  description: " Domain for the session cookie."
  name: "server.servlet.session.cookie.domain"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.Boolean"
  description: "Whether to use \"HttpOnly\" cookies for session cookies."
  name: "server.servlet.session.cookie.http-only"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.time.Duration"
  description: "Maximum age of the session cookie. If a duration suffix is not specified,\
    \ seconds will be used."
  name: "server.servlet.session.cookie.max-age"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.String"
  description: "Session cookie name."
  name: "server.servlet.session.cookie.name"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.String"
  description: "Path of the session cookie."
  name: "server.servlet.session.cookie.path"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session$Cookie"
  type: "java.lang.Boolean"
  description: "Whether to always mark the session cookie as secure."
  name: "server.servlet.session.cookie.secure"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session"
  type: "java.lang.Boolean"
  description: "Whether to persist session data between restarts."
  name: "server.servlet.session.persistent"
  defaultValue: false
- owner: "org.springframework.boot.web.servlet.server.Session"
  type: "java.io.File"
  description: "Directory used to store session data."
  name: "server.servlet.session.store-dir"
  defaultValue: ""
- owner: "org.springframework.boot.web.servlet.server.Session"
  type: "java.time.Duration"
  description: "Session timeout. If a duration suffix is not specified, seconds will\
    \ be used."
  name: "server.servlet.session.timeout"
  defaultValue: "30m"
- owner: "org.springframework.boot.web.servlet.server.Session"
  type: "java.util.Set<org.springframework.boot.web.servlet.server.Session$SessionTrackingMode>"
  description: "Session tracking modes."
  name: "server.servlet.session.tracking-modes"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties"
  type: "org.springframework.boot.web.server.Shutdown"
  description: "Type of shutdown that the server will support."
  name: "server.shutdown"
  defaultValue: "immediate"
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  description: "Supported SSL ciphers."
  name: "server.ssl.ciphers"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "org.springframework.boot.web.server.Ssl$ClientAuth"
  description: "Client authentication mode. Requires a trust store."
  name: "server.ssl.client-auth"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support."
  name: "server.ssl.enabled"
  defaultValue: true
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  description: "Enabled SSL protocols."
  name: "server.ssl.enabled-protocols"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Alias that identifies the key in the key store."
  name: "server.ssl.key-alias"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the key in the key store."
  name: "server.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Path to the key store that holds the SSL certificate (typically a\
    \ jks file)."
  name: "server.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  name: "server.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Provider for the key store."
  name: "server.ssl.key-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  name: "server.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  name: "server.ssl.protocol"
  defaultValue: "TLS"
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Trust store that holds SSL certificates."
  name: "server.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Password used to access the trust store."
  name: "server.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Provider for the trust store."
  name: "server.ssl.trust-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  name: "server.ssl.trust-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  description: "Maximum queue length for incoming connection requests when all possible\
    \ request processing threads are in use."
  name: "server.tomcat.accept-count"
  defaultValue: 100
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to buffer output such that it is flushed only periodically."
  name: "server.tomcat.accesslog.buffered"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to check for log file existence so it can be recreated it\
    \ if an external process has renamed it."
  name: "server.tomcat.accesslog.check-exists"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Whether logging of the request will only be enabled if \"ServletRequest.getAttribute(conditionIf)\"\
    \ does not yield null."
  name: "server.tomcat.accesslog.condition-if"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Whether logging of the request will only be enabled if \"ServletRequest.getAttribute(conditionUnless)\"\
    \ yield null."
  name: "server.tomcat.accesslog.condition-unless"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Directory in which log files are created. Can be absolute or relative\
    \ to the Tomcat base dir."
  name: "server.tomcat.accesslog.directory"
  defaultValue: "logs"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Enable access log."
  name: "server.tomcat.accesslog.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Character set used by the log file. Default to the system default\
    \ character set."
  name: "server.tomcat.accesslog.encoding"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Date format to place in the log file name."
  name: "server.tomcat.accesslog.file-date-format"
  defaultValue: ".yyyy-MM-dd"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to use IPv6 canonical representation format as defined by\
    \ RFC 5952."
  name: "server.tomcat.accesslog.ipv6-canonical"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Locale used to format timestamps in log entries and in log file name\
    \ suffix. Default to the default locale of the Java process."
  name: "server.tomcat.accesslog.locale"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Integer"
  description: "Number of days to retain the access log files before they are removed."
  name: "server.tomcat.accesslog.max-days"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Format pattern for access logs."
  name: "server.tomcat.accesslog.pattern"
  defaultValue: "common"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Log file name prefix."
  name: "server.tomcat.accesslog.prefix"
  defaultValue: "access_log"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to defer inclusion of the date stamp in the file name until\
    \ rotate time."
  name: "server.tomcat.accesslog.rename-on-rotate"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Set request attributes for the IP address, Hostname, protocol, and\
    \ port used for the request."
  name: "server.tomcat.accesslog.request-attributes-enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to enable access log rotation."
  name: "server.tomcat.accesslog.rotate"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
  type: "java.lang.String"
  description: "Log file name suffix."
  name: "server.tomcat.accesslog.suffix"
  defaultValue: ".log"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of additional patterns that match jars to ignore\
    \ for TLD scanning. The special '?' and '*' characters can be used in the pattern\
    \ to match one and only one character and zero or more characters respectively."
  name: "server.tomcat.additional-tld-skip-patterns"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.time.Duration"
  description: "Delay between the invocation of backgroundProcess methods. If a duration\
    \ suffix is not specified, seconds will be used."
  name: "server.tomcat.background-processor-delay"
  defaultValue: "10s"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.io.File"
  description: "Tomcat base directory. If not specified, a temporary directory is\
    \ used."
  name: "server.tomcat.basedir"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.time.Duration"
  description: "Amount of time the connector will wait, after accepting a connection,\
    \ for the request URI line to be presented."
  name: "server.tomcat.connection-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.String"
  name: "server.tomcat.host-header"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.tomcat.remoteip.host-header"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.String"
  name: "server.tomcat.internal-proxies"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.tomcat.remoteip.internal-proxies"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  description: "Maximum number of connections that the server accepts and processes\
    \ at any given time. Once the limit has been reached, the operating system may\
    \ still accept connections based on the \"acceptCount\" property."
  name: "server.tomcat.max-connections"
  defaultValue: 8192
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the form content in any HTTP post request."
  name: "server.tomcat.max-http-form-post-size"
  defaultValue: "2MB"
- type: "org.springframework.util.unit.DataSize"
  name: "server.tomcat.max-http-post-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.tomcat.max-http-form-post-size"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum amount of request body to swallow."
  name: "server.tomcat.max-swallow-size"
  defaultValue: "2MB"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  name: "server.tomcat.max-threads"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.tomcat.threads.max"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry"
  type: "java.lang.Boolean"
  description: "Whether Tomcat's MBean Registry should be enabled."
  name: "server.tomcat.mbeanregistry.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  name: "server.tomcat.min-spare-threads"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.tomcat.threads.min-spare"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.String"
  name: "server.tomcat.port-header"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.tomcat.remote.port-header"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Integer"
  description: "Maximum number of idle processors that will be retained in the cache\
    \ and reused with a subsequent request. When set to -1 the cache will be unlimited\
    \ with a theoretical maximum size equal to the maximum number of connections."
  name: "server.tomcat.processor-cache"
  defaultValue: 200
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.String"
  name: "server.tomcat.protocol-header"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.tomcat.remoteip.protocol-header"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.String"
  name: "server.tomcat.protocol-header-https-value"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.tomcat.remoteip.protocol-header-https-value"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Boolean"
  description: "Whether requests to the context root should be redirected by appending\
    \ a / to the path. When using SSL terminated at a proxy, this property should\
    \ be set to false."
  name: "server.tomcat.redirect-context-root"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.util.List<java.lang.Character>"
  description: "Comma-separated list of additional unencoded characters that should\
    \ be allowed in URI paths. Only \"< > [ \\ ] ^ ` { | }\" are allowed."
  name: "server.tomcat.relaxed-path-chars"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.util.List<java.lang.Character>"
  description: "Comma-separated list of additional unencoded characters that should\
    \ be allowed in URI query strings. Only \"< > [ \\ ] ^ ` { | }\" are allowed."
  name: "server.tomcat.relaxed-query-chars"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.String"
  name: "server.tomcat.remote-ip-header"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.tomcat.remoteip.remote-ip-header"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Name of the HTTP header from which the remote host is extracted."
  name: "server.tomcat.remoteip.host-header"
  defaultValue: "X-Forwarded-Host"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Regular expression that matches proxies that are to be trusted."
  name: "server.tomcat.remoteip.internal-proxies"
  defaultValue: "10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|192\\.168\\.\\d{1,3}\\.\\d{1,3}|169\\\
    .254\\.\\d{1,3}\\.\\d{1,3}|127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|172\\.1[6-9]{1}\\\
    .\\d{1,3}\\.\\d{1,3}|172\\.2[0-9]{1}\\.\\d{1,3}\\.\\d{1,3}|172\\.3[0-1]{1}\\.\\\
    d{1,3}\\.\\d{1,3}|0:0:0:0:0:0:0:1|::1"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Name of the HTTP header used to override the original port value."
  name: "server.tomcat.remoteip.port-header"
  defaultValue: "X-Forwarded-Port"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Header that holds the incoming protocol, usually named \"X-Forwarded-Proto\"\
    ."
  name: "server.tomcat.remoteip.protocol-header"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Value of the protocol header indicating whether the incoming request\
    \ uses SSL."
  name: "server.tomcat.remoteip.protocol-header-https-value"
  defaultValue: "https"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip"
  type: "java.lang.String"
  description: "Name of the HTTP header from which the remote IP is extracted. For\
    \ instance, `X-FORWARDED-FOR`."
  name: "server.tomcat.remoteip.remote-ip-header"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
  type: "java.lang.Boolean"
  description: "Whether static resource caching is permitted for this web application."
  name: "server.tomcat.resource.allow-caching"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
  type: "java.time.Duration"
  description: "Time-to-live of the static resource cache."
  name: "server.tomcat.resource.cache-ttl"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads"
  type: "java.lang.Integer"
  description: "Maximum amount of worker threads."
  name: "server.tomcat.threads.max"
  defaultValue: 200
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads"
  type: "java.lang.Integer"
  description: "Minimum amount of worker threads."
  name: "server.tomcat.threads.min-spare"
  defaultValue: 10
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.nio.charset.Charset"
  description: "Character encoding to use to decode the URI."
  name: "server.tomcat.uri-encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat"
  type: "java.lang.Boolean"
  description: "Whether HTTP 1.1 and later location headers generated by a call to\
    \ sendRedirect will use relative or absolute redirects."
  name: "server.tomcat.use-relative-redirects"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.io.File"
  description: "Undertow access log directory."
  name: "server.undertow.accesslog.dir"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to enable the access log."
  name: "server.undertow.accesslog.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.String"
  description: "Format pattern for access logs."
  name: "server.undertow.accesslog.pattern"
  defaultValue: "common"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.String"
  description: "Log file name prefix."
  name: "server.undertow.accesslog.prefix"
  defaultValue: "access_log."
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.Boolean"
  description: "Whether to enable access log rotation."
  name: "server.undertow.accesslog.rotate"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog"
  type: "java.lang.String"
  description: "Log file name suffix."
  name: "server.undertow.accesslog.suffix"
  defaultValue: "log"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether the server should decode percent encoded slash characters.\
    \ Enabling encoded slashes can have security implications due to different servers\
    \ interpreting the slash differently. Only enable this if you have a legacy application\
    \ that requires it."
  name: "server.undertow.allow-encoded-slash"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether the 'Connection: keep-alive' header should be added to all\
    \ responses, even if not required by the HTTP specification."
  name: "server.undertow.always-set-keep-alive"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "org.springframework.util.unit.DataSize"
  description: "Size of each buffer. The default is derived from the maximum amount\
    \ of memory that is available to the JVM."
  name: "server.undertow.buffer-size"
  defaultValue: ""
- type: "java.lang.Integer"
  description: "Number of buffer per region."
  name: "server.undertow.buffers-per-region"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether the URL should be decoded. When disabled, percent-encoded\
    \ characters in the URL will be left as-is."
  name: "server.undertow.decode-url"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether to allocate buffers outside the Java heap. The default is\
    \ derived from the maximum amount of memory that is available to the JVM."
  name: "server.undertow.direct-buffers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether servlet filters should be initialized on startup."
  name: "server.undertow.eager-filter-init"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Integer"
  name: "server.undertow.io-threads"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.undertow.threads.io"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Integer"
  description: "Maximum number of cookies that are allowed. This limit exists to prevent\
    \ hash collision based DOS attacks."
  name: "server.undertow.max-cookies"
  defaultValue: 200
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Integer"
  description: "Maximum number of headers that are allowed. This limit exists to prevent\
    \ hash collision based DOS attacks."
  name: "server.undertow.max-headers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the HTTP post content. When the value is -1, the default,\
    \ the size is unlimited."
  name: "server.undertow.max-http-post-size"
  defaultValue: "-1B"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Integer"
  description: "Maximum number of query or path parameters that are allowed. This\
    \ limit exists to prevent hash collision based DOS attacks."
  name: "server.undertow.max-parameters"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.time.Duration"
  description: "Amount of time a connection can sit idle without processing a request,\
    \ before it is closed by the server."
  name: "server.undertow.no-request-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "server.undertow.options.server"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "server.undertow.options.socket"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Boolean"
  description: "Whether to preserve the path of a request when it is forwarded."
  name: "server.undertow.preserve-path-on-forward"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads"
  type: "java.lang.Integer"
  description: "Number of I/O threads to create for the worker. The default is derived\
    \ from the number of available processors."
  name: "server.undertow.threads.io"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads"
  type: "java.lang.Integer"
  description: "Number of worker threads. The default is 8 times the number of I/O\
    \ threads."
  name: "server.undertow.threads.worker"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.nio.charset.Charset"
  description: "Charset used to decode URLs."
  name: "server.undertow.url-charset"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
  type: "java.lang.Integer"
  name: "server.undertow.worker-threads"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "server.undertow.threads.worker"
- type: "java.lang.Boolean"
  name: "server.use-forward-headers"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Replaced to support additional strategies."
  deprecationReplacement: "server.forward-headers-strategy"
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.String"
  description: "URL of the ActiveMQ broker. Auto-generated by default."
  name: "spring.activemq.broker-url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.time.Duration"
  description: "Time to wait before considering a close complete."
  name: "spring.activemq.close-timeout"
  defaultValue: "15s"
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.Boolean"
  description: "Whether the default broker URL should be in memory. Ignored if an\
    \ explicit broker has been specified."
  name: "spring.activemq.in-memory"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.Boolean"
  description: "Whether to stop message delivery before re-delivering messages from\
    \ a rolled back transaction. This implies that message order is not preserved\
    \ when this is enabled."
  name: "spring.activemq.non-blocking-redelivery"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties$Packages"
  type: "java.lang.Boolean"
  description: "Whether to trust all packages."
  name: "spring.activemq.packages.trust-all"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties$Packages"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of specific packages to trust (when not trusting\
    \ all packages)."
  name: "spring.activemq.packages.trusted"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.String"
  description: "Login password of the broker."
  name: "spring.activemq.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether to block when a connection is requested and the pool is full.\
    \ Set it to false to throw a \"JMSException\" instead."
  name: "spring.activemq.pool.block-if-full"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Blocking period before throwing an exception if the pool is still\
    \ full."
  name: "spring.activemq.pool.block-if-full-timeout"
  defaultValue: "-1ms"
- type: "java.lang.Boolean"
  description: "Whether to create a connection on startup. Can be used to warm up\
    \ the pool on startup."
  name: "spring.activemq.pool.create-connection-on-startup"
  defaultValue: true
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether a JmsPoolConnectionFactory should be created, instead of a\
    \ regular ConnectionFactory."
  name: "spring.activemq.pool.enabled"
  defaultValue: false
- type: "java.time.Duration"
  description: "Connection expiration timeout."
  name: "spring.activemq.pool.expiry-timeout"
  defaultValue: "0ms"
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Connection idle timeout."
  name: "spring.activemq.pool.idle-timeout"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of pooled connections."
  name: "spring.activemq.pool.max-connections"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of pooled sessions per connection in the pool."
  name: "spring.activemq.pool.max-sessions-per-connection"
  defaultValue: 500
- name: "spring.activemq.pool.maximum-active-session-per-connection"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.activemq.pool.max-sessions-per-connection"
- type: "java.lang.Boolean"
  description: "Reset the connection when a \"JMSException\" occurs."
  name: "spring.activemq.pool.reconnect-on-exception"
  defaultValue: true
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Time to sleep between runs of the idle connection eviction thread.\
    \ When negative, no idle connection eviction thread runs."
  name: "spring.activemq.pool.time-between-expiration-check"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether to use only one anonymous \"MessageProducer\" instance. Set\
    \ it to false to create one \"MessageProducer\" every time one is required."
  name: "spring.activemq.pool.use-anonymous-producers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.time.Duration"
  description: "Time to wait on message sends for a response. Set it to 0 to wait\
    \ forever."
  name: "spring.activemq.send-timeout"
  defaultValue: "0ms"
- owner: "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQProperties"
  type: "java.lang.String"
  description: "Login user of the broker."
  name: "spring.activemq.user"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Add @EnableAspectJAutoProxy."
  name: "spring.aop.auto"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether subclass-based (CGLIB) proxies are to be created (true), as\
    \ opposed to standard Java interface-based proxies (false)."
  name: "spring.aop.proxy-target-class"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable admin features for the application."
  name: "spring.application.admin.enabled"
  defaultValue: false
- type: "java.lang.String"
  description: "JMX name of the application admin MBean."
  name: "spring.application.admin.jmx-name"
  defaultValue: "org.springframework.boot:type=Admin,name=SpringApplication"
- type: "java.lang.Integer"
  description: "Application index."
  name: "spring.application.index"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Application context ids are now unique by default."
- owner: "org.springframework.boot.context.ContextIdApplicationContextInitializer"
  type: "java.lang.String"
  description: "Application name."
  name: "spring.application.name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.String"
  description: "Cluster password. Randomly generated on startup by default."
  name: "spring.artemis.embedded.cluster-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.String"
  description: "Journal file directory. Not necessary if persistence is turned off."
  name: "spring.artemis.embedded.data-directory"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.Boolean"
  description: "Whether to enable embedded mode if the Artemis server APIs are available."
  name: "spring.artemis.embedded.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.Boolean"
  description: "Whether to enable persistent store."
  name: "spring.artemis.embedded.persistent"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.String[]"
  description: "Comma-separated list of queues to create on startup."
  name: "spring.artemis.embedded.queues"
  defaultValue: []
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.Integer"
  description: "Server ID. By default, an auto-incremented counter is used."
  name: "spring.artemis.embedded.server-id"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties$Embedded"
  type: "java.lang.String[]"
  description: "Comma-separated list of topics to create on startup."
  name: "spring.artemis.embedded.topics"
  defaultValue: []
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.String"
  description: "Artemis broker host."
  name: "spring.artemis.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisMode"
  description: "Artemis deployment mode, auto-detected by default."
  name: "spring.artemis.mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.String"
  description: "Login password of the broker."
  name: "spring.artemis.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether to block when a connection is requested and the pool is full.\
    \ Set it to false to throw a \"JMSException\" instead."
  name: "spring.artemis.pool.block-if-full"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Blocking period before throwing an exception if the pool is still\
    \ full."
  name: "spring.artemis.pool.block-if-full-timeout"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether a JmsPoolConnectionFactory should be created, instead of a\
    \ regular ConnectionFactory."
  name: "spring.artemis.pool.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Connection idle timeout."
  name: "spring.artemis.pool.idle-timeout"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of pooled connections."
  name: "spring.artemis.pool.max-connections"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Integer"
  description: "Maximum number of pooled sessions per connection in the pool."
  name: "spring.artemis.pool.max-sessions-per-connection"
  defaultValue: 500
- name: "spring.artemis.pool.maximum-active-session-per-connection"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.artemis.pool.max-sessions-per-connection"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.time.Duration"
  description: "Time to sleep between runs of the idle connection eviction thread.\
    \ When negative, no idle connection eviction thread runs."
  name: "spring.artemis.pool.time-between-expiration-check"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.jms.JmsPoolConnectionFactoryProperties"
  type: "java.lang.Boolean"
  description: "Whether to use only one anonymous \"MessageProducer\" instance. Set\
    \ it to false to create one \"MessageProducer\" every time one is required."
  name: "spring.artemis.pool.use-anonymous-producers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.Integer"
  description: "Artemis broker port."
  name: "spring.artemis.port"
  defaultValue: 61616
- owner: "org.springframework.boot.autoconfigure.jms.artemis.ArtemisProperties"
  type: "java.lang.String"
  description: "Login user of the broker."
  name: "spring.artemis.user"
  defaultValue: ""
- type: "java.util.List<java.lang.Class>"
  description: "Auto-configuration classes to exclude."
  name: "spring.autoconfigure.exclude"
  defaultValue: ""
- type: "java.nio.charset.Charset"
  description: "Banner file encoding."
  name: "spring.banner.charset"
  defaultValue: "UTF-8"
- type: "java.lang.Integer"
  description: "Bit depth to use for ANSI colors. Supported values are 4 (16 color)\
    \ or 8 (256 color)."
  name: "spring.banner.image.bitdepth"
  defaultValue: 4
- type: "java.lang.Integer"
  description: "Height of the banner image in chars (default based on image height)."
  name: "spring.banner.image.height"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether images should be inverted for dark terminal themes."
  name: "spring.banner.image.invert"
  defaultValue: false
- type: "org.springframework.core.io.Resource"
  description: "Banner image file location (jpg or png can also be used)."
  name: "spring.banner.image.location"
  defaultValue: "classpath:banner.gif"
- type: "java.lang.Integer"
  description: "Left hand image margin in chars."
  name: "spring.banner.image.margin"
  defaultValue: 2
- type: "org.springframework.boot.ImageBanner$PixelMode"
  description: "Pixel mode to use when rendering the image."
  name: "spring.banner.image.pixelmode"
  defaultValue: "TEXT"
- type: "java.lang.Integer"
  description: "Width of the banner image in chars."
  name: "spring.banner.image.width"
  defaultValue: 76
- type: "org.springframework.core.io.Resource"
  description: "Banner text resource location."
  name: "spring.banner.location"
  defaultValue: "classpath:banner.txt"
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Database schema initialization mode."
  name: "spring.batch.initialize-schema"
  defaultValue: "embedded"
- type: "java.lang.Boolean"
  description: "Create the required batch tables on startup if necessary. Enabled\
    \ automatically\n if no custom table prefix is set or if a custom schema is configured."
  name: "spring.batch.initializer.enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.batch.initialize-schema"
- type: "java.lang.Boolean"
  description: "Execute all Spring Batch jobs in the context on startup."
  name: "spring.batch.job.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties$Job"
  type: "java.lang.String"
  description: "Comma-separated list of job names to execute on startup (for instance,\
    \ `job1,job2`). By default, all Jobs found in the context are executed."
  name: "spring.batch.job.names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties"
  type: "java.lang.String"
  description: "Path to the SQL file to use to initialize the database schema."
  name: "spring.batch.schema"
  defaultValue: "classpath:org/springframework/batch/core/schema-@@platform@@.sql"
- owner: "org.springframework.boot.autoconfigure.batch.BatchProperties"
  type: "java.lang.String"
  description: "Table prefix for all the batch meta-data tables."
  name: "spring.batch.table-prefix"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.lang.Boolean"
  description: "Whether to skip search of BeanInfo classes."
  name: "spring.beaninfo.ignore"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of cache names to create if supported by the\
    \ underlying cache manager. Usually, this disables the ability to create additional\
    \ caches on-the-fly."
  name: "spring.cache.cache-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Caffeine"
  type: "java.lang.String"
  description: "The spec to use to create caches. See CaffeineSpec for more details\
    \ on the spec format."
  name: "spring.cache.caffeine.spec"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Couchbase"
  type: "java.time.Duration"
  description: "Entry expiration. By default the entries never expire. Note that this\
    \ value is ultimately converted to seconds."
  name: "spring.cache.couchbase.expiration"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$EhCache"
  type: "org.springframework.core.io.Resource"
  description: "The location of the configuration file to use to initialize EhCache."
  name: "spring.cache.ehcache.config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Infinispan"
  type: "org.springframework.core.io.Resource"
  description: "The location of the configuration file to use to initialize Infinispan."
  name: "spring.cache.infinispan.config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
  type: "org.springframework.core.io.Resource"
  description: "The location of the configuration file to use to initialize the cache\
    \ manager. The configuration file is dependent of the underlying cache implementation."
  name: "spring.cache.jcache.config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
  type: "java.lang.String"
  description: "Fully qualified name of the CachingProvider implementation to use\
    \ to retrieve the JSR-107 compliant cache manager. Needed only if more than one\
    \ JSR-107 implementation is available on the classpath."
  name: "spring.cache.jcache.provider"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.lang.Boolean"
  description: "Allow caching null values."
  name: "spring.cache.redis.cache-null-values"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.lang.Boolean"
  description: "Whether to enable cache statistics."
  name: "spring.cache.redis.enable-statistics"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.lang.String"
  description: "Key prefix."
  name: "spring.cache.redis.key-prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.time.Duration"
  description: "Entry expiration. By default the entries never expire."
  name: "spring.cache.redis.time-to-live"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
  type: "java.lang.Boolean"
  description: "Whether to use the key prefix when writing to Redis."
  name: "spring.cache.redis.use-key-prefix"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.cache.CacheProperties"
  type: "org.springframework.boot.autoconfigure.cache.CacheType"
  description: "Cache type. By default, auto-detected according to the environment."
  name: "spring.cache.type"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
  type: "java.util.List<java.lang.String>"
  description: "Default accepted versions for the Spring Boot dependency. You can\
    \ set {@code x} for the patch version if you don't want to specify a concrete\
    \ value. Example: {@code 3.4.x}"
  name: "spring.cloud.compatibility-verifier.compatible-boot-versions"
  defaultValue: ""
- owner: "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
  type: "java.lang.Boolean"
  description: "Enables creation of Spring Cloud compatibility verification."
  name: "spring.cloud.compatibility-verifier.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that {@link #isOverrideSystemProperties() systemPropertiesOverride}\
    \ can be used. Set to false to prevent users from changing the default accidentally.\
    \ Default true."
  name: "spring.cloud.config.allow-override"
  defaultValue: true
- owner: "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that when {@link #setAllowOverride(boolean) allowOverride}\
    \ is true, external properties should take lowest priority and should not override\
    \ any existing property sources (including local config files). Default false."
  name: "spring.cloud.config.override-none"
  defaultValue: false
- owner: "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapProperties"
  type: "java.lang.Boolean"
  description: "Flag to indicate that the external properties should override system\
    \ properties. Default true."
  name: "spring.cloud.config.override-system-properties"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables discovery client composite health indicator."
  name: "spring.cloud.discovery.client.composite-indicator.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.discovery.client.health-indicator.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
  type: "java.lang.Boolean"
  name: "spring.cloud.discovery.client.health-indicator.include-description"
  defaultValue: false
- owner: "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
  type: "java.util.Map<java.lang.String,java.util.List<org.springframework.cloud.client.DefaultServiceInstance>>"
  name: "spring.cloud.discovery.client.simple.instances"
  defaultValue: ""
- owner: "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties"
  type: "java.lang.Integer"
  name: "spring.cloud.discovery.client.simple.order"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Enables discovery client health indicators."
  name: "spring.cloud.discovery.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables the features endpoint."
  name: "spring.cloud.features.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables creation of Apache Http Client factory beans."
  name: "spring.cloud.httpclientfactories.apache.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables creation of OK Http Client factory beans."
  name: "spring.cloud.httpclientfactories.ok.enabled"
  defaultValue: "true"
- owner: "org.springframework.cloud.client.hypermedia.CloudHypermediaAutoConfiguration$CloudHypermediaProperties$Refresh"
  type: "java.lang.Integer"
  name: "spring.cloud.hypermedia.refresh.fixed-delay"
  defaultValue: 5000
- owner: "org.springframework.cloud.client.hypermedia.CloudHypermediaAutoConfiguration$CloudHypermediaProperties$Refresh"
  type: "java.lang.Integer"
  name: "spring.cloud.hypermedia.refresh.initial-delay"
  defaultValue: 10000
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.lang.String"
  description: "The default hostname. Used in case of errors."
  name: "spring.cloud.inetutils.default-hostname"
  defaultValue: "localhost"
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.lang.String"
  description: "The default IP address. Used in case of errors."
  name: "spring.cloud.inetutils.default-ip-address"
  defaultValue: "127.0.0.1"
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of Java regular expressions for network interfaces that will\
    \ be ignored."
  name: "spring.cloud.inetutils.ignored-interfaces"
  defaultValue: ""
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of Java regular expressions for network addresses that will be\
    \ preferred."
  name: "spring.cloud.inetutils.preferred-networks"
  defaultValue: ""
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for calculating hostname."
  name: "spring.cloud.inetutils.timeout-seconds"
  defaultValue: 1
- owner: "org.springframework.cloud.commons.util.InetUtilsProperties"
  type: "java.lang.Boolean"
  description: "Whether to use only interfaces with site local addresses. See {@link\
    \ InetAddress#isSiteLocalAddress()} for more details."
  name: "spring.cloud.inetutils.use-only-site-local-interfaces"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.time.Duration"
  description: "Initial delay value for the HealthCheck scheduler."
  name: "spring.cloud.loadbalancer.health-check.initial-delay"
  defaultValue: 0
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.time.Duration"
  description: "Interval for rerunning the HealthCheck scheduler."
  name: "spring.cloud.loadbalancer.health-check.interval"
  defaultValue: "25s"
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  name: "spring.cloud.loadbalancer.health-check.path"
  defaultValue: ""
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.lang.Boolean"
  description: "Indicates whether the instances should be refetched by the <code>HealthCheckServiceInstanceListSupplier</code>.\
    \ This can be used if the instances can be updated and the underlying delegate\
    \ does not provide an ongoing flux."
  name: "spring.cloud.loadbalancer.health-check.refetch-instances"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.time.Duration"
  description: "Interval for refetching available service instances."
  name: "spring.cloud.loadbalancer.health-check.refetch-instances-interval"
  defaultValue: "25s"
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"
  type: "java.lang.Boolean"
  description: "Indicates whether health checks should keep repeating. It might be\
    \ useful to set it to <code>false</code> if periodically refetching the instances,\
    \ as every refetch will also trigger a healthcheck."
  name: "spring.cloud.loadbalancer.health-check.repeat-health-check"
  defaultValue: true
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Allows setting the value of <code>hint</code> that is passed on to\
    \ the LoadBalancer request and can subsequently be used in {@link ReactiveLoadBalancer}\
    \ implementations."
  name: "spring.cloud.loadbalancer.hint"
  defaultValue: ""
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
  type: "java.lang.Boolean"
  description: "Indicates whether Reactor Retry backoffs should be applied."
  name: "spring.cloud.loadbalancer.retry.backoff.enabled"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
  type: "java.lang.Double"
  description: "Used to set {@link RetryBackoffSpec#jitter}."
  name: "spring.cloud.loadbalancer.retry.backoff.jitter"
  defaultValue: 0.5
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
  type: "java.time.Duration"
  description: "Used to set {@link RetryBackoffSpec#maxBackoff}."
  name: "spring.cloud.loadbalancer.retry.backoff.max-backoff"
  defaultValue: ""
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff"
  type: "java.time.Duration"
  description: "Used to set {@link RetryBackoffSpec#minBackoff}."
  name: "spring.cloud.loadbalancer.retry.backoff.min-backoff"
  defaultValue: "5ms"
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.lang.Boolean"
  description: "Enables LoadBalancer retries."
  name: "spring.cloud.loadbalancer.retry.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.lang.Integer"
  description: "Number of retries to be executed on the next <code>ServiceInstance</code>.\
    \ A <code>ServiceInstance</code> is chosen before each retry call."
  name: "spring.cloud.loadbalancer.retry.max-retries-on-next-service-instance"
  defaultValue: 1
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.lang.Integer"
  description: "Number of retries to be executed on the same <code>ServiceInstance</code>."
  name: "spring.cloud.loadbalancer.retry.max-retries-on-same-service-instance"
  defaultValue: 0
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.lang.Boolean"
  description: "Indicates retries should be attempted on operations other than {@link\
    \ HttpMethod#GET}."
  name: "spring.cloud.loadbalancer.retry.retry-on-all-operations"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"
  type: "java.util.Set<java.lang.Integer>"
  description: "A {@link Set} of status codes that should trigger a retry."
  name: "spring.cloud.loadbalancer.retry.retryable-status-codes"
  defaultValue: ""
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"
  type: "java.lang.Boolean"
  description: "Indicates whether a cookie with the newly selected instance should\
    \ be added by SC LoadBalancer."
  name: "spring.cloud.loadbalancer.sticky-session.add-service-instance-cookie"
  defaultValue: false
- owner: "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"
  type: "java.lang.String"
  description: "The name of the cookie holding the preferred instance id."
  name: "spring.cloud.loadbalancer.sticky-session.instance-id-cookie-name"
  defaultValue: "sc-lb-instance-id"
- type: "java.lang.Boolean"
  description: "Enables autoconfiguration for the refresh scope and associated features."
  name: "spring.cloud.refresh.enabled"
  defaultValue: "true"
- type: "java.util.Set<java.lang.String>"
  description: "Additional class names for beans to post process into refresh scope."
  name: "spring.cloud.refresh.extra-refreshable"
  defaultValue: true
- type: "java.lang.String"
  description: "Comma separated list of class names for beans to never be refreshed\
    \ or rebound."
  name: "spring.cloud.refresh.never-refreshable"
  defaultValue: true
- owner: "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties"
  type: "java.lang.Boolean"
  description: "Whether service auto-registration is enabled. Defaults to true."
  name: "spring.cloud.service-registry.auto-registration.enabled"
  defaultValue: true
- owner: "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties"
  type: "java.lang.Boolean"
  description: "Whether startup fails if there is no AutoServiceRegistration. Defaults\
    \ to false."
  name: "spring.cloud.service-registry.auto-registration.fail-fast"
  defaultValue: false
- owner: "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties"
  type: "java.lang.Boolean"
  description: "Whether to register the management as a service. Defaults to true."
  name: "spring.cloud.service-registry.auto-registration.register-management"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Enables creation of Spring Cloud utility beans."
  name: "spring.cloud.util.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.codec.CodecProperties"
  type: "java.lang.Boolean"
  description: "Whether to log form data at DEBUG level, and headers at TRACE level."
  name: "spring.codec.log-request-details"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.codec.CodecProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Limit on the number of bytes that can be buffered whenever the input\
    \ stream needs to be aggregated. This applies only to the auto-configured WebFlux\
    \ server and WebClient instances. By default this is not set, in which case individual\
    \ codec defaults apply. Most codecs are limited to 256K by default."
  name: "spring.codec.max-in-memory-size"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigDataProperties"
  type: "org.springframework.boot.cloud.CloudPlatform"
  description: "Required cloud platform for the document to be included."
  name: "spring.config.activate.on-cloud-platform"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigDataProperties"
  type: "java.lang.String[]"
  description: "Profile expressions that should match for the document to be included."
  name: "spring.config.activate.on-profile"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.lang.String"
  description: "Config file locations used in addition to the defaults."
  name: "spring.config.additional-location"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigDataProperties"
  type: "java.util.List<java.lang.String>"
  description: "Import additional config data."
  name: "spring.config.import"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.lang.String"
  description: "Config file locations that replace the defaults."
  name: "spring.config.location"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.lang.String"
  description: "Config file name."
  name: "spring.config.name"
  defaultValue: "application"
- type: "java.util.List<java.lang.String>"
  description: "Couchbase nodes (host or IP address) to bootstrap from."
  name: "spring.couchbase.bootstrap-hosts"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.connection-string"
- type: "java.lang.String"
  description: "Name of the bucket to connect to."
  name: "spring.couchbase.bucket.name"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "A bucket is no longer auto-configured."
- type: "java.lang.String"
  description: "Password of the bucket."
  name: "spring.couchbase.bucket.password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "A bucket is no longer auto-configured."
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties"
  type: "java.lang.String"
  description: "Connection string used to locate the Couchbase cluster."
  name: "spring.couchbase.connection-string"
  defaultValue: ""
- type: "java.lang.Integer"
  description: "Port for the HTTP bootstrap."
  name: "spring.couchbase.env.bootstrap.http-direct-port"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Port for the HTTPS bootstrap."
  name: "spring.couchbase.env.bootstrap.http-ssl-port"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Number of sockets per node against the key/value service."
  name: "spring.couchbase.env.endpoints.key-value"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Number of sockets per node against the query (N1QL) service."
  name: "spring.couchbase.env.endpoints.query"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Maximum number of sockets per node."
  name: "spring.couchbase.env.endpoints.queryservice.max-endpoints"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.env.io.max-endpoints"
- type: "java.lang.Integer"
  description: "Minimum number of sockets per node."
  name: "spring.couchbase.env.endpoints.queryservice.min-endpoints"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.env.io.min-endpoints"
- type: "java.lang.Integer"
  description: "Number of sockets per node against the view service."
  name: "spring.couchbase.env.endpoints.view"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Maximum number of sockets per node."
  name: "spring.couchbase.env.endpoints.viewservice.max-endpoints"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.env.io.max-endpoints"
- type: "java.lang.Integer"
  description: "Minimum number of sockets per node."
  name: "spring.couchbase.env.endpoints.viewservice.min-endpoints"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.couchbase.env.io.min-endpoints"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Io"
  type: "java.time.Duration"
  description: "Length of time an HTTP connection may remain idle before it is closed\
    \ and removed from the pool."
  name: "spring.couchbase.env.io.idle-http-connection-timeout"
  defaultValue: "4500ms"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Io"
  type: "java.lang.Integer"
  description: "Maximum number of sockets per node."
  name: "spring.couchbase.env.io.max-endpoints"
  defaultValue: 12
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Io"
  type: "java.lang.Integer"
  description: "Minimum number of sockets per node."
  name: "spring.couchbase.env.io.min-endpoints"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support. Enabled automatically if a \"keyStore\"\
    \ is provided unless specified otherwise."
  name: "spring.couchbase.env.ssl.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl"
  type: "java.lang.String"
  description: "Path to the JVM key store that holds the certificates."
  name: "spring.couchbase.env.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  name: "spring.couchbase.env.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for the analytics service."
  name: "spring.couchbase.env.timeouts.analytics"
  defaultValue: "75s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Bucket connect timeout."
  name: "spring.couchbase.env.timeouts.connect"
  defaultValue: "10s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Bucket disconnect timeout."
  name: "spring.couchbase.env.timeouts.disconnect"
  defaultValue: "10s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for operations on a specific key-value."
  name: "spring.couchbase.env.timeouts.key-value"
  defaultValue: "2500ms"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for operations on a specific key-value with a durability level."
  name: "spring.couchbase.env.timeouts.key-value-durable"
  defaultValue: "10s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for the management operations."
  name: "spring.couchbase.env.timeouts.management"
  defaultValue: "75s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "N1QL query operations timeout."
  name: "spring.couchbase.env.timeouts.query"
  defaultValue: "75s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Timeout for the search service."
  name: "spring.couchbase.env.timeouts.search"
  defaultValue: "75s"
- type: "java.time.Duration"
  description: "Socket connect connections timeout."
  name: "spring.couchbase.env.timeouts.socket-connect"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties$Timeouts"
  type: "java.time.Duration"
  description: "Regular and geospatial view operations timeout."
  name: "spring.couchbase.env.timeouts.view"
  defaultValue: "75s"
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties"
  type: "java.lang.String"
  description: "Cluster password."
  name: "spring.couchbase.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.couchbase.CouchbaseProperties"
  type: "java.lang.String"
  description: "Cluster username."
  name: "spring.couchbase.username"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable the PersistenceExceptionTranslationPostProcessor."
  name: "spring.dao.exceptiontranslation.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  name: "spring.data.cassandra.cluster-name"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.data.cassandra.session-name"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Compression"
  description: "Compression supported by the Cassandra binary protocol."
  name: "spring.data.cassandra.compression"
  defaultValue: "none"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.time.Duration"
  name: "spring.data.cassandra.connect-timeout"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.data.cassandra.connection.init-query-timeout"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Connection"
  type: "java.time.Duration"
  description: "Timeout to use when establishing driver connections."
  name: "spring.data.cassandra.connection.connect-timeout"
  defaultValue: "5s"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Connection"
  type: "java.time.Duration"
  description: "Timeout to use for internal queries that run as part of the initialization\
    \ process, just after a connection is opened."
  name: "spring.data.cassandra.connection.init-query-timeout"
  defaultValue: "500ms"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "com.datastax.oss.driver.api.core.DefaultConsistencyLevel"
  name: "spring.data.cassandra.consistency-level"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.data.cassandra.request.consistency"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.util.List<java.lang.String>"
  description: "Cluster node addresses in the form 'host:port', or a simple 'host'\
    \ to use the configured port."
  name: "spring.data.cassandra.contact-points"
  defaultValue:
  - "127.0.0.1:9042"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.Integer"
  name: "spring.data.cassandra.fetch-size"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.data.cassandra.request.page-size"
- type: "java.lang.Boolean"
  description: "Whether to enable JMX reporting. Default to false as Cassandra JMX\
    \ reporting is not compatible with Dropwizard Metrics."
  name: "spring.data.cassandra.jmx-enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Cassandra no longer provides JMX metrics."
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Keyspace name to use."
  name: "spring.data.cassandra.keyspace-name"
  defaultValue: ""
- type: "java.lang.Class"
  description: "Class name of the load balancing policy. The class must have a default\
    \ constructor."
  name: "spring.data.cassandra.load-balancing-policy"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Datacenter that is considered \"local\". Contact points should be\
    \ from this datacenter."
  name: "spring.data.cassandra.local-datacenter"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Login password of the server."
  name: "spring.data.cassandra.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Pool"
  type: "java.time.Duration"
  description: "Heartbeat interval after which a message is sent on an idle connection\
    \ to make sure it's still alive."
  name: "spring.data.cassandra.pool.heartbeat-interval"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Pool"
  type: "java.time.Duration"
  description: "Idle timeout before an idle connection is removed."
  name: "spring.data.cassandra.pool.idle-timeout"
  defaultValue: "120s"
- type: "java.lang.Integer"
  name: "spring.data.cassandra.pool.max-queue-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.data.cassandra.request.throttler.max-queue-size"
- type: "java.time.Duration"
  description: "Pool timeout when trying to acquire a connection from a host's pool."
  name: "spring.data.cassandra.pool.pool-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "No longer available."
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.Integer"
  description: "Port to use if a contact point does not specify one."
  name: "spring.data.cassandra.port"
  defaultValue: 9042
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.time.Duration"
  name: "spring.data.cassandra.read-timeout"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.data.cassandra.request.timeout"
- type: "java.lang.Class"
  description: "Class name of the reconnection policy. The class must have a default\
    \ constructor."
  name: "spring.data.cassandra.reconnection-policy"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "org.springframework.boot.autoconfigure.data.RepositoryType"
  description: "Type of Cassandra repositories to enable."
  name: "spring.data.cassandra.repositories.type"
  defaultValue: "auto"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Request"
  type: "com.datastax.oss.driver.api.core.DefaultConsistencyLevel"
  description: "Queries consistency level."
  name: "spring.data.cassandra.request.consistency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Request"
  type: "java.lang.Integer"
  description: "How many rows will be retrieved simultaneously in a single network\
    \ roundtrip."
  name: "spring.data.cassandra.request.page-size"
  defaultValue: 5000
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Request"
  type: "com.datastax.oss.driver.api.core.DefaultConsistencyLevel"
  description: "Queries serial consistency level."
  name: "spring.data.cassandra.request.serial-consistency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "java.time.Duration"
  description: "How often the throttler attempts to dequeue requests. Set this high\
    \ enough that each attempt will process multiple entries in the queue, but not\
    \ delay requests too much."
  name: "spring.data.cassandra.request.throttler.drain-interval"
  defaultValue: "10ms"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "java.lang.Integer"
  description: "Maximum number of requests that are allowed to execute in parallel."
  name: "spring.data.cassandra.request.throttler.max-concurrent-requests"
  defaultValue: 10000
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "java.lang.Integer"
  description: "Maximum number of requests that can be enqueued when the throttling\
    \ threshold is exceeded."
  name: "spring.data.cassandra.request.throttler.max-queue-size"
  defaultValue: 10000
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "java.lang.Integer"
  description: "Maximum allowed request rate."
  name: "spring.data.cassandra.request.throttler.max-requests-per-second"
  defaultValue: 10000
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Throttler"
  type: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$ThrottlerType"
  description: "Request throttling type."
  name: "spring.data.cassandra.request.throttler.type"
  defaultValue: "none"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties$Request"
  type: "java.time.Duration"
  description: "How long the driver waits for a request to complete."
  name: "spring.data.cassandra.request.timeout"
  defaultValue: "2s"
- type: "java.lang.Class"
  description: "Class name of the retry policy. The class must have a default constructor."
  name: "spring.data.cassandra.retry-policy"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Schema action to take at startup."
  name: "spring.data.cassandra.schema-action"
  defaultValue: "none"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "com.datastax.oss.driver.api.core.DefaultConsistencyLevel"
  name: "spring.data.cassandra.serial-consistency-level"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.data.cassandra.request.serial-consistency"
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Name of the Cassandra session."
  name: "spring.data.cassandra.session-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.Boolean"
  description: "Enable SSL support."
  name: "spring.data.cassandra.ssl"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.cassandra.CassandraProperties"
  type: "java.lang.String"
  description: "Login user of the server."
  name: "spring.data.cassandra.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.Boolean"
  description: "Automatically create views and indexes. Use the meta-data provided\
    \ by \"@ViewIndexed\", \"@N1qlPrimaryIndexed\" and \"@N1qlSecondaryIndexed\"."
  name: "spring.data.couchbase.auto-index"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.String"
  description: "Name of the bucket to connect to."
  name: "spring.data.couchbase.bucket-name"
  defaultValue: ""
- type: "org.springframework.data.couchbase.core.query.Consistency"
  name: "spring.data.couchbase.consistency"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.Class<?>"
  description: "Fully qualified name of the FieldNamingStrategy to use."
  name: "spring.data.couchbase.field-naming-strategy"
  defaultValue: ""
- type: "org.springframework.boot.autoconfigure.data.RepositoryType"
  description: "Type of Couchbase repositories to enable."
  name: "spring.data.couchbase.repositories.type"
  defaultValue: "auto"
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.String"
  description: "Name of the scope used for all collection access."
  name: "spring.data.couchbase.scope-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataProperties"
  type: "java.lang.String"
  description: "Name of the field that stores the type information for complex types\
    \ when using \"MappingCouchbaseConverter\"."
  name: "spring.data.couchbase.type-key"
  defaultValue: "_class"
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.time.Duration"
  description: "Connection timeout."
  name: "spring.data.elasticsearch.client.reactive.connection-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of the Elasticsearch endpoints to connect to."
  name: "spring.data.elasticsearch.client.reactive.endpoints"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Limit on the number of bytes that can be buffered whenever the input\
    \ stream needs to be aggregated."
  name: "spring.data.elasticsearch.client.reactive.max-in-memory-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.lang.String"
  description: "Credentials password."
  name: "spring.data.elasticsearch.client.reactive.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.time.Duration"
  description: "Read and Write Socket timeout."
  name: "spring.data.elasticsearch.client.reactive.socket-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.lang.Boolean"
  description: "Whether the client should use SSL to connect to the endpoints."
  name: "spring.data.elasticsearch.client.reactive.use-ssl"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientProperties"
  type: "java.lang.String"
  description: "Credentials username."
  name: "spring.data.elasticsearch.client.reactive.username"
  defaultValue: ""
- type: "java.lang.String"
  description: "Elasticsearch cluster name."
  name: "spring.data.elasticsearch.cluster-name"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Comma-separated list of cluster node addresses."
  name: "spring.data.elasticsearch.cluster-nodes"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional properties used to configure the client."
  name: "spring.data.elasticsearch.properties"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable Elasticsearch repositories."
  name: "spring.data.elasticsearch.repositories.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable JDBC repositories."
  name: "spring.data.jdbc.repositories.enabled"
  defaultValue: true
- type: "org.springframework.data.repository.config.BootstrapMode"
  description: "Bootstrap mode for JPA repositories."
  name: "spring.data.jpa.repositories.bootstrap-mode"
  defaultValue: "default"
- type: "java.lang.Boolean"
  description: "Whether to enable JPA repositories."
  name: "spring.data.jpa.repositories.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable LDAP repositories."
  name: "spring.data.ldap.repositories.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Authentication database name."
  name: "spring.data.mongodb.authentication-database"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable auto-index creation."
  name: "spring.data.mongodb.auto-index-creation"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Database name."
  name: "spring.data.mongodb.database"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.Class<?>"
  description: "Fully qualified name of the FieldNamingStrategy to use."
  name: "spring.data.mongodb.field-naming-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  name: "spring.data.mongodb.grid-fs-database"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.data.mongodb.gridfs.database"
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties$Gridfs"
  type: "java.lang.String"
  description: "GridFS bucket name."
  name: "spring.data.mongodb.gridfs.bucket"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties$Gridfs"
  type: "java.lang.String"
  description: "GridFS database name."
  name: "spring.data.mongodb.gridfs.database"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Mongo server host. Cannot be set with URI."
  name: "spring.data.mongodb.host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.Character[]"
  description: "Login password of the mongo server. Cannot be set with URI."
  name: "spring.data.mongodb.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.Integer"
  description: "Mongo server port. Cannot be set with URI."
  name: "spring.data.mongodb.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Required replica set name for the cluster. Cannot be set with URI."
  name: "spring.data.mongodb.replica-set-name"
  defaultValue: ""
- type: "org.springframework.boot.autoconfigure.data.RepositoryType"
  description: "Type of Mongo repositories to enable."
  name: "spring.data.mongodb.repositories.type"
  defaultValue: "auto"
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Mongo database URI. Cannot be set with host, port, credentials and\
    \ replica set name."
  name: "spring.data.mongodb.uri"
  defaultValue: "mongodb://localhost/test"
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "java.lang.String"
  description: "Login user of the mongo server. Cannot be set with URI."
  name: "spring.data.mongodb.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.MongoProperties"
  type: "org.bson.UuidRepresentation"
  description: "Representation to use when converting a UUID to a BSON binary value."
  name: "spring.data.mongodb.uuid-representation"
  defaultValue: "java-legacy"
- description: "Auto index mode."
  name: "spring.data.neo4j.auto-index"
  defaultValue: "none"
  deprecationLevel: "ERROR"
  deprecationReason: "Automatic index creation is no longer supported."
- owner: "org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataProperties"
  type: "java.lang.String"
  description: "Database name to use. By default, the server decides the default database\
    \ to use."
  name: "spring.data.neo4j.database"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable embedded mode if the embedded driver is available."
  name: "spring.data.neo4j.embedded.enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Embedded mode is no longer supported, please use Testcontainers\
    \ instead."
- type: "java.lang.Boolean"
  description: "Register OpenSessionInViewInterceptor that binds a Neo4j Session to\
    \ the thread for the entire processing of the request."
  name: "spring.data.neo4j.open-in-view"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Login password of the server."
  name: "spring.data.neo4j.password"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.neo4j.authentication.password"
- type: "java.lang.Boolean"
  description: "Whether to enable Neo4j repositories."
  name: "spring.data.neo4j.repositories.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.data.neo4j.repositories.type"
- type: "org.springframework.boot.autoconfigure.data.RepositoryType"
  description: "Type of Neo4j repositories to enable."
  name: "spring.data.neo4j.repositories.type"
  defaultValue: "auto"
- type: "java.lang.String"
  description: "URI used by the driver. Auto-detected by default."
  name: "spring.data.neo4j.uri"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.neo4j.uri"
- type: "java.lang.Boolean"
  description: "Whether to use Neo4j native types wherever possible."
  name: "spring.data.neo4j.use-native-types"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Native type support is now built-in."
- type: "java.lang.String"
  description: "Login user of the server."
  name: "spring.data.neo4j.username"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.neo4j.authentication.password"
- type: "java.lang.Boolean"
  description: "Whether to enable R2DBC repositories."
  name: "spring.data.r2dbc.repositories.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Redis repositories."
  name: "spring.data.redis.repositories.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.String"
  description: "Base path to be used by Spring Data REST to expose repository resources."
  name: "spring.data.rest.base-path"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "org.springframework.http.MediaType"
  description: "Content type to use as a default when none is specified."
  name: "spring.data.rest.default-media-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Integer"
  description: "Default size of pages."
  name: "spring.data.rest.default-page-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "org.springframework.data.rest.core.mapping.RepositoryDetectionStrategy$RepositoryDetectionStrategies"
  description: "Strategy to use to determine which repositories get exposed."
  name: "spring.data.rest.detection-strategy"
  defaultValue: "default"
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable enum value translation through the Spring Data REST\
    \ default resource bundle."
  name: "spring.data.rest.enable-enum-translation"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.String"
  description: "Name of the URL query string parameter that indicates how many results\
    \ to return at once."
  name: "spring.data.rest.limit-param-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Integer"
  description: "Maximum size of pages."
  name: "spring.data.rest.max-page-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.String"
  description: "Name of the URL query string parameter that indicates what page to\
    \ return."
  name: "spring.data.rest.page-param-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Boolean"
  description: "Whether to return a response body after creating an entity."
  name: "spring.data.rest.return-body-on-create"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.Boolean"
  description: "Whether to return a response body after updating an entity."
  name: "spring.data.rest.return-body-on-update"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties"
  type: "java.lang.String"
  description: "Name of the URL query string parameter that indicates what direction\
    \ to sort results."
  name: "spring.data.rest.sort-param-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.solr.SolrProperties"
  type: "java.lang.String"
  description: "Solr host. Ignored if \"zk-host\" is set."
  name: "spring.data.solr.host"
  defaultValue: "http://127.0.0.1:8983/solr"
- type: "java.lang.Boolean"
  description: "Whether to enable Solr repositories."
  name: "spring.data.solr.repositories.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.solr.SolrProperties"
  type: "java.lang.String"
  description: "ZooKeeper host address in the form HOST:PORT."
  name: "spring.data.solr.zk-host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.Integer"
  description: "Default page size."
  name: "spring.data.web.pageable.default-page-size"
  defaultValue: 20
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.Integer"
  description: "Maximum page size to be accepted."
  name: "spring.data.web.pageable.max-page-size"
  defaultValue: 2000
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.Boolean"
  description: "Whether to expose and assume 1-based page number indexes. Defaults\
    \ to \"false\", meaning a page number of 0 in the request equals the first page."
  name: "spring.data.web.pageable.one-indexed-parameters"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.String"
  description: "Page index parameter name."
  name: "spring.data.web.pageable.page-parameter"
  defaultValue: "page"
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.String"
  description: "General prefix to be prepended to the page number and page size parameters."
  name: "spring.data.web.pageable.prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.String"
  description: "Delimiter to be used between the qualifier and the actual page number\
    \ and size properties."
  name: "spring.data.web.pageable.qualifier-delimiter"
  defaultValue: "_"
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
  type: "java.lang.String"
  description: "Page size parameter name."
  name: "spring.data.web.pageable.size-parameter"
  defaultValue: "size"
- owner: "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort"
  type: "java.lang.String"
  description: "Sort parameter name."
  name: "spring.data.web.sort.sort-parameter"
  defaultValue: "sort"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to stop if an error occurs while initializing the database."
  name: "spring.datasource.continue-on-error"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.util.List<java.lang.String>"
  description: "Data (DML) script resource references."
  name: "spring.datasource.data"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Password of the database to execute DML scripts (if different)."
  name: "spring.datasource.data-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Username of the database to execute DML scripts (if different)."
  name: "spring.datasource.data-username"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.abandoned-usage-tracking"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.access-to-underlying-connection-allowed"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.auto-commit-on-return"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.cache-state"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.clear-statement-pool-on-return"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.connection-factory-class-name"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.util.List<java.lang.String>"
  name: "spring.datasource.dbcp2.connection-init-sqls"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.default-auto-commit"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.default-catalog"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.default-query-timeout"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.default-read-only"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.default-schema"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.default-transaction-isolation"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.util.Set<java.lang.String>"
  name: "spring.datasource.dbcp2.disconnection-sql-codes"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.sql.Driver"
  name: "spring.datasource.dbcp2.driver"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.driver-class-name"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.enable-auto-commit-on-return"
  defaultValue: ""
  deprecationLevel: "WARNING"
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.eviction-policy-class-name"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.fast-fail-validation"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.initial-size"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.jmx-name"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.lifo"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.log-abandoned"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.log-expired-connections"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.login-timeout"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.max-conn-lifetime-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.max-idle"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.max-open-prepared-statements"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.max-total"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.max-wait-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.min-evictable-idle-time-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.min-idle"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.num-tests-per-eviction-run"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.password"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.pool-prepared-statements"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.remove-abandoned-on-borrow"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.remove-abandoned-on-maintenance"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.remove-abandoned-timeout"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.rollback-on-return"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.soft-min-evictable-idle-time-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.test-on-borrow"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.test-on-create"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.test-on-return"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.dbcp2.test-while-idle"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.dbcp2.time-between-eviction-runs-millis"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.url"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.username"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.String"
  name: "spring.datasource.dbcp2.validation-query"
  defaultValue: ""
- owner: "org.apache.commons.dbcp2.BasicDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.dbcp2.validation-query-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Fully qualified name of the JDBC driver. Auto-detected based on the\
    \ URL by default."
  name: "spring.datasource.driver-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to generate a random datasource name."
  name: "spring.datasource.generate-unique-name"
  defaultValue: true
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.allow-pool-suspension"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.auto-commit"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.catalog"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.connection-init-sql"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.connection-test-query"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.connection-timeout"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.data-source-class-name"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.data-source-j-n-d-i"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.util.Properties"
  name: "spring.datasource.hikari.data-source-properties"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.driver-class-name"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.exception-override-class-name"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.util.Properties"
  name: "spring.datasource.hikari.health-check-properties"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Object"
  name: "spring.datasource.hikari.health-check-registry"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.idle-timeout"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.initialization-fail-timeout"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.isolate-internal-queries"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.jdbc-url"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.leak-detection-threshold"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.hikari.login-timeout"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.max-lifetime"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.hikari.maximum-pool-size"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Object"
  name: "spring.datasource.hikari.metric-registry"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
  name: "spring.datasource.hikari.metrics-tracker-factory"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.hikari.minimum-idle"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.password"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.pool-name"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.read-only"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.hikari.register-mbeans"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.util.concurrent.ScheduledExecutorService"
  name: "spring.datasource.hikari.scheduled-executor"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.schema"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.transaction-isolation"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.String"
  name: "spring.datasource.hikari.username"
  defaultValue: ""
- owner: "com.zaxxer.hikari.HikariDataSource"
  type: "java.lang.Long"
  name: "spring.datasource.hikari.validation-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Mode to apply when determining if DataSource initialization should\
    \ be performed using the available DDL and DML scripts."
  name: "spring.datasource.initialization-mode"
  defaultValue: "embedded"
- type: "java.lang.Boolean"
  description: "Whether to enable JMX support (if provided by the underlying pool)."
  name: "spring.datasource.jmx-enabled"
  defaultValue: false
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.datasource.tomcat.jmx-enabled"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "JNDI location of the datasource. Class, url, username and password\
    \ are ignored when set."
  name: "spring.datasource.jndi-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Name of the datasource. Default to \"testdb\" when using an embedded\
    \ database."
  name: "spring.datasource.name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.abandoned-connection-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.connection-factory-class-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.util.Properties"
  name: "spring.datasource.oracleucp.connection-factory-properties"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-harvest-max-count"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-harvest-trigger-count"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-labeling-high-cost"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.connection-pool-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.util.Properties"
  name: "spring.datasource.oracleucp.connection-properties"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-repurpose-threshold"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-validation-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.connection-wait-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.data-source-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.database-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.description"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Boolean"
  name: "spring.datasource.oracleucp.fast-connection-failover-enabled"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.high-cost-connection-reuse-threshold"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.inactive-connection-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.initial-pool-size"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.login-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-connection-reuse-count"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Long"
  name: "spring.datasource.oracleucp.max-connection-reuse-time"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-connections-per-shard"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-idle-time"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-pool-size"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.max-statements"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.min-pool-size"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.network-protocol"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.o-n-s-configuration"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.password"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.util.Properties"
  name: "spring.datasource.oracleucp.pdb-roles"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.port-number"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.property-cycle"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.query-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.role-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.s-q-l-for-validate-connection"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.seconds-to-trust-idle-connection"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.server-name"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Boolean"
  name: "spring.datasource.oracleucp.sharding-mode"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.time-to-live-connection-timeout"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Integer"
  name: "spring.datasource.oracleucp.timeout-check-interval"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.u-r-l"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.String"
  name: "spring.datasource.oracleucp.user"
  defaultValue: ""
- owner: "oracle.ucp.jdbc.PoolDataSourceImpl"
  type: "java.lang.Boolean"
  name: "spring.datasource.oracleucp.validate-connection-on-borrow"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Login password of the database."
  name: "spring.datasource.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Platform to use in the DDL or DML scripts (such as schema-${platform}.sql\
    \ or data-${platform}.sql)."
  name: "spring.datasource.platform"
  defaultValue: "all"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.util.List<java.lang.String>"
  description: "Schema (DDL) script resource references."
  name: "spring.datasource.schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Password of the database to execute DDL scripts (if different)."
  name: "spring.datasource.schema-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Username of the database to execute DDL scripts (if different)."
  name: "spring.datasource.schema-username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Statement separator in SQL initialization scripts."
  name: "spring.datasource.separator"
  defaultValue: ";"
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.nio.charset.Charset"
  description: "SQL scripts encoding."
  name: "spring.datasource.sql-script-encoding"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.abandon-when-percentage-full"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.access-to-underlying-connection-allowed"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.alternate-username-allowed"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.commit-on-return"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.connection-properties"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Object"
  name: "spring.datasource.tomcat.data-source"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.data-source-j-n-d-i"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.util.Properties"
  name: "spring.datasource.tomcat.db-properties"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.default-auto-commit"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.default-catalog"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.default-read-only"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.default-transaction-isolation"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.driver-class-name"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.fair-queue"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.ignore-exception-on-pre-load"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.init-s-q-l"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.initial-size"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.jdbc-interceptors"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.jmx-enabled"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.log-abandoned"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.log-validation-errors"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.login-timeout"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.max-active"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Long"
  name: "spring.datasource.tomcat.max-age"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.max-idle"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.max-wait"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.min-evictable-idle-time-millis"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.min-idle"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.name"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.num-tests-per-eviction-run"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.password"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.propagate-interrupt-state"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.remove-abandoned"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.remove-abandoned-timeout"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.rollback-on-return"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.suspect-timeout"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.test-on-borrow"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.test-on-connect"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.test-on-return"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.test-while-idle"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.time-between-eviction-runs-millis"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.url"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.use-disposable-connection-facade"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.use-equals"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.use-lock"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Boolean"
  name: "spring.datasource.tomcat.use-statement-facade"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.username"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Long"
  name: "spring.datasource.tomcat.validation-interval"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.validation-query"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.Integer"
  name: "spring.datasource.tomcat.validation-query-timeout"
  defaultValue: ""
- owner: "org.apache.tomcat.jdbc.pool.DataSource"
  type: "java.lang.String"
  name: "spring.datasource.tomcat.validator-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.Class<? extends javax.sql.DataSource>"
  description: "Fully qualified name of the connection pool implementation to use.\
    \ By default, it is auto-detected from the classpath."
  name: "spring.datasource.type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "JDBC URL of the database."
  name: "spring.datasource.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
  type: "java.lang.String"
  description: "Login username of the database."
  name: "spring.datasource.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
  type: "java.lang.String"
  description: "XA datasource fully qualified name."
  name: "spring.datasource.xa.data-source-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Properties to pass to the XA data source."
  name: "spring.datasource.xa.properties"
  defaultValue: ""
- type: "java.time.Duration"
  description: "Connection timeout."
  name: "spring.elasticsearch.jest.connection-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Boolean"
  description: "Whether to enable connection requests from multiple execution threads."
  name: "spring.elasticsearch.jest.multi-threaded"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Login password."
  name: "spring.elasticsearch.jest.password"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Proxy host the HTTP client should use."
  name: "spring.elasticsearch.jest.proxy.host"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.Integer"
  description: "Proxy port the HTTP client should use."
  name: "spring.elasticsearch.jest.proxy.port"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.time.Duration"
  description: "Read timeout."
  name: "spring.elasticsearch.jest.read-timeout"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of the Elasticsearch instances to use."
  name: "spring.elasticsearch.jest.uris"
  defaultValue: ""
  deprecationLevel: "ERROR"
- type: "java.lang.String"
  description: "Login username."
  name: "spring.elasticsearch.jest.username"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.time.Duration"
  description: "Connection timeout."
  name: "spring.elasticsearch.rest.connection-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.lang.String"
  description: "Credentials password."
  name: "spring.elasticsearch.rest.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.time.Duration"
  description: "Read timeout."
  name: "spring.elasticsearch.rest.read-timeout"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of the Elasticsearch instances to use."
  name: "spring.elasticsearch.rest.uris"
  defaultValue:
  - "http://localhost:9200"
- owner: "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientProperties"
  type: "java.lang.String"
  description: "Credentials username."
  name: "spring.elasticsearch.rest.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Description to tag an existing schema with when applying a baseline."
  name: "spring.flyway.baseline-description"
  defaultValue: "<< Flyway Baseline >>"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically call baseline when migrating a non-empty\
    \ schema."
  name: "spring.flyway.baseline-on-migrate"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Version to tag an existing schema with when executing baseline."
  name: "spring.flyway.baseline-version"
  defaultValue: "1"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to batch SQL statements when executing them. Requires Flyway\
    \ Teams."
  name: "spring.flyway.batch"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that migration scripts location exists."
  name: "spring.flyway.check-location"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String[]"
  description: "Migrations that Flyway should consider when migrating or undoing.\
    \ When empty all available migrations are considered. Requires Flyway Teams."
  name: "spring.flyway.cherry-pick"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to disable cleaning of the database."
  name: "spring.flyway.clean-disabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically call clean when a validation error occurs."
  name: "spring.flyway.clean-on-validation-error"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Integer"
  description: "Maximum number of retries when attempting to connect to the database."
  name: "spring.flyway.connect-retries"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether Flyway should attempt to create the schemas specified in the\
    \ schemas property."
  name: "spring.flyway.create-schemas"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Default schema name managed by Flyway (case-sensitive)."
  name: "spring.flyway.default-schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.io.File"
  description: "File to which the SQL statements of a migration dry run should be\
    \ output. Requires Flyway Teams."
  name: "spring.flyway.dry-run-output"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Flyway pro edition only."
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable flyway."
  name: "spring.flyway.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.nio.charset.Charset"
  description: "Encoding of SQL migrations."
  name: "spring.flyway.encoding"
  defaultValue: "UTF-8"
- type: "org.flywaydb.core.api.errorhandler.ErrorHandler[]"
  name: "spring.flyway.error-handlers"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Flyway pro edition only."
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String[]"
  description: "Rules for the built-in error handling to override specific SQL states\
    \ and error codes. Requires Flyway Teams."
  name: "spring.flyway.error-overrides"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to group all pending migrations together in the same transaction\
    \ when applying them."
  name: "spring.flyway.group"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore future migrations when reading the schema history\
    \ table."
  name: "spring.flyway.ignore-future-migrations"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore ignored migrations when reading the schema history\
    \ table."
  name: "spring.flyway.ignore-ignored-migrations"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore missing migrations when reading the schema history\
    \ table."
  name: "spring.flyway.ignore-missing-migrations"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to ignore pending migrations when reading the schema history\
    \ table."
  name: "spring.flyway.ignore-pending-migrations"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "SQL statements to execute to initialize a connection immediately after\
    \ obtaining it."
  name: "spring.flyway.init-sqls"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Username recorded in the schema history table as having applied the\
    \ migration."
  name: "spring.flyway.installed-by"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Properties to pass to the JDBC driver. Requires Flyway Teams."
  name: "spring.flyway.jdbc-properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Licence key for Flyway Teams."
  name: "spring.flyway.license-key"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "Locations of migrations scripts. Can contain the special \"{vendor}\"\
    \ placeholder to use vendor-specific locations."
  name: "spring.flyway.locations"
  defaultValue:
  - "classpath:db/migration"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Integer"
  description: "Maximum number of retries when trying to obtain a lock."
  name: "spring.flyway.lock-retry-count"
  defaultValue: 50
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to allow mixing transactional and non-transactional statements\
    \ within the same migration."
  name: "spring.flyway.mixed"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Path of the Oracle Kerberos cache file. Requires Flyway Teams."
  name: "spring.flyway.oracle-kerberos-cache-file"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Path of the Oracle Kerberos config file. Requires Flyway Teams."
  name: "spring.flyway.oracle-kerberos-config-file"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable support for Oracle SQL*Plus commands. Requires Flyway\
    \ Teams."
  name: "spring.flyway.oracle-sqlplus"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to issue a warning rather than an error when a not-yet-supported\
    \ Oracle SQL*Plus statement is encountered. Requires Flyway Teams."
  name: "spring.flyway.oracle-sqlplus-warn"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to allow migrations to be run out of order."
  name: "spring.flyway.out-of-order"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether Flyway should output a table with the results of queries when\
    \ executing migrations. Requires Flyway Teams."
  name: "spring.flyway.output-query-results"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Login password of the database to migrate."
  name: "spring.flyway.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Prefix of placeholders in migration scripts."
  name: "spring.flyway.placeholder-prefix"
  defaultValue: "${"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Perform placeholder replacement in migration scripts."
  name: "spring.flyway.placeholder-replacement"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Suffix of placeholders in migration scripts."
  name: "spring.flyway.placeholder-suffix"
  defaultValue: "}"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Placeholders and their replacements to apply to sql migration scripts."
  name: "spring.flyway.placeholders"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "File name prefix for repeatable SQL migrations."
  name: "spring.flyway.repeatable-sql-migration-prefix"
  defaultValue: "R"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "Scheme names managed by Flyway (case-sensitive)."
  name: "spring.flyway.schemas"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to skip default callbacks. If true, only custom callbacks\
    \ are used."
  name: "spring.flyway.skip-default-callbacks"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to skip default resolvers. If true, only custom resolvers\
    \ are used."
  name: "spring.flyway.skip-default-resolvers"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether Flyway should skip executing the contents of the migrations\
    \ and only update the schema history table. Requires Flyway teams."
  name: "spring.flyway.skip-executing-migrations"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "File name prefix for SQL migrations."
  name: "spring.flyway.sql-migration-prefix"
  defaultValue: "V"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "File name separator for SQL migrations."
  name: "spring.flyway.sql-migration-separator"
  defaultValue: "__"
- type: "java.lang.String"
  name: "spring.flyway.sql-migration-suffix"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.flyway.sql-migration-suffixes"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.util.List<java.lang.String>"
  description: "File name suffix for SQL migrations."
  name: "spring.flyway.sql-migration-suffixes"
  defaultValue:
  - ".sql"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to stream SQL migrations when executing them. Requires Flyway\
    \ Teams."
  name: "spring.flyway.stream"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Name of the schema history table that will be used by Flyway."
  name: "spring.flyway.table"
  defaultValue: "flyway_schema_history"
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Tablespace in which the schema history table is created. Ignored when\
    \ using a database that does not support tablespaces. Defaults to the default\
    \ tablespace of the connection used by Flyway."
  name: "spring.flyway.tablespace"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Target version up to which migrations should be considered."
  name: "spring.flyway.target"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "File name prefix for undo SQL migrations. Requires Flyway Teams."
  name: "spring.flyway.undo-sql-migration-prefix"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Flyway pro edition only."
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "JDBC url of the database to migrate. If not set, the primary configured\
    \ data source is used."
  name: "spring.flyway.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.String"
  description: "Login user of the database to migrate."
  name: "spring.flyway.user"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to validate migrations and callbacks whose scripts do not\
    \ obey the correct naming convention."
  name: "spring.flyway.validate-migration-naming"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.flyway.FlywayProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically call validate when performing a migration."
  name: "spring.flyway.validate-on-migrate"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpServletRequest attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  name: "spring.freemarker.allow-request-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpSession attributes are allowed to override (hide) controller\
    \ generated model attributes of the same name."
  name: "spring.freemarker.allow-session-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable template caching."
  name: "spring.freemarker.cache"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.nio.charset.Charset"
  description: "Template encoding."
  name: "spring.freemarker.charset"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the templates location exists."
  name: "spring.freemarker.check-template-location"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "org.springframework.util.MimeType"
  description: "Content-Type value."
  name: "spring.freemarker.content-type"
  defaultValue: "text/html"
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable MVC view resolution for this technology."
  name: "spring.freemarker.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.freemarker.expose-request-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether all HttpSession attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.freemarker.expose-session-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to expose a RequestContext for use by Spring's macro library,\
    \ under the name \"springMacroRequestContext\"."
  name: "spring.freemarker.expose-spring-macro-helpers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.Boolean"
  description: "Whether to prefer file system access for template loading to enable\
    \ hot detection of template changes. When a template path is detected as a directory,\
    \ templates are loaded from the directory only and other matching classpath locations\
    \ will not be considered."
  name: "spring.freemarker.prefer-file-system-access"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String"
  description: "Prefix that gets prepended to view names when building a URL."
  name: "spring.freemarker.prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String"
  description: "Name of the RequestContext attribute for all views."
  name: "spring.freemarker.request-context-attribute"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Well-known FreeMarker keys which are passed to FreeMarker's Configuration."
  name: "spring.freemarker.settings"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String"
  description: "Suffix that gets appended to view names when building a URL."
  name: "spring.freemarker.suffix"
  defaultValue: ".ftlh"
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String[]"
  description: "Comma-separated list of template paths."
  name: "spring.freemarker.template-loader-path"
  defaultValue:
  - "classpath:/templates/"
- owner: "org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties"
  type: "java.lang.String[]"
  description: "View names that can be resolved."
  name: "spring.freemarker.view-names"
  defaultValue: ""
- type: "java.lang.String"
  description: "Resource reference to a generated git info properties file."
  name: "spring.git.properties"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.info.git.location"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpServletRequest attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  name: "spring.groovy.template.allow-request-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpSession attributes are allowed to override (hide) controller\
    \ generated model attributes of the same name."
  name: "spring.groovy.template.allow-session-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable template caching."
  name: "spring.groovy.template.cache"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.nio.charset.Charset"
  description: "Template encoding."
  name: "spring.groovy.template.charset"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the templates location exists."
  name: "spring.groovy.template.check-template-location"
  defaultValue: true
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.auto-escape"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.auto-indent"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.String"
  name: "spring.groovy.template.configuration.auto-indent-string"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.auto-new-line"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Class<? extends groovy.text.markup.BaseTemplate>"
  name: "spring.groovy.template.configuration.base-template-class"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.cache-templates"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.String"
  name: "spring.groovy.template.configuration.declaration-encoding"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.expand-empty-elements"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.util.Locale"
  name: "spring.groovy.template.configuration.locale"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.String"
  name: "spring.groovy.template.configuration.new-line-string"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.String"
  name: "spring.groovy.template.configuration.resource-loader-path"
  defaultValue: ""
- owner: "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer"
  type: "java.lang.Boolean"
  name: "spring.groovy.template.configuration.use-double-quotes"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "org.springframework.util.MimeType"
  description: "Content-Type value."
  name: "spring.groovy.template.content-type"
  defaultValue: "text/html"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable MVC view resolution for this technology."
  name: "spring.groovy.template.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.groovy.template.expose-request-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether all HttpSession attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.groovy.template.expose-session-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.Boolean"
  description: "Whether to expose a RequestContext for use by Spring's macro library,\
    \ under the name \"springMacroRequestContext\"."
  name: "spring.groovy.template.expose-spring-macro-helpers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String"
  description: "Prefix that gets prepended to view names when building a URL."
  name: "spring.groovy.template.prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String"
  description: "Name of the RequestContext attribute for all views."
  name: "spring.groovy.template.request-context-attribute"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String"
  description: "Template path."
  name: "spring.groovy.template.resource-loader-path"
  defaultValue: "classpath:/templates/"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String"
  description: "Suffix that gets appended to view names when building a URL."
  name: "spring.groovy.template.suffix"
  defaultValue: ".tpl"
- owner: "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateProperties"
  type: "java.lang.String[]"
  description: "View names that can be resolved."
  name: "spring.groovy.template.view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.String"
  description: "Format to use when serializing Date objects."
  name: "spring.gson.date-format"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to disable the escaping of HTML characters such as '<', '>',\
    \ etc."
  name: "spring.gson.disable-html-escaping"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to exclude inner classes during serialization."
  name: "spring.gson.disable-inner-class-serialization"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable serialization of complex map keys (i.e. non-primitives)."
  name: "spring.gson.enable-complex-map-key-serialization"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to exclude all fields from consideration for serialization\
    \ or deserialization that do not have the \"Expose\" annotation."
  name: "spring.gson.exclude-fields-without-expose-annotation"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "com.google.gson.FieldNamingPolicy"
  description: "Naming policy that should be applied to an object's field during serialization\
    \ and deserialization."
  name: "spring.gson.field-naming-policy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to generate non executable JSON by prefixing the output with\
    \ some special text."
  name: "spring.gson.generate-non-executable-json"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to be lenient about parsing JSON that doesn't conform to RFC\
    \ 4627."
  name: "spring.gson.lenient"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "com.google.gson.LongSerializationPolicy"
  description: "Serialization policy for Long and long types."
  name: "spring.gson.long-serialization-policy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to output serialized JSON that fits in a page for pretty printing."
  name: "spring.gson.pretty-printing"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.gson.GsonProperties"
  type: "java.lang.Boolean"
  description: "Whether to serialize null fields."
  name: "spring.gson.serialize-nulls"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable the console."
  name: "spring.h2.console.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties"
  type: "java.lang.String"
  description: "Path at which the console is available."
  name: "spring.h2.console.path"
  defaultValue: "/h2-console"
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties$Settings"
  type: "java.lang.Boolean"
  description: "Whether to enable trace output."
  name: "spring.h2.console.settings.trace"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties$Settings"
  type: "java.lang.String"
  description: "Password to access preferences and tools of H2 Console."
  name: "spring.h2.console.settings.web-admin-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.h2.H2ConsoleProperties$Settings"
  type: "java.lang.Boolean"
  description: "Whether to enable remote access."
  name: "spring.h2.console.settings.web-allow-others"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.hateoas.HateoasProperties"
  type: "java.lang.Boolean"
  description: "Whether application/hal+json responses should be sent to requests\
    \ that accept application/json."
  name: "spring.hateoas.use-hal-as-default-json-media-type"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.hazelcast.HazelcastProperties"
  type: "org.springframework.core.io.Resource"
  description: "The location of the configuration file to use to initialize Hazelcast."
  name: "spring.hazelcast.config"
  defaultValue: ""
- type: "java.lang.String"
  description: "Preferred JSON mapper to use for HTTP message conversion. By default,\
    \ auto-detected according to the environment."
  name: "spring.http.converters.preferred-json-mapper"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.mvc.converters.preferred-json-mapper"
- type: "java.nio.charset.Charset"
  description: "Charset of HTTP requests and responses. Added to the Content-Type\
    \ header if not set explicitly."
  name: "spring.http.encoding.charset"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.charset"
- type: "java.lang.Boolean"
  description: "Whether to enable http encoding support."
  name: "spring.http.encoding.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.enabled"
- type: "java.lang.Boolean"
  description: "Whether to force the encoding to the configured charset on HTTP requests\
    \ and responses."
  name: "spring.http.encoding.force"
  defaultValue: false
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.force"
- type: "java.lang.Boolean"
  description: "Whether to force the encoding to the configured charset on HTTP requests.\
    \ Defaults to true when force has not been specified."
  name: "spring.http.encoding.force-request"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.force-request"
- type: "java.lang.Boolean"
  description: "Whether to force the encoding to the configured charset on HTTP responses."
  name: "spring.http.encoding.force-response"
  defaultValue: false
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.force-response"
- type: "java.util.Map<java.util.Locale,java.nio.charset.Charset>"
  description: "Locale in which to encode mapping."
  name: "spring.http.encoding.mapping"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "server.servlet.encoding.mapping"
- type: "java.lang.Boolean"
  description: "Whether logging of (potentially sensitive) request details at DEBUG\
    \ and TRACE level is allowed."
  name: "spring.http.log-request-details"
  defaultValue: false
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.mvc.log-request-details"
- owner: "org.springframework.boot.autoconfigure.influx.InfluxDbProperties"
  type: "java.lang.String"
  description: "Login password."
  name: "spring.influx.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.influx.InfluxDbProperties"
  type: "java.lang.String"
  description: "URL of the InfluxDB instance to which to connect."
  name: "spring.influx.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.influx.InfluxDbProperties"
  type: "java.lang.String"
  description: "Login user."
  name: "spring.influx.user"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
  type: "java.nio.charset.Charset"
  description: "File encoding."
  name: "spring.info.build.encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
  type: "org.springframework.core.io.Resource"
  description: "Location of the generated build-info.properties file."
  name: "spring.info.build.location"
  defaultValue: "classpath:META-INF/build-info.properties"
- owner: "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
  type: "java.nio.charset.Charset"
  description: "File encoding."
  name: "spring.info.git.encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
  type: "org.springframework.core.io.Resource"
  description: "Location of the generated git.properties file."
  name: "spring.info.git.location"
  defaultValue: "classpath:git.properties"
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Jdbc"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Database schema initialization mode."
  name: "spring.integration.jdbc.initialize-schema"
  defaultValue: "embedded"
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$Jdbc"
  type: "java.lang.String"
  description: "Path to the SQL file to use to initialize the database schema."
  name: "spring.integration.jdbc.schema"
  defaultValue: "classpath:org/springframework/integration/jdbc/schema-@@platform@@.sql"
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Client"
  type: "java.lang.String"
  description: "TCP RSocket server host to connect to."
  name: "spring.integration.rsocket.client.host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Client"
  type: "java.lang.Integer"
  description: "TCP RSocket server port to connect to."
  name: "spring.integration.rsocket.client.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Client"
  type: "java.net.URI"
  description: "WebSocket RSocket server uri to connect to."
  name: "spring.integration.rsocket.client.uri"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.integration.IntegrationProperties$RSocket$Server"
  type: "java.lang.Boolean"
  description: "Whether to handle message mapping for RSocket via Spring Integration."
  name: "spring.integration.rsocket.server.message-mapping-enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.lang.String"
  description: "Date format string or a fully-qualified date format class name. For\
    \ instance, `yyyy-MM-dd HH:mm:ss`."
  name: "spring.jackson.date-format"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "com.fasterxml.jackson.annotation.JsonInclude$Include"
  description: "Controls the inclusion of properties during serialization. Configured\
    \ with one of the values in Jackson's JsonInclude.Include enumeration."
  name: "spring.jackson.default-property-inclusion"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.databind.DeserializationFeature,java.lang.Boolean>"
  description: "Jackson on/off features that affect the way Java objects are deserialized."
  name: "spring.jackson.deserialization"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.core.JsonGenerator$Feature,java.lang.Boolean>"
  description: "Jackson on/off features for generators."
  name: "spring.jackson.generator"
  defaultValue: ""
- type: "java.lang.String"
  description: "Joda date time format string. If not configured, \"date-format\" is\
    \ used as a fallback if it is configured with a format string."
  name: "spring.jackson.joda-date-time-format"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Locale"
  description: "Locale used for formatting."
  name: "spring.jackson.locale"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.databind.MapperFeature,java.lang.Boolean>"
  description: "Jackson general purpose on/off features."
  name: "spring.jackson.mapper"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.core.JsonParser$Feature,java.lang.Boolean>"
  description: "Jackson on/off features for parsers."
  name: "spring.jackson.parser"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.lang.String"
  description: "One of the constants on Jackson's PropertyNamingStrategy. Can also\
    \ be a fully-qualified class name of a PropertyNamingStrategy subclass."
  name: "spring.jackson.property-naming-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.databind.SerializationFeature,java.lang.Boolean>"
  description: "Jackson on/off features that affect the way Java objects are serialized."
  name: "spring.jackson.serialization"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.TimeZone"
  description: "Time zone used when formatting dates. For instance, \"America/Los_Angeles\"\
    \ or \"GMT+10\"."
  name: "spring.jackson.time-zone"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jackson.JacksonProperties"
  type: "java.util.Map<com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility>"
  description: "Jackson visibility thresholds that can be used to limit which methods\
    \ (and fields) are auto-detected."
  name: "spring.jackson.visibility"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
  type: "java.lang.Integer"
  description: "Number of rows that should be fetched from the database when more\
    \ rows are needed. Use -1 to use the JDBC driver's default configuration."
  name: "spring.jdbc.template.fetch-size"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
  type: "java.lang.Integer"
  description: "Maximum number of rows. Use -1 to use the JDBC driver's default configuration."
  name: "spring.jdbc.template.max-rows"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template"
  type: "java.time.Duration"
  description: "Query timeout. Default is to use the JDBC driver's default configuration.\
    \ If a duration suffix is not specified, seconds will be used."
  name: "spring.jdbc.template.query-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties"
  type: "java.lang.String"
  description: "Path that serves as the base URI for the application. If specified,\
    \ overrides the value of \"@ApplicationPath\"."
  name: "spring.jersey.application-path"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties$Filter"
  type: "java.lang.Integer"
  description: "Jersey filter chain order."
  name: "spring.jersey.filter.order"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Init parameters to pass to Jersey through the servlet or filter."
  name: "spring.jersey.init"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties$Servlet"
  type: "java.lang.Integer"
  description: "Load on startup priority of the Jersey servlet."
  name: "spring.jersey.servlet.load-on-startup"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.jersey.JerseyProperties"
  type: "org.springframework.boot.autoconfigure.jersey.JerseyProperties$Type"
  description: "Jersey integration type."
  name: "spring.jersey.type"
  defaultValue: "servlet"
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Cache"
  type: "java.lang.Boolean"
  description: "Whether to cache message consumers."
  name: "spring.jms.cache.consumers"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Cache"
  type: "java.lang.Boolean"
  description: "Whether to cache sessions."
  name: "spring.jms.cache.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Cache"
  type: "java.lang.Boolean"
  description: "Whether to cache message producers."
  name: "spring.jms.cache.producers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Cache"
  type: "java.lang.Integer"
  description: "Size of the session cache (per JMS Session type)."
  name: "spring.jms.cache.session-cache-size"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties"
  type: "java.lang.String"
  description: "Connection factory JNDI name. When set, takes precedence to others\
    \ connection factory auto-configurations."
  name: "spring.jms.jndi-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "org.springframework.boot.autoconfigure.jms.JmsProperties$AcknowledgeMode"
  description: "Acknowledge mode of the container. By default, the listener is transacted\
    \ with automatic acknowledgment."
  name: "spring.jms.listener.acknowledge-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "java.lang.Boolean"
  description: "Start the container automatically on startup."
  name: "spring.jms.listener.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "java.lang.Integer"
  description: "Minimum number of concurrent consumers."
  name: "spring.jms.listener.concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "java.lang.Integer"
  description: "Maximum number of concurrent consumers."
  name: "spring.jms.listener.max-concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Listener"
  type: "java.time.Duration"
  description: "Timeout to use for receive calls. Use -1 for a no-wait receive or\
    \ 0 for no timeout at all. The latter is only feasible if not running within a\
    \ transaction manager and is generally discouraged since it prevents clean shutdown."
  name: "spring.jms.listener.receive-timeout"
  defaultValue: "1s"
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties"
  type: "java.lang.Boolean"
  description: "Whether the default destination type is topic."
  name: "spring.jms.pub-sub-domain"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.lang.String"
  description: "Default destination to use on send and receive operations that do\
    \ not have a destination parameter."
  name: "spring.jms.template.default-destination"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.time.Duration"
  description: "Delivery delay to use for send calls."
  name: "spring.jms.template.delivery-delay"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "org.springframework.boot.autoconfigure.jms.JmsProperties$DeliveryMode"
  description: "Delivery mode. Enables QoS (Quality of Service) when set."
  name: "spring.jms.template.delivery-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.lang.Integer"
  description: "Priority of a message when sending. Enables QoS (Quality of Service)\
    \ when set."
  name: "spring.jms.template.priority"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether to enable explicit QoS (Quality of Service) when sending a\
    \ message. When enabled, the delivery mode, priority and time-to-live properties\
    \ will be used when sending a message. QoS is automatically enabled when at least\
    \ one of those settings is customized."
  name: "spring.jms.template.qos-enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.time.Duration"
  description: "Timeout to use for receive calls."
  name: "spring.jms.template.receive-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.jms.JmsProperties$Template"
  type: "java.time.Duration"
  description: "Time-to-live of a message when sending. Enables QoS (Quality of Service)\
    \ when set."
  name: "spring.jms.template.time-to-live"
  defaultValue: ""
- type: "java.lang.String"
  description: "JMX domain name."
  name: "spring.jmx.default-domain"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Expose management beans to the JMX domain."
  name: "spring.jmx.enabled"
  defaultValue: false
- type: "java.lang.String"
  description: "MBeanServer bean name."
  name: "spring.jmx.server"
  defaultValue: "mbeanServer"
- type: "java.lang.Boolean"
  description: "Whether unique runtime object names should be ensured."
  name: "spring.jmx.unique-names"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.jooq.JooqProperties"
  type: "org.jooq.SQLDialect"
  description: "SQL dialect to use. Auto-detected by default."
  name: "spring.jooq.sql-dialect"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "org.springframework.orm.jpa.vendor.Database"
  description: "Target database to operate on, auto-detected by default. Can be alternatively\
    \ set using the \"databasePlatform\" property."
  name: "spring.jpa.database"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.lang.String"
  description: "Name of the target database to operate on, auto-detected by default.\
    \ Can be alternatively set using the \"Database\" enum."
  name: "spring.jpa.database-platform"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.lang.Boolean"
  description: "Whether to initialize the schema on startup."
  name: "spring.jpa.generate-ddl"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties"
  type: "java.lang.String"
  description: "DDL mode. This is actually a shortcut for the \"hibernate.hbm2ddl.auto\"\
    \ property. Defaults to \"create-drop\" when using an embedded database and no\
    \ schema manager was detected. Otherwise, defaults to \"none\"."
  name: "spring.jpa.hibernate.ddl-auto"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming"
  type: "java.lang.String"
  description: "Fully qualified name of the implicit naming strategy."
  name: "spring.jpa.hibernate.naming.implicit-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming"
  type: "java.lang.String"
  description: "Fully qualified name of the physical naming strategy."
  name: "spring.jpa.hibernate.naming.physical-strategy"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties"
  type: "java.lang.Boolean"
  description: "Whether to use Hibernate's newer IdentifierGenerator for AUTO, TABLE\
    \ and SEQUENCE. This is actually a shortcut for the \"hibernate.id.new_generator_mappings\"\
    \ property. When not specified will default to \"true\"."
  name: "spring.jpa.hibernate.use-new-id-generator-mappings"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.util.List<java.lang.String>"
  description: "Mapping resources (equivalent to \"mapping-file\" entries in persistence.xml)."
  name: "spring.jpa.mapping-resources"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.lang.Boolean"
  description: "Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager\
    \ to the thread for the entire processing of the request."
  name: "spring.jpa.open-in-view"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional native properties to set on the JPA provider."
  name: "spring.jpa.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable logging of SQL statements."
  name: "spring.jpa.show-sql"
  defaultValue: false
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for borrowing connections from the pool."
  name: "spring.jta.atomikos.connectionfactory.borrow-connection-timeout"
  defaultValue: 30
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether to ignore the transacted flag when creating session."
  name: "spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether local transactions are desired."
  name: "spring.jta.atomikos.connectionfactory.local-transaction-mode"
  defaultValue: false
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, between runs of the pool's maintenance thread."
  name: "spring.jta.atomikos.connectionfactory.maintenance-interval"
  defaultValue: 60
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, after which connections are cleaned up from the\
    \ pool."
  name: "spring.jta.atomikos.connectionfactory.max-idle-time"
  defaultValue: 60
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, that a connection can be pooled for before being\
    \ destroyed. 0 denotes no limit."
  name: "spring.jta.atomikos.connectionfactory.max-lifetime"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Maximum size of the pool."
  name: "spring.jta.atomikos.connectionfactory.max-pool-size"
  defaultValue: 1
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Minimum size of the pool."
  name: "spring.jta.atomikos.connectionfactory.min-pool-size"
  defaultValue: 1
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Reap timeout, in seconds, for borrowed connections. 0 denotes no limit."
  name: "spring.jta.atomikos.connectionfactory.reap-timeout"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.String"
  description: "Unique name used to identify the resource during recovery."
  name: "spring.jta.atomikos.connectionfactory.unique-resource-name"
  defaultValue: "jmsConnectionFactory"
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.lang.String"
  description: "Vendor-specific implementation of XAConnectionFactory."
  name: "spring.jta.atomikos.connectionfactory.xa-connection-factory-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
  type: "java.util.Properties"
  description: "Vendor-specific XA properties."
  name: "spring.jta.atomikos.connectionfactory.xa-properties"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for borrowing connections from the pool."
  name: "spring.jta.atomikos.datasource.borrow-connection-timeout"
  defaultValue: 30
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether to use concurrent connection validation."
  name: "spring.jta.atomikos.datasource.concurrent-connection-validation"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Default isolation level of connections provided by the pool."
  name: "spring.jta.atomikos.datasource.default-isolation-level"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for establishing a database connection."
  name: "spring.jta.atomikos.datasource.login-timeout"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, between runs of the pool's maintenance thread."
  name: "spring.jta.atomikos.datasource.maintenance-interval"
  defaultValue: 60
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, after which connections are cleaned up from the\
    \ pool."
  name: "spring.jta.atomikos.datasource.max-idle-time"
  defaultValue: 60
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, that a connection can be pooled for before being\
    \ destroyed. 0 denotes no limit."
  name: "spring.jta.atomikos.datasource.max-lifetime"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Maximum size of the pool."
  name: "spring.jta.atomikos.datasource.max-pool-size"
  defaultValue: 1
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Minimum size of the pool."
  name: "spring.jta.atomikos.datasource.min-pool-size"
  defaultValue: 1
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.Integer"
  description: "Reap timeout, in seconds, for borrowed connections. 0 denotes no limit."
  name: "spring.jta.atomikos.datasource.reap-timeout"
  defaultValue: 0
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.String"
  description: "SQL query or statement used to validate a connection before returning\
    \ it."
  name: "spring.jta.atomikos.datasource.test-query"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.String"
  description: "Unique name used to identify the resource during recovery."
  name: "spring.jta.atomikos.datasource.unique-resource-name"
  defaultValue: "dataSource"
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.lang.String"
  description: "Vendor-specific implementation of XAConnectionFactory."
  name: "spring.jta.atomikos.datasource.xa-data-source-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
  type: "java.util.Properties"
  description: "Vendor-specific XA properties."
  name: "spring.jta.atomikos.datasource.xa-properties"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Specify whether sub-transactions are allowed."
  name: "spring.jta.atomikos.properties.allow-sub-transactions"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Long"
  description: "Interval between checkpoints, expressed as the number of log writes\
    \ between two checkpoints. A checkpoint reduces the log file size at the expense\
    \ of adding some overhead in the runtime."
  name: "spring.jta.atomikos.properties.checkpoint-interval"
  defaultValue: 500
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.time.Duration"
  description: "Default timeout for JTA transactions."
  name: "spring.jta.atomikos.properties.default-jta-timeout"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Long"
  description: "How long should normal shutdown (no-force) wait for transactions to\
    \ complete."
  name: "spring.jta.atomikos.properties.default-max-wait-time-on-shutdown"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable disk logging."
  name: "spring.jta.atomikos.properties.enable-logging"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Whether a VM shutdown should trigger forced shutdown of the transaction\
    \ core."
  name: "spring.jta.atomikos.properties.force-shutdown-on-vm-exit"
  defaultValue: false
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.String"
  description: "Directory in which the log files should be stored. Defaults to the\
    \ current working directory."
  name: "spring.jta.atomikos.properties.log-base-dir"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.String"
  description: "Transactions log file base name."
  name: "spring.jta.atomikos.properties.log-base-name"
  defaultValue: "tmlog"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Integer"
  description: "Maximum number of active transactions."
  name: "spring.jta.atomikos.properties.max-actives"
  defaultValue: 50
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.time.Duration"
  description: "Maximum timeout that can be allowed for transactions."
  name: "spring.jta.atomikos.properties.max-timeout"
  defaultValue: "300000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
  type: "java.time.Duration"
  description: "Delay between two recovery scans."
  name: "spring.jta.atomikos.properties.recovery.delay"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
  type: "java.time.Duration"
  description: "Delay after which recovery can cleanup pending ('orphaned') log entries."
  name: "spring.jta.atomikos.properties.recovery.forget-orphaned-log-entries-delay"
  defaultValue: "86400000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
  type: "java.lang.Integer"
  description: "Number of retry attempts to commit the transaction before throwing\
    \ an exception."
  name: "spring.jta.atomikos.properties.recovery.max-retries"
  defaultValue: 5
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
  type: "java.time.Duration"
  description: "Delay between retry attempts."
  name: "spring.jta.atomikos.properties.recovery.retry-interval"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Whether sub-transactions should be joined when possible."
  name: "spring.jta.atomikos.properties.serial-jta-transactions"
  defaultValue: true
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.String"
  description: "Transaction manager implementation that should be started."
  name: "spring.jta.atomikos.properties.service"
  defaultValue: ""
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.Boolean"
  description: "Whether to use different (and concurrent) threads for two-phase commit\
    \ on the participating resources."
  name: "spring.jta.atomikos.properties.threaded-two-phase-commit"
  defaultValue: false
- owner: "org.springframework.boot.jta.atomikos.AtomikosProperties"
  type: "java.lang.String"
  description: "The transaction manager's unique name. Defaults to the machine's IP\
    \ address. If you plan to run more than one transaction manager against one database\
    \ you must set this property to a unique value."
  name: "spring.jta.atomikos.properties.transaction-manager-unique-name"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Number of connections to create when growing the pool."
  name: "spring.jta.bitronix.connectionfactory.acquire-increment"
  defaultValue: 1
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, to wait before trying to acquire a connection again\
    \ after an invalid connection was acquired."
  name: "spring.jta.bitronix.connectionfactory.acquisition-interval"
  defaultValue: 1
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for acquiring connections from the pool."
  name: "spring.jta.bitronix.connectionfactory.acquisition-timeout"
  defaultValue: 30
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether the transaction manager should allow mixing XA and non-XA\
    \ transactions."
  name: "spring.jta.bitronix.connectionfactory.allow-local-transactions"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether the transaction timeout should be set on the XAResource when\
    \ it is enlisted."
  name: "spring.jta.bitronix.connectionfactory.apply-transaction-timeout"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether resources should be enlisted and delisted automatically."
  name: "spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled"
  defaultValue: true
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether producers and consumers should be cached."
  name: "spring.jta.bitronix.connectionfactory.cache-producers-consumers"
  defaultValue: true
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.String"
  description: "Underlying implementation class name of the XA resource."
  name: "spring.jta.bitronix.connectionfactory.class-name"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether the provider can run many transactions on the same connection\
    \ and supports transaction interleaving."
  name: "spring.jta.bitronix.connectionfactory.defer-connection-release"
  defaultValue: true
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether this resource is disabled, meaning it's temporarily forbidden\
    \ to acquire a connection from its pool."
  name: "spring.jta.bitronix.connectionfactory.disabled"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.util.Properties"
  description: "Properties that should be set on the underlying implementation."
  name: "spring.jta.bitronix.connectionfactory.driver-properties"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  name: "spring.jta.bitronix.connectionfactory.failed"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether recovery failures should be ignored."
  name: "spring.jta.bitronix.connectionfactory.ignore-recovery-failures"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, after which connections are cleaned up from the\
    \ pool."
  name: "spring.jta.bitronix.connectionfactory.max-idle-time"
  defaultValue: 60
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Maximum size of the pool. 0 denotes no limit."
  name: "spring.jta.bitronix.connectionfactory.max-pool-size"
  defaultValue: 0
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Minimum size of the pool."
  name: "spring.jta.bitronix.connectionfactory.min-pool-size"
  defaultValue: 0
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.String"
  description: "Password to use to connect to the JMS provider."
  name: "spring.jta.bitronix.connectionfactory.password"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether connections in the ACCESSIBLE state can be shared within the\
    \ context of a transaction."
  name: "spring.jta.bitronix.connectionfactory.share-transaction-connections"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether connections should be tested when acquired from the pool."
  name: "spring.jta.bitronix.connectionfactory.test-connections"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Integer"
  description: "Position that this resource should take during two-phase commit (always\
    \ first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE)."
  name: "spring.jta.bitronix.connectionfactory.two-pc-ordering-position"
  defaultValue: 1
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.String"
  description: "Unique name used to identify the resource during recovery."
  name: "spring.jta.bitronix.connectionfactory.unique-name"
  defaultValue: "jmsConnectionFactory"
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.Boolean"
  description: "Whether TMJOIN should be used when starting XAResources."
  name: "spring.jta.bitronix.connectionfactory.use-tm-join"
  defaultValue: true
- owner: "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
  type: "java.lang.String"
  description: "User to use to connect to the JMS provider."
  name: "spring.jta.bitronix.connectionfactory.user"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Number of connections to create when growing the pool."
  name: "spring.jta.bitronix.datasource.acquire-increment"
  defaultValue: 1
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, to wait before trying to acquire a connection again\
    \ after an invalid connection was acquired."
  name: "spring.jta.bitronix.datasource.acquisition-interval"
  defaultValue: 1
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for acquiring connections from the pool."
  name: "spring.jta.bitronix.datasource.acquisition-timeout"
  defaultValue: 30
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether the transaction manager should allow mixing XA and non-XA\
    \ transactions."
  name: "spring.jta.bitronix.datasource.allow-local-transactions"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether the transaction timeout should be set on the XAResource when\
    \ it is enlisted."
  name: "spring.jta.bitronix.datasource.apply-transaction-timeout"
  defaultValue: "false"
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether resources should be enlisted and delisted automatically."
  name: "spring.jta.bitronix.datasource.automatic-enlisting-enabled"
  defaultValue: true
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.String"
  description: "Underlying implementation class name of the XA resource."
  name: "spring.jta.bitronix.datasource.class-name"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.String"
  description: "Default cursor holdability for connections."
  name: "spring.jta.bitronix.datasource.cursor-holdability"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether the database can run many transactions on the same connection\
    \ and supports transaction interleaving."
  name: "spring.jta.bitronix.datasource.defer-connection-release"
  defaultValue: true
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether this resource is disabled, meaning it's temporarily forbidden\
    \ to acquire a connection from its pool."
  name: "spring.jta.bitronix.datasource.disabled"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.util.Properties"
  description: "Properties that should be set on the underlying implementation."
  name: "spring.jta.bitronix.datasource.driver-properties"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether Connection.isValid() is called when acquiring a connection\
    \ from the pool."
  name: "spring.jta.bitronix.datasource.enable-jdbc4-connection-test"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  name: "spring.jta.bitronix.datasource.failed"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether recovery failures should be ignored."
  name: "spring.jta.bitronix.datasource.ignore-recovery-failures"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.String"
  description: "Default isolation level for connections."
  name: "spring.jta.bitronix.datasource.isolation-level"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.String"
  description: "Default auto-commit mode for local transactions."
  name: "spring.jta.bitronix.datasource.local-auto-commit"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Timeout, in seconds, for establishing a database connection."
  name: "spring.jta.bitronix.datasource.login-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Time, in seconds, after which connections are cleaned up from the\
    \ pool."
  name: "spring.jta.bitronix.datasource.max-idle-time"
  defaultValue: 60
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Maximum size of the pool. 0 denotes no limit."
  name: "spring.jta.bitronix.datasource.max-pool-size"
  defaultValue: 0
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Minimum size of the pool."
  name: "spring.jta.bitronix.datasource.min-pool-size"
  defaultValue: 0
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Target size of the prepared statement cache. 0 disables the cache."
  name: "spring.jta.bitronix.datasource.prepared-statement-cache-size"
  defaultValue: 0
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether connections in the ACCESSIBLE state can be shared within the\
    \ context of a transaction."
  name: "spring.jta.bitronix.datasource.share-transaction-connections"
  defaultValue: false
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.String"
  description: "SQL query or statement used to validate a connection before returning\
    \ it."
  name: "spring.jta.bitronix.datasource.test-query"
  defaultValue: ""
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Integer"
  description: "Position that this resource should take during two-phase commit (always\
    \ first is Integer.MIN_VALUE, and always last is Integer.MAX_VALUE)."
  name: "spring.jta.bitronix.datasource.two-pc-ordering-position"
  defaultValue: 1
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.String"
  description: "Unique name used to identify the resource during recovery."
  name: "spring.jta.bitronix.datasource.unique-name"
  defaultValue: "dataSource"
- owner: "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
  type: "java.lang.Boolean"
  description: "Whether TMJOIN should be used when starting XAResources."
  name: "spring.jta.bitronix.datasource.use-tm-join"
  defaultValue: true
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether to allow multiple LRC resources to be enlisted into the same\
    \ transaction."
  name: "spring.jta.bitronix.properties.allow-multiple-lrc"
  defaultValue: false
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether to enable asynchronously execution of two phase commit."
  name: "spring.jta.bitronix.properties.asynchronous2-pc"
  defaultValue: false
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Integer"
  description: "Interval in minutes at which to run the recovery process in the background."
  name: "spring.jta.bitronix.properties.background-recovery-interval"
  defaultValue: 1
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.jta.bitronix.properties.background-recovery-interval-seconds"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Integer"
  description: "Interval in seconds at which to run the recovery process in the background."
  name: "spring.jta.bitronix.properties.background-recovery-interval-seconds"
  defaultValue: 60
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether to recover only the current node. Should be enabled if you\
    \ run multiple instances of the transaction manager on the same JMS and JDBC resources."
  name: "spring.jta.bitronix.properties.current-node-only-recovery"
  defaultValue: true
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether to log the creation and commit call stacks of transactions\
    \ executed without a single enlisted resource."
  name: "spring.jta.bitronix.properties.debug-zero-resource-transaction"
  defaultValue: false
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Integer"
  description: "Default transaction timeout, in seconds."
  name: "spring.jta.bitronix.properties.default-transaction-timeout"
  defaultValue: 60
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether to enable JMX support."
  name: "spring.jta.bitronix.properties.disable-jmx"
  defaultValue: false
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.String"
  description: "Set the fully qualified name of the exception analyzer implementation\
    \ to use."
  name: "spring.jta.bitronix.properties.exception-analyzer"
  defaultValue: ""
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether to enable filtering of logs so that only mandatory logs are\
    \ written."
  name: "spring.jta.bitronix.properties.filter-log-status"
  defaultValue: false
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether disk forces are batched."
  name: "spring.jta.bitronix.properties.force-batching-enabled"
  defaultValue: true
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether logs are forced to disk."
  name: "spring.jta.bitronix.properties.forced-write-enabled"
  defaultValue: true
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Integer"
  description: "Maximum amount of seconds the TM waits for transactions to get done\
    \ before aborting them at shutdown time."
  name: "spring.jta.bitronix.properties.graceful-shutdown-interval"
  defaultValue: 60
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.String"
  description: "JNDI name of the TransactionSynchronizationRegistry."
  name: "spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name"
  defaultValue: ""
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.String"
  description: "JNDI name of the UserTransaction."
  name: "spring.jta.bitronix.properties.jndi-user-transaction-name"
  defaultValue: ""
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.String"
  description: "Name of the journal. Can be 'disk', 'null', or a class name."
  name: "spring.jta.bitronix.properties.journal"
  defaultValue: "disk"
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.String"
  description: "Name of the first fragment of the journal."
  name: "spring.jta.bitronix.properties.log-part1-filename"
  defaultValue: "btm1.tlog"
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.String"
  description: "Name of the second fragment of the journal."
  name: "spring.jta.bitronix.properties.log-part2-filename"
  defaultValue: "btm2.tlog"
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Integer"
  description: "Maximum size in megabytes of the journal fragments."
  name: "spring.jta.bitronix.properties.max-log-size-in-mb"
  defaultValue: 2
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.String"
  description: "ResourceLoader configuration file name."
  name: "spring.jta.bitronix.properties.resource-configuration-filename"
  defaultValue: ""
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.String"
  description: "ASCII ID that must uniquely identify this TM instance. Defaults to\
    \ the machine's IP address."
  name: "spring.jta.bitronix.properties.server-id"
  defaultValue: ""
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Skip corrupted transactions log entries. Use only at last resort when\
    \ all you have to recover is a pair of corrupted files."
  name: "spring.jta.bitronix.properties.skip-corrupted-logs"
  defaultValue: false
  deprecationLevel: "WARNING"
- owner: "bitronix.tm.Configuration"
  type: "java.lang.Boolean"
  description: "Whether to log a warning for transactions executed without a single\
    \ enlisted resource."
  name: "spring.jta.bitronix.properties.warn-about-zero-resource-transaction"
  defaultValue: true
  deprecationLevel: "WARNING"
- type: "java.lang.Boolean"
  description: "Whether to enable JTA support."
  name: "spring.jta.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.transaction.jta.JtaProperties"
  type: "java.lang.String"
  description: "Transaction logs directory."
  name: "spring.jta.log-dir"
  defaultValue: ""
- type: "java.time.Duration"
  description: "Transaction timeout. If a duration suffix is not specified, seconds\
    \ will be used."
  name: "spring.jta.narayana.default-timeout"
  defaultValue: "60s"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of expiry scanners."
  name: "spring.jta.narayana.expiry-scanners"
  defaultValue:
  - "com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "Transaction object store directory."
  name: "spring.jta.narayana.log-dir"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.Boolean"
  description: "Whether to enable one phase commit optimization."
  name: "spring.jta.narayana.one-phase-commit"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.time.Duration"
  description: "Interval in which periodic recovery scans are performed. If a duration\
    \ suffix is not specified, seconds will be used."
  name: "spring.jta.narayana.periodic-recovery-period"
  defaultValue: "120s"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.time.Duration"
  description: "Back off period between first and second phases of the recovery scan.\
    \ If a duration suffix is not specified, seconds will be used."
  name: "spring.jta.narayana.recovery-backoff-period"
  defaultValue: "10s"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "Database password to be used by the recovery manager."
  name: "spring.jta.narayana.recovery-db-pass"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "Database username to be used by the recovery manager."
  name: "spring.jta.narayana.recovery-db-user"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "JMS password to be used by the recovery manager."
  name: "spring.jta.narayana.recovery-jms-pass"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "JMS username to be used by the recovery manager."
  name: "spring.jta.narayana.recovery-jms-user"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of recovery modules."
  name: "spring.jta.narayana.recovery-modules"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.lang.String"
  description: "Unique transaction manager id."
  name: "spring.jta.narayana.transaction-manager-id"
  defaultValue: "1"
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of orphan filters."
  name: "spring.jta.narayana.xa-resource-orphan-filters"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReason: "Narayana support has moved to third party starter."
- owner: "org.springframework.boot.autoconfigure.transaction.jta.JtaProperties"
  type: "java.lang.String"
  description: "Transaction manager unique identifier."
  name: "spring.jta.transaction-manager-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  name: "spring.kafka.admin.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
  type: "java.lang.Boolean"
  description: "Whether to fail fast if the broker is not available on startup."
  name: "spring.kafka.admin.fail-fast"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional admin-specific properties used to configure the client."
  name: "spring.kafka.admin.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  name: "spring.kafka.admin.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  name: "spring.kafka.admin.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.admin.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.admin.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  name: "spring.kafka.admin.ssl.key-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.admin.ssl.keystore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.admin.ssl.key-store-location"
- type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.admin.ssl.keystore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.admin.ssl.key-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  name: "spring.kafka.admin.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.admin.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.admin.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  name: "spring.kafka.admin.ssl.trust-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.admin.ssl.truststore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.admin.ssl.trust-store-location"
- type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.admin.ssl.truststore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.admin.ssl.trust-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
  type: "java.util.List<java.lang.String>"
  description: "Comma-delimited list of host:port pairs to use for establishing the\
    \ initial connections to the Kafka cluster. Applies to all components unless overridden."
  name: "spring.kafka.bootstrap-servers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  name: "spring.kafka.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.time.Duration"
  description: "Frequency with which the consumer offsets are auto-committed to Kafka\
    \ if 'enable.auto.commit' is set to true."
  name: "spring.kafka.consumer.auto-commit-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.String"
  description: "What to do when there is no initial offset in Kafka or if the current\
    \ offset no longer exists on the server."
  name: "spring.kafka.consumer.auto-offset-reset"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.util.List<java.lang.String>"
  description: "Comma-delimited list of host:port pairs to use for establishing the\
    \ initial connections to the Kafka cluster. Overrides the global property, for\
    \ consumers."
  name: "spring.kafka.consumer.bootstrap-servers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  name: "spring.kafka.consumer.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.Boolean"
  description: "Whether the consumer's offset is periodically committed in the background."
  name: "spring.kafka.consumer.enable-auto-commit"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.time.Duration"
  description: "Maximum amount of time the server blocks before answering the fetch\
    \ request if there isn't sufficient data to immediately satisfy the requirement\
    \ given by \"fetch-min-size\"."
  name: "spring.kafka.consumer.fetch-max-wait"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "org.springframework.util.unit.DataSize"
  description: "Minimum amount of data the server should return for a fetch request."
  name: "spring.kafka.consumer.fetch-min-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.String"
  description: "Unique string that identifies the consumer group to which this consumer\
    \ belongs."
  name: "spring.kafka.consumer.group-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.time.Duration"
  description: "Expected time between heartbeats to the consumer coordinator."
  name: "spring.kafka.consumer.heartbeat-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$IsolationLevel"
  description: "Isolation level for reading messages that have been written transactionally."
  name: "spring.kafka.consumer.isolation-level"
  defaultValue: "read-uncommitted"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.Class<?>"
  description: "Deserializer class for keys."
  name: "spring.kafka.consumer.key-deserializer"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.Integer"
  description: "Maximum number of records returned in a single call to poll()."
  name: "spring.kafka.consumer.max-poll-records"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional consumer-specific properties used to configure the client."
  name: "spring.kafka.consumer.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  name: "spring.kafka.consumer.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  name: "spring.kafka.consumer.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.consumer.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.consumer.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  name: "spring.kafka.consumer.ssl.key-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.consumer.ssl.keystore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.consumer.ssl.key-store-location"
- type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.consumer.ssl.keystore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.consumer.ssl.key-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  name: "spring.kafka.consumer.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.consumer.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.consumer.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  name: "spring.kafka.consumer.ssl.trust-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.consumer.ssl.truststore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.consumer.ssl.trust-store-location"
- type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.consumer.ssl.truststore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.consumer.ssl.trust-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer"
  type: "java.lang.Class<?>"
  description: "Deserializer class for values."
  name: "spring.kafka.consumer.value-deserializer"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
  type: "org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer$ControlFlag"
  description: "Control flag for login configuration."
  name: "spring.kafka.jaas.control-flag"
  defaultValue: "required"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
  type: "java.lang.Boolean"
  description: "Whether to enable JAAS configuration."
  name: "spring.kafka.jaas.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
  type: "java.lang.String"
  description: "Login module."
  name: "spring.kafka.jaas.login-module"
  defaultValue: "com.sun.security.auth.module.Krb5LoginModule"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional JAAS options."
  name: "spring.kafka.jaas.options"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Integer"
  description: "Number of records between offset commits when ackMode is \"COUNT\"\
    \ or \"COUNT_TIME\"."
  name: "spring.kafka.listener.ack-count"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "org.springframework.kafka.listener.ContainerProperties$AckMode"
  description: "Listener AckMode. See the spring-kafka documentation."
  name: "spring.kafka.listener.ack-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Time between offset commits when ackMode is \"TIME\" or \"COUNT_TIME\"\
    ."
  name: "spring.kafka.listener.ack-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.String"
  description: "Prefix for the listener's consumer client.id property."
  name: "spring.kafka.listener.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Integer"
  description: "Number of threads to run in the listener containers."
  name: "spring.kafka.listener.concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Sleep interval between Consumer.poll(Duration) calls."
  name: "spring.kafka.listener.idle-between-polls"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Time between publishing idle consumer events (no data received)."
  name: "spring.kafka.listener.idle-event-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Boolean"
  description: "Whether to log the container configuration during initialization (INFO\
    \ level)."
  name: "spring.kafka.listener.log-container-config"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Boolean"
  description: "Whether the container should fail to start if at least one of the\
    \ configured topics are not present on the broker."
  name: "spring.kafka.listener.missing-topics-fatal"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Time between checks for non-responsive consumers. If a duration suffix\
    \ is not specified, seconds will be used."
  name: "spring.kafka.listener.monitor-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.lang.Float"
  description: "Multiplier applied to \"pollTimeout\" to determine if a consumer is\
    \ non-responsive."
  name: "spring.kafka.listener.no-poll-threshold"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "java.time.Duration"
  description: "Timeout to use when polling the consumer."
  name: "spring.kafka.listener.poll-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener"
  type: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener$Type"
  description: "Listener type."
  name: "spring.kafka.listener.type"
  defaultValue: "single"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.String"
  description: "Number of acknowledgments the producer requires the leader to have\
    \ received before considering a request complete."
  name: "spring.kafka.producer.acks"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "org.springframework.util.unit.DataSize"
  description: "Default batch size. A small batch size will make batching less common\
    \ and may reduce throughput (a batch size of zero disables batching entirely)."
  name: "spring.kafka.producer.batch-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.util.List<java.lang.String>"
  description: "Comma-delimited list of host:port pairs to use for establishing the\
    \ initial connections to the Kafka cluster. Overrides the global property, for\
    \ producers."
  name: "spring.kafka.producer.bootstrap-servers"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "org.springframework.util.unit.DataSize"
  description: "Total memory size the producer can use to buffer records waiting to\
    \ be sent to the server."
  name: "spring.kafka.producer.buffer-memory"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  name: "spring.kafka.producer.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.String"
  description: "Compression type for all data generated by the producer."
  name: "spring.kafka.producer.compression-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.Class<?>"
  description: "Serializer class for keys."
  name: "spring.kafka.producer.key-serializer"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional producer-specific properties used to configure the client."
  name: "spring.kafka.producer.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.Integer"
  description: "When greater than zero, enables retrying of failed sends."
  name: "spring.kafka.producer.retries"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  name: "spring.kafka.producer.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  name: "spring.kafka.producer.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.producer.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.producer.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  name: "spring.kafka.producer.ssl.key-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.producer.ssl.keystore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.producer.ssl.key-store-location"
- type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.producer.ssl.keystore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.producer.ssl.key-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  name: "spring.kafka.producer.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.producer.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.producer.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  name: "spring.kafka.producer.ssl.trust-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.producer.ssl.truststore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.producer.ssl.trust-store-location"
- type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.producer.ssl.truststore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.producer.ssl.trust-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.String"
  description: "When non empty, enables transaction support for producer."
  name: "spring.kafka.producer.transaction-id-prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer"
  type: "java.lang.Class<?>"
  description: "Serializer class for values."
  name: "spring.kafka.producer.value-serializer"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional properties, common to producers and consumers, used to\
    \ configure the client."
  name: "spring.kafka.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  name: "spring.kafka.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  name: "spring.kafka.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  name: "spring.kafka.ssl.key-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.ssl.keystore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.ssl.key-store-location"
- type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.ssl.keystore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.ssl.key-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  name: "spring.kafka.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  name: "spring.kafka.ssl.trust-store-type"
  defaultValue: ""
- type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.ssl.truststore-location"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.ssl.trust-store-location"
- type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.ssl.truststore-password"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.ssl.trust-store-password"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.String"
  description: "Kafka streams application.id property; default spring.application.name."
  name: "spring.kafka.streams.application-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.Boolean"
  description: "Whether or not to auto-start the streams factory bean."
  name: "spring.kafka.streams.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.util.List<java.lang.String>"
  description: "Comma-delimited list of host:port pairs to use for establishing the\
    \ initial connections to the Kafka cluster. Overrides the global property, for\
    \ streams."
  name: "spring.kafka.streams.bootstrap-servers"
  defaultValue: ""
- type: "java.lang.Integer"
  name: "spring.kafka.streams.cache-max-bytes-buffering"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.kafka.streams.cache-max-size-buffering"
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum memory size to be used for buffering across all threads."
  name: "spring.kafka.streams.cache-max-size-buffering"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Cleanup"
  type: "java.lang.Boolean"
  description: "Cleanup the application’s local state directory on shutdown."
  name: "spring.kafka.streams.cleanup.on-shutdown"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Cleanup"
  type: "java.lang.Boolean"
  description: "Cleanup the application’s local state directory on startup."
  name: "spring.kafka.streams.cleanup.on-startup"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.String"
  description: "ID to pass to the server when making requests. Used for server-side\
    \ logging."
  name: "spring.kafka.streams.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional Kafka properties used to configure the streams."
  name: "spring.kafka.streams.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.Integer"
  description: "The replication factor for change log topics and repartition topics\
    \ created by the stream processing application."
  name: "spring.kafka.streams.replication-factor"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security"
  type: "java.lang.String"
  description: "Security protocol used to communicate with brokers."
  name: "spring.kafka.streams.security.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Password of the private key in the key store file."
  name: "spring.kafka.streams.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the key store file."
  name: "spring.kafka.streams.ssl.key-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the key store file."
  name: "spring.kafka.streams.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the key store."
  name: "spring.kafka.streams.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "SSL protocol to use."
  name: "spring.kafka.streams.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "org.springframework.core.io.Resource"
  description: "Location of the trust store file."
  name: "spring.kafka.streams.ssl.trust-store-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Store password for the trust store file."
  name: "spring.kafka.streams.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl"
  type: "java.lang.String"
  description: "Type of the trust store."
  name: "spring.kafka.streams.ssl.trust-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams"
  type: "java.lang.String"
  description: "Directory location for the state store."
  name: "spring.kafka.streams.state-dir"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template"
  type: "java.lang.String"
  description: "Default topic to which messages are sent."
  name: "spring.kafka.template.default-topic"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.Boolean"
  description: "Whether read-only operations should use an anonymous environment.\
    \ Disabled by default unless a username is set."
  name: "spring.ldap.anonymous-read-only"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.String"
  description: "Base suffix from which all operations should originate."
  name: "spring.ldap.base"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "LDAP specification settings."
  name: "spring.ldap.base-environment"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties"
  type: "java.util.List<java.lang.String>"
  description: "List of base DNs."
  name: "spring.ldap.embedded.base-dn"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties$Credential"
  type: "java.lang.String"
  description: "Embedded LDAP password."
  name: "spring.ldap.embedded.credential.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties$Credential"
  type: "java.lang.String"
  description: "Embedded LDAP username."
  name: "spring.ldap.embedded.credential.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties"
  type: "java.lang.String"
  description: "Schema (LDIF) script resource reference."
  name: "spring.ldap.embedded.ldif"
  defaultValue: "classpath:schema.ldif"
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties"
  type: "java.lang.Integer"
  description: "Embedded LDAP port."
  name: "spring.ldap.embedded.port"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties$Validation"
  type: "java.lang.Boolean"
  description: "Whether to enable LDAP schema validation."
  name: "spring.ldap.embedded.validation.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties$Validation"
  type: "org.springframework.core.io.Resource"
  description: "Path to the custom schema."
  name: "spring.ldap.embedded.validation.schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.String"
  description: "Login password of the server."
  name: "spring.ldap.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether NameNotFoundException should be ignored in searches via the\
    \ LdapTemplate."
  name: "spring.ldap.template.ignore-name-not-found-exception"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether PartialResultException should be ignored in searches via the\
    \ LdapTemplate."
  name: "spring.ldap.template.ignore-partial-result-exception"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether SizeLimitExceededException should be ignored in searches via\
    \ the LdapTemplate."
  name: "spring.ldap.template.ignore-size-limit-exceeded-exception"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.String[]"
  description: "LDAP URLs of the server."
  name: "spring.ldap.urls"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.ldap.LdapProperties"
  type: "java.lang.String"
  description: "Login username of the server."
  name: "spring.ldap.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.context.LifecycleProperties"
  type: "java.time.Duration"
  description: "Timeout for the shutdown of any phase (group of SmartLifecycle beans\
    \ with the same 'phase' value)."
  name: "spring.lifecycle.timeout-per-shutdown-phase"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Change log configuration path."
  name: "spring.liquibase.change-log"
  defaultValue: "classpath:/db/changelog/db.changelog-master.yaml"
- type: "java.lang.Boolean"
  description: "Check the change log location exists."
  name: "spring.liquibase.check-change-log-location"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReason: "Liquibase has it's own check that checks if the change log location\
    \ exists making this property redundant."
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.Boolean"
  description: "Whether to clear all checksums in the current changelog, so they will\
    \ be recalculated upon the next update."
  name: "spring.liquibase.clear-checksums"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Comma-separated list of runtime contexts to use."
  name: "spring.liquibase.contexts"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Name of table to use for tracking concurrent Liquibase usage."
  name: "spring.liquibase.database-change-log-lock-table"
  defaultValue: "DATABASECHANGELOGLOCK"
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Name of table to use for tracking change history."
  name: "spring.liquibase.database-change-log-table"
  defaultValue: "DATABASECHANGELOG"
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Default database schema."
  name: "spring.liquibase.default-schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Fully qualified name of the JDBC driver. Auto-detected based on the\
    \ URL by default."
  name: "spring.liquibase.driver-class-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.Boolean"
  description: "Whether to first drop the database schema."
  name: "spring.liquibase.drop-first"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable Liquibase support."
  name: "spring.liquibase.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Comma-separated list of runtime labels to use."
  name: "spring.liquibase.labels"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Schema to use for Liquibase objects."
  name: "spring.liquibase.liquibase-schema"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Tablespace to use for Liquibase objects."
  name: "spring.liquibase.liquibase-tablespace"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Change log parameters."
  name: "spring.liquibase.parameters"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Login password of the database to migrate."
  name: "spring.liquibase.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.io.File"
  description: "File to which rollback SQL is written when an update is performed."
  name: "spring.liquibase.rollback-file"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Tag name to use when applying database changes. Can also be used with\
    \ \"rollbackFile\" to generate a rollback script for all existing changes associated\
    \ with that tag."
  name: "spring.liquibase.tag"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.Boolean"
  description: "Whether rollback should be tested before update is performed."
  name: "spring.liquibase.test-rollback-on-update"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "JDBC URL of the database to migrate. If not set, the primary configured\
    \ data source is used."
  name: "spring.liquibase.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties"
  type: "java.lang.String"
  description: "Login user of the database to migrate."
  name: "spring.liquibase.user"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.nio.charset.Charset"
  description: "Default MimeMessage encoding."
  name: "spring.mail.default-encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "SMTP server host. For instance, `smtp.example.com`."
  name: "spring.mail.host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "Session JNDI name. When set, takes precedence over other Session settings."
  name: "spring.mail.jndi-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "Login password of the SMTP server."
  name: "spring.mail.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.Integer"
  description: "SMTP server port."
  name: "spring.mail.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional JavaMail Session properties."
  name: "spring.mail.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "Protocol used by the SMTP server."
  name: "spring.mail.protocol"
  defaultValue: "smtp"
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.Boolean"
  description: "Whether to test that the mail server is available on startup."
  name: "spring.mail.test-connection"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mail.MailProperties"
  type: "java.lang.String"
  description: "Login user of the SMTP server."
  name: "spring.mail.username"
  defaultValue: ""
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Whether bean definition overriding, by registering a definition with\
    \ the same name as an existing definition, is allowed."
  name: "spring.main.allow-bean-definition-overriding"
  defaultValue: false
- owner: "org.springframework.boot.SpringApplication"
  type: "org.springframework.boot.Banner$Mode"
  description: "Mode used to display the banner when the application runs."
  name: "spring.main.banner-mode"
  defaultValue: "console"
- type: "org.springframework.boot.cloud.CloudPlatform"
  description: "Override the Cloud Platform auto-detection."
  name: "spring.main.cloud-platform"
  defaultValue: ""
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Whether initialization should be performed lazily."
  name: "spring.main.lazy-initialization"
  defaultValue: false
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Whether to log information about the application when it starts."
  name: "spring.main.log-startup-info"
  defaultValue: true
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Whether the application should have a shutdown hook registered."
  name: "spring.main.register-shutdown-hook"
  defaultValue: true
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Display the banner when the application runs."
  name: "spring.main.show-banner"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.main.banner-mode"
- owner: "org.springframework.boot.SpringApplication"
  type: "java.util.Set<java.lang.String>"
  description: "Sources (class names, package names, or XML resource locations) to\
    \ include in the ApplicationContext."
  name: "spring.main.sources"
  defaultValue: ""
- owner: "org.springframework.boot.SpringApplication"
  type: "org.springframework.boot.WebApplicationType"
  description: "Flag to explicitly request a specific type of web application. If\
    \ not set, auto-detected based on the classpath."
  name: "spring.main.web-application-type"
  defaultValue: ""
- owner: "org.springframework.boot.SpringApplication"
  type: "java.lang.Boolean"
  description: "Run the application in a web environment (auto-detected by default)."
  name: "spring.main.web-environment"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.main.web-application-type"
- owner: "org.springframework.boot.context.FileEncodingApplicationListener"
  type: "java.nio.charset.Charset"
  description: "Expected character encoding the application must use."
  name: "spring.mandatory-file-encoding"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to always apply the MessageFormat rules, parsing even messages\
    \ without arguments."
  name: "spring.messages.always-use-message-format"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.lang.String"
  description: "Comma-separated list of basenames (essentially a fully-qualified classpath\
    \ location), each following the ResourceBundle convention with relaxed support\
    \ for slash based locations. If it doesn't contain a package qualifier (such as\
    \ \"org.mypackage\"), it will be resolved from the classpath root."
  name: "spring.messages.basename"
  defaultValue: "messages"
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.time.Duration"
  description: "Loaded resource bundle files cache duration. When not set, bundles\
    \ are cached forever. If a duration suffix is not specified, seconds will be used."
  name: "spring.messages.cache-duration"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.nio.charset.Charset"
  description: "Message bundles encoding."
  name: "spring.messages.encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to fall back to the system Locale if no files for a specific\
    \ Locale have been found. if this is turned off, the only fallback will be the\
    \ default file (e.g. \"messages.properties\" for basename \"messages\")."
  name: "spring.messages.fallback-to-system-locale"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to use the message code as the default message instead of\
    \ throwing a \"NoSuchMessageException\". Recommended during development only."
  name: "spring.messages.use-code-as-default-message"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties"
  type: "java.util.Set<de.flapdoodle.embed.mongo.distribution.Feature>"
  description: "Comma-separated list of features to enable. Uses the defaults of the\
    \ configured version by default."
  name: "spring.mongodb.embedded.features"
  defaultValue:
  - "sync_delay"
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties$Storage"
  type: "java.lang.String"
  description: "Directory used for data storage."
  name: "spring.mongodb.embedded.storage.database-dir"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties$Storage"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of the oplog."
  name: "spring.mongodb.embedded.storage.oplog-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties$Storage"
  type: "java.lang.String"
  description: "Name of the replica set."
  name: "spring.mongodb.embedded.storage.repl-set-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoProperties"
  type: "java.lang.String"
  description: "Version of Mongo to use."
  name: "spring.mongodb.embedded.version"
  defaultValue: "3.5.5"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpServletRequest attributes are allowed to override (hide)\
    \ controller generated model attributes of the same name."
  name: "spring.mustache.allow-request-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether HttpSession attributes are allowed to override (hide) controller\
    \ generated model attributes of the same name."
  name: "spring.mustache.allow-session-override"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable template caching."
  name: "spring.mustache.cache"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.nio.charset.Charset"
  description: "Template encoding."
  name: "spring.mustache.charset"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the templates location exists."
  name: "spring.mustache.check-template-location"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "org.springframework.util.MimeType"
  description: "Content-Type value."
  name: "spring.mustache.content-type"
  defaultValue: "text/html"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable MVC view resolution for this technology."
  name: "spring.mustache.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether all request attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.mustache.expose-request-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether all HttpSession attributes should be added to the model prior\
    \ to merging with the template."
  name: "spring.mustache.expose-session-attributes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.Boolean"
  description: "Whether to expose a RequestContext for use by Spring's macro library,\
    \ under the name \"springMacroRequestContext\"."
  name: "spring.mustache.expose-spring-macro-helpers"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.String"
  description: "Prefix to apply to template names."
  name: "spring.mustache.prefix"
  defaultValue: "classpath:/templates/"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.String"
  description: "Name of the RequestContext attribute for all views."
  name: "spring.mustache.request-context-attribute"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.String"
  description: "Suffix to apply to template names."
  name: "spring.mustache.suffix"
  defaultValue: ".mustache"
- owner: "org.springframework.boot.autoconfigure.mustache.MustacheProperties"
  type: "java.lang.String[]"
  description: "View names that can be resolved."
  name: "spring.mustache.view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async"
  type: "java.time.Duration"
  description: "Amount of time before asynchronous request handling times out. If\
    \ this value is not set, the default timeout of the underlying implementation\
    \ is used."
  name: "spring.mvc.async.request-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  type: "java.lang.Boolean"
  description: "Whether a request parameter (\"format\" by default) should be used\
    \ to determine the requested media type."
  name: "spring.mvc.contentnegotiation.favor-parameter"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  type: "java.lang.Boolean"
  description: "Whether the path extension in the URL path should be used to determine\
    \ the requested media type. If enabled a request \"/users.pdf\" will be interpreted\
    \ as a request for \"application/pdf\" regardless of the 'Accept' header."
  name: "spring.mvc.contentnegotiation.favor-path-extension"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReason: "Use of path extensions for request mapping and for content negotiation\
    \ is discouraged."
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  type: "java.util.Map<java.lang.String,org.springframework.http.MediaType>"
  description: "Map file extensions to media types for content negotiation. For instance,\
    \ yml to text/yaml."
  name: "spring.mvc.contentnegotiation.media-types"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
  type: "java.lang.String"
  description: "Query parameter name to use when \"favor-parameter\" is enabled."
  name: "spring.mvc.contentnegotiation.parameter-name"
  defaultValue: ""
- type: "java.lang.String"
  description: "Preferred JSON mapper to use for HTTP message conversion. By default,\
    \ auto-detected according to the environment."
  name: "spring.mvc.converters.preferred-json-mapper"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.String"
  name: "spring.mvc.date-format"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.mvc.format.date"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether to dispatch OPTIONS requests to the FrameworkServlet doService\
    \ method."
  name: "spring.mvc.dispatch-options-request"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether to dispatch TRACE requests to the FrameworkServlet doService\
    \ method."
  name: "spring.mvc.dispatch-trace-request"
  defaultValue: false
- type: "java.lang.Boolean"
  description: "Whether to enable resolution of favicon.ico."
  name: "spring.mvc.favicon.enabled"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
  type: "java.lang.String"
  description: "Date format to use, for example `dd/MM/yyyy`."
  name: "spring.mvc.format.date"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
  type: "java.lang.String"
  description: "Date-time format to use, for example `yyyy-MM-dd HH:mm:ss`."
  name: "spring.mvc.format.date-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
  type: "java.lang.String"
  description: "Time format to use, for example `HH:mm:ss`."
  name: "spring.mvc.format.time"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable Spring's FormContentFilter."
  name: "spring.mvc.formcontent.filter.enabled"
  defaultValue: true
- type: "java.lang.Boolean"
  description: "Whether to enable Spring's HttpPutFormContentFilter."
  name: "spring.mvc.formcontent.putfilter.enabled"
  defaultValue: true
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.mvc.formcontent.filter.enabled"
- type: "java.lang.Boolean"
  description: "Whether to enable Spring's HiddenHttpMethodFilter."
  name: "spring.mvc.hiddenmethod.filter.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether the content of the \"default\" model should be ignored during\
    \ redirect scenarios."
  name: "spring.mvc.ignore-default-model-on-redirect"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.util.Locale"
  description: "Locale to use. By default, this locale is overridden by the \"Accept-Language\"\
    \ header."
  name: "spring.mvc.locale"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.locale"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$LocaleResolver"
  description: "Define how the locale should be resolved."
  name: "spring.mvc.locale-resolver"
  defaultValue: "accept-header"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.locale-resolver"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether logging of (potentially sensitive) request details at DEBUG\
    \ and TRACE level is allowed."
  name: "spring.mvc.log-request-details"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable warn logging of exceptions resolved by a \"HandlerExceptionResolver\"\
    , except for \"DefaultHandlerExceptionResolver\"."
  name: "spring.mvc.log-resolved-exception"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "org.springframework.validation.DefaultMessageCodesResolver$Format"
  description: "Formatting strategy for message codes. For instance, `PREFIX_ERROR_CODE`."
  name: "spring.mvc.message-codes-resolver-format"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
  type: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
  description: "Choice of strategy for matching request paths against registered mappings."
  name: "spring.mvc.pathmatch.matching-strategy"
  defaultValue: "ant-path-matcher"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
  type: "java.lang.Boolean"
  description: "Whether suffix pattern matching should work only against extensions\
    \ registered with \"spring.mvc.contentnegotiation.media-types.*\". This is generally\
    \ recommended to reduce ambiguity and to avoid issues such as when a \".\" appears\
    \ in the path for other reasons. Enabling this option is not compatible with the\
    \ PathPatternParser matching strategy."
  name: "spring.mvc.pathmatch.use-registered-suffix-pattern"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReason: "Use of path extensions for request mapping and for content negotiation\
    \ is discouraged."
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
  type: "java.lang.Boolean"
  description: "Whether to use suffix pattern match (\".*\") when matching patterns\
    \ to requests. If enabled a method mapped to \"/users\" also matches to \"/users.*\"\
    . Enabling this option is not compatible with the PathPatternParser matching strategy."
  name: "spring.mvc.pathmatch.use-suffix-pattern"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReason: "Use of path extensions for request mapping and for content negotiation\
    \ is discouraged."
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether to publish a ServletRequestHandledEvent at the end of each\
    \ request."
  name: "spring.mvc.publish-request-handled-events"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
  type: "java.lang.Integer"
  description: "Load on startup priority of the dispatcher servlet."
  name: "spring.mvc.servlet.load-on-startup"
  defaultValue: -1
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
  type: "java.lang.String"
  description: "Path of the dispatcher servlet. Setting a custom value for this property\
    \ is not compatible with the PathPatternParser matching strategy."
  name: "spring.mvc.servlet.path"
  defaultValue: "/"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.String"
  description: "Path pattern used for static resources."
  name: "spring.mvc.static-path-pattern"
  defaultValue: "/**"
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
  type: "java.lang.Boolean"
  description: "Whether a \"NoHandlerFoundException\" should be thrown if no Handler\
    \ was found to process a request."
  name: "spring.mvc.throw-exception-if-no-handler-found"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
  type: "java.lang.String"
  description: "Spring MVC view prefix."
  name: "spring.mvc.view.prefix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
  type: "java.lang.String"
  description: "Spring MVC view suffix."
  name: "spring.mvc.view.suffix"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Authentication"
  type: "java.lang.String"
  description: "Kerberos ticket for connecting to the database. Mutual exclusive with\
    \ a given username."
  name: "spring.neo4j.authentication.kerberos-ticket"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Authentication"
  type: "java.lang.String"
  description: "Login password of the server."
  name: "spring.neo4j.authentication.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Authentication"
  type: "java.lang.String"
  description: "Realm to connect to."
  name: "spring.neo4j.authentication.realm"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Authentication"
  type: "java.lang.String"
  description: "Login user of the server."
  name: "spring.neo4j.authentication.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties"
  type: "java.time.Duration"
  description: "Timeout for borrowing connections from the pool."
  name: "spring.neo4j.connection-timeout"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties"
  type: "java.time.Duration"
  description: "Maximum time transactions are allowed to retry."
  name: "spring.neo4j.max-transaction-retry-time"
  defaultValue: "30s"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.time.Duration"
  description: "Acquisition of new connections will be attempted for at most configured\
    \ timeout."
  name: "spring.neo4j.pool.connection-acquisition-timeout"
  defaultValue: "60s"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.time.Duration"
  description: "Pooled connections that have been idle in the pool for longer than\
    \ this threshold will be tested before they are used again."
  name: "spring.neo4j.pool.idle-time-before-connection-test"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.lang.Boolean"
  description: "Whether to log leaked sessions."
  name: "spring.neo4j.pool.log-leaked-sessions"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.time.Duration"
  description: "Pooled connections older than this threshold will be closed and removed\
    \ from the pool."
  name: "spring.neo4j.pool.max-connection-lifetime"
  defaultValue: "1h"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum amount of connections in the connection pool towards a single\
    \ database."
  name: "spring.neo4j.pool.max-connection-pool-size"
  defaultValue: 100
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Pool"
  type: "java.lang.Boolean"
  description: "Whether to enable metrics."
  name: "spring.neo4j.pool.metrics-enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security"
  type: "java.io.File"
  description: "Path to the file that holds the trusted certificates."
  name: "spring.neo4j.security.cert-file"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security"
  type: "java.lang.Boolean"
  description: "Whether the driver should use encrypted traffic."
  name: "spring.neo4j.security.encrypted"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security"
  type: "java.lang.Boolean"
  description: "Whether hostname verification is required."
  name: "spring.neo4j.security.hostname-verification-enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security"
  type: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties$Security$TrustStrategy"
  description: "Trust strategy to use."
  name: "spring.neo4j.security.trust-strategy"
  defaultValue: "trust-system-ca-signed-certificates"
- owner: "org.springframework.boot.autoconfigure.neo4j.Neo4jProperties"
  type: "java.net.URI"
  description: "URI used by the driver."
  name: "spring.neo4j.uri"
  defaultValue: "bolt://localhost:7687"
- type: "org.springframework.boot.ansi.AnsiOutput$Enabled"
  description: "Configures the ANSI output."
  name: "spring.output.ansi.enabled"
  defaultValue: "detect"
- owner: "org.springframework.boot.context.ApplicationPidFileWriter"
  type: "java.lang.Boolean"
  description: "Fails if ApplicationPidFileWriter is used but it cannot write the\
    \ PID file."
  name: "spring.pid.fail-on-write-error"
  defaultValue: ""
- owner: "org.springframework.boot.context.ApplicationPidFileWriter"
  type: "java.lang.String"
  description: "Location of the PID file to write (if ApplicationPidFileWriter is\
    \ used)."
  name: "spring.pid.file"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of profile expressions that at least one should\
    \ match for the document to be included."
  name: "spring.profiles"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.config.activate.on-profile"
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of active profiles. Can be overridden by a command\
    \ line switch."
  name: "spring.profiles.active"
  defaultValue: ""
- owner: "org.springframework.boot.context.config.ConfigFileApplicationListener"
  type: "java.util.List<java.lang.String>"
  description: "Unconditionally activate the specified comma-separated list of profiles\
    \ (or list of profiles if using YAML)."
  name: "spring.profiles.include"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.lang.Boolean"
  description: "Whether to automatically start the scheduler after initialization."
  name: "spring.quartz.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties$Jdbc"
  type: "java.util.List<java.lang.String>"
  description: "Prefixes for single-line comments in SQL initialization scripts."
  name: "spring.quartz.jdbc.comment-prefix"
  defaultValue:
  - "#"
  - "--"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties$Jdbc"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Database schema initialization mode."
  name: "spring.quartz.jdbc.initialize-schema"
  defaultValue: "embedded"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties$Jdbc"
  type: "java.lang.String"
  description: "Path to the SQL file to use to initialize the database schema."
  name: "spring.quartz.jdbc.schema"
  defaultValue: "classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "org.springframework.boot.autoconfigure.quartz.JobStoreType"
  description: "Quartz job store type."
  name: "spring.quartz.job-store-type"
  defaultValue: "memory"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.lang.Boolean"
  description: "Whether configured jobs should overwrite existing job definitions."
  name: "spring.quartz.overwrite-existing-jobs"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional Quartz Scheduler properties."
  name: "spring.quartz.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.lang.String"
  description: "Name of the scheduler."
  name: "spring.quartz.scheduler-name"
  defaultValue: "quartzScheduler"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.time.Duration"
  description: "Delay after which the scheduler is started once initialization completes.\
    \ Setting this property makes sense if no jobs should be run before the entire\
    \ application has started up."
  name: "spring.quartz.startup-delay"
  defaultValue: "0s"
- owner: "org.springframework.boot.autoconfigure.quartz.QuartzProperties"
  type: "java.lang.Boolean"
  description: "Whether to wait for running jobs to complete on shutdown."
  name: "spring.quartz.wait-for-jobs-to-complete-on-shutdown"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.Boolean"
  description: "Whether to generate a random database name. Ignore any configured\
    \ name when enabled."
  name: "spring.r2dbc.generate-unique-name"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.String"
  description: "Database name. Set if no name is specified in the url. Default to\
    \ \"testdb\" when using an embedded database."
  name: "spring.r2dbc.name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.String"
  description: "Login password of the database. Set if no password is specified in\
    \ the url."
  name: "spring.r2dbc.password"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether pooling is enabled. Enabled automatically if \"r2dbc-pool\"\
    \ is on the classpath."
  name: "spring.r2dbc.pool.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.lang.Integer"
  description: "Initial connection pool size."
  name: "spring.r2dbc.pool.initial-size"
  defaultValue: 10
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum time to acquire a connection from the pool. By default, wait\
    \ indefinitely."
  name: "spring.r2dbc.pool.max-acquire-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum time to wait to create a new connection. By default, wait\
    \ indefinitely."
  name: "spring.r2dbc.pool.max-create-connection-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum amount of time that a connection is allowed to sit idle in\
    \ the pool."
  name: "spring.r2dbc.pool.max-idle-time"
  defaultValue: "30m"
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum lifetime of a connection in the pool. By default, connections\
    \ have an infinite lifetime."
  name: "spring.r2dbc.pool.max-life-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximal connection pool size."
  name: "spring.r2dbc.pool.max-size"
  defaultValue: 10
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "io.r2dbc.spi.ValidationDepth"
  description: "Validation depth."
  name: "spring.r2dbc.pool.validation-depth"
  defaultValue: "local"
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool"
  type: "java.lang.String"
  description: "Validation query."
  name: "spring.r2dbc.pool.validation-query"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Additional R2DBC options."
  name: "spring.r2dbc.properties"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.String"
  description: "R2DBC URL of the database. database name, username, password and pooling\
    \ options specified in the url take precedence over individual options."
  name: "spring.r2dbc.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties"
  type: "java.lang.String"
  description: "Login username of the database. Set if no username is specified in\
    \ the url."
  name: "spring.r2dbc.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "org.springframework.amqp.rabbit.connection.AbstractConnectionFactory$AddressShuffleMode"
  description: "Mode used to shuffle configured addresses."
  name: "spring.rabbitmq.address-shuffle-mode"
  defaultValue: "none"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "Comma-separated list of addresses to which the client should connect.\
    \ When set, the host and port are ignored."
  name: "spring.rabbitmq.addresses"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache$Channel"
  type: "java.time.Duration"
  description: "Duration to wait to obtain a channel if the cache size has been reached.\
    \ If 0, always create a new channel."
  name: "spring.rabbitmq.cache.channel.checkout-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache$Channel"
  type: "java.lang.Integer"
  description: "Number of channels to retain in the cache. When \"check-timeout\"\
    \ > 0, max channels per connection."
  name: "spring.rabbitmq.cache.channel.size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache$Connection"
  type: "org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CacheMode"
  description: "Connection factory cache mode."
  name: "spring.rabbitmq.cache.connection.mode"
  defaultValue: "channel"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache$Connection"
  type: "java.lang.Integer"
  description: "Number of connections to cache. Only applies when mode is CONNECTION."
  name: "spring.rabbitmq.cache.connection.size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.time.Duration"
  description: "Continuation timeout for RPC calls in channels. Set it to zero to\
    \ wait forever."
  name: "spring.rabbitmq.channel-rpc-timeout"
  defaultValue: "10m"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.time.Duration"
  description: "Connection timeout. Set it to zero to wait forever."
  name: "spring.rabbitmq.connection-timeout"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to create an AmqpAdmin bean."
  name: "spring.rabbitmq.dynamic"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "RabbitMQ host. Ignored if an address is set."
  name: "spring.rabbitmq.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "org.springframework.amqp.core.AcknowledgeMode"
  description: "Acknowledge mode of container."
  name: "spring.rabbitmq.listener.direct.acknowledge-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Boolean"
  description: "Whether to start the container automatically on startup."
  name: "spring.rabbitmq.listener.direct.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Integer"
  description: "Number of consumers per queue."
  name: "spring.rabbitmq.listener.direct.consumers-per-queue"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Boolean"
  description: "Whether the container should present batched messages as discrete\
    \ messages or call the listener with the batch."
  name: "spring.rabbitmq.listener.direct.de-batching-enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Boolean"
  description: "Whether rejected deliveries are re-queued by default."
  name: "spring.rabbitmq.listener.direct.default-requeue-rejected"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.time.Duration"
  description: "How often idle container events should be published."
  name: "spring.rabbitmq.listener.direct.idle-event-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Boolean"
  description: "Whether to fail if the queues declared by the container are not available\
    \ on the broker."
  name: "spring.rabbitmq.listener.direct.missing-queues-fatal"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$DirectContainer"
  type: "java.lang.Integer"
  description: "Maximum number of unacknowledged messages that can be outstanding\
    \ at each consumer."
  name: "spring.rabbitmq.listener.direct.prefetch"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Boolean"
  description: "Whether publishing retries are enabled."
  name: "spring.rabbitmq.listener.direct.retry.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.time.Duration"
  description: "Duration between the first and second attempt to deliver a message."
  name: "spring.rabbitmq.listener.direct.retry.initial-interval"
  defaultValue: "1000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Integer"
  description: "Maximum number of attempts to deliver a message."
  name: "spring.rabbitmq.listener.direct.retry.max-attempts"
  defaultValue: 3
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.time.Duration"
  description: "Maximum duration between attempts."
  name: "spring.rabbitmq.listener.direct.retry.max-interval"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Double"
  description: "Multiplier to apply to the previous retry interval."
  name: "spring.rabbitmq.listener.direct.retry.multiplier"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Boolean"
  description: "Whether retries are stateless or stateful."
  name: "spring.rabbitmq.listener.direct.retry.stateless"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "org.springframework.amqp.core.AcknowledgeMode"
  description: "Acknowledge mode of container."
  name: "spring.rabbitmq.listener.simple.acknowledge-mode"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether to start the container automatically on startup."
  name: "spring.rabbitmq.listener.simple.auto-startup"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Integer"
  description: "Batch size, expressed as the number of physical messages, to be used\
    \ by the container."
  name: "spring.rabbitmq.listener.simple.batch-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Integer"
  description: "Minimum number of listener invoker threads."
  name: "spring.rabbitmq.listener.simple.concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether the container creates a batch of messages based on the 'receive-timeout'\
    \ and 'batch-size'. Coerces 'de-batching-enabled' to true to include the contents\
    \ of a producer created batch in the batch as discrete records."
  name: "spring.rabbitmq.listener.simple.consumer-batch-enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether the container should present batched messages as discrete\
    \ messages or call the listener with the batch."
  name: "spring.rabbitmq.listener.simple.de-batching-enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether rejected deliveries are re-queued by default."
  name: "spring.rabbitmq.listener.simple.default-requeue-rejected"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.time.Duration"
  description: "How often idle container events should be published."
  name: "spring.rabbitmq.listener.simple.idle-event-interval"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Integer"
  description: "Maximum number of listener invoker threads."
  name: "spring.rabbitmq.listener.simple.max-concurrency"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Boolean"
  description: "Whether to fail if the queues declared by the container are not available\
    \ on the broker and/or whether to stop the container if one or more queues are\
    \ deleted at runtime."
  name: "spring.rabbitmq.listener.simple.missing-queues-fatal"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$SimpleContainer"
  type: "java.lang.Integer"
  description: "Maximum number of unacknowledged messages that can be outstanding\
    \ at each consumer."
  name: "spring.rabbitmq.listener.simple.prefetch"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Boolean"
  description: "Whether publishing retries are enabled."
  name: "spring.rabbitmq.listener.simple.retry.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.time.Duration"
  description: "Duration between the first and second attempt to deliver a message."
  name: "spring.rabbitmq.listener.simple.retry.initial-interval"
  defaultValue: "1000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Integer"
  description: "Maximum number of attempts to deliver a message."
  name: "spring.rabbitmq.listener.simple.retry.max-attempts"
  defaultValue: 3
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.time.Duration"
  description: "Maximum duration between attempts."
  name: "spring.rabbitmq.listener.simple.retry.max-interval"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Double"
  description: "Multiplier to apply to the previous retry interval."
  name: "spring.rabbitmq.listener.simple.retry.multiplier"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ListenerRetry"
  type: "java.lang.Boolean"
  description: "Whether retries are stateless or stateful."
  name: "spring.rabbitmq.listener.simple.retry.stateless"
  defaultValue: true
- type: "java.lang.Integer"
  name: "spring.rabbitmq.listener.simple.transaction-size"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Listener"
  type: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$ContainerType"
  description: "Listener container type."
  name: "spring.rabbitmq.listener.type"
  defaultValue: "simple"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "Login to authenticate against the broker."
  name: "spring.rabbitmq.password"
  defaultValue: "guest"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.Integer"
  description: "RabbitMQ port. Ignored if an address is set. Default to 5672, or 5671\
    \ if SSL is enabled."
  name: "spring.rabbitmq.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "org.springframework.amqp.rabbit.connection.CachingConnectionFactory$ConfirmType"
  description: "Type of publisher confirms to use."
  name: "spring.rabbitmq.publisher-confirm-type"
  defaultValue: ""
- type: "java.lang.Boolean"
  name: "spring.rabbitmq.publisher-confirms"
  defaultValue: ""
  deprecationLevel: "ERROR"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable publisher returns."
  name: "spring.rabbitmq.publisher-returns"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.Integer"
  description: "Number of channels per connection requested by the client. Use 0 for\
    \ unlimited."
  name: "spring.rabbitmq.requested-channel-max"
  defaultValue: 2047
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.time.Duration"
  description: "Requested heartbeat timeout; zero for none. If a duration suffix is\
    \ not specified, seconds will be used."
  name: "spring.rabbitmq.requested-heartbeat"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "SSL algorithm to use. By default, configured by the Rabbit client\
    \ library."
  name: "spring.rabbitmq.ssl.algorithm"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support. Determined automatically if an address\
    \ is provided with the protocol (amqp:// vs. amqps://)."
  name: "spring.rabbitmq.ssl.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Path to the key store that holds the SSL certificate."
  name: "spring.rabbitmq.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the key store."
  name: "spring.rabbitmq.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Key store type."
  name: "spring.rabbitmq.ssl.key-store-type"
  defaultValue: "PKCS12"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Trust store that holds SSL certificates."
  name: "spring.rabbitmq.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Password used to access the trust store."
  name: "spring.rabbitmq.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.String"
  description: "Trust store type."
  name: "spring.rabbitmq.ssl.trust-store-type"
  defaultValue: "JKS"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable server side certificate validation."
  name: "spring.rabbitmq.ssl.validate-server-certificate"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl"
  type: "java.lang.Boolean"
  description: "Whether to enable hostname verification."
  name: "spring.rabbitmq.ssl.verify-hostname"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.lang.String"
  description: "Name of the default queue to receive messages from when none is specified\
    \ explicitly."
  name: "spring.rabbitmq.template.default-receive-queue"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.lang.String"
  description: "Name of the default exchange to use for send operations."
  name: "spring.rabbitmq.template.exchange"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.lang.Boolean"
  description: "Whether to enable mandatory messages."
  name: "spring.rabbitmq.template.mandatory"
  defaultValue: ""
- type: "java.lang.String"
  name: "spring.rabbitmq.template.queue"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.rabbitmq.template.default-receive-queue"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.time.Duration"
  description: "Timeout for `receive()` operations."
  name: "spring.rabbitmq.template.receive-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.time.Duration"
  description: "Timeout for `sendAndReceive()` operations."
  name: "spring.rabbitmq.template.reply-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.lang.Boolean"
  description: "Whether publishing retries are enabled."
  name: "spring.rabbitmq.template.retry.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.time.Duration"
  description: "Duration between the first and second attempt to deliver a message."
  name: "spring.rabbitmq.template.retry.initial-interval"
  defaultValue: "1000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.lang.Integer"
  description: "Maximum number of attempts to deliver a message."
  name: "spring.rabbitmq.template.retry.max-attempts"
  defaultValue: 3
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.time.Duration"
  description: "Maximum duration between attempts."
  name: "spring.rabbitmq.template.retry.max-interval"
  defaultValue: "10000ms"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry"
  type: "java.lang.Double"
  description: "Multiplier to apply to the previous retry interval."
  name: "spring.rabbitmq.template.retry.multiplier"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template"
  type: "java.lang.String"
  description: "Value of a default routing key to use for send operations."
  name: "spring.rabbitmq.template.routing-key"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "Login user to authenticate to the broker."
  name: "spring.rabbitmq.username"
  defaultValue: "guest"
- owner: "org.springframework.boot.autoconfigure.amqp.RabbitProperties"
  type: "java.lang.String"
  description: "Virtual host to use when connecting to the broker."
  name: "spring.rabbitmq.virtual-host"
  defaultValue: ""
- owner: "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor"
  type: "java.lang.Boolean"
  description: "Whether the Reactor Debug Agent should be enabled when reactor-tools\
    \ is present."
  name: "spring.reactor.debug-agent.enabled"
  defaultValue: true
- description: "Whether Reactor should collect stacktrace information at runtime."
  name: "spring.reactor.stacktrace-mode.enabled"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.reactor.debug-agent.enabled"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Client name to be set on connections with CLIENT SETNAME."
  name: "spring.redis.client-name"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType"
  description: "Type of client to use. By default, auto-detected according to the\
    \ classpath."
  name: "spring.redis.client-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
  type: "java.lang.Integer"
  description: "Maximum number of redirects to follow when executing commands across\
    \ the cluster."
  name: "spring.redis.cluster.max-redirects"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of \"host:port\" pairs to bootstrap from. This\
    \ represents an \"initial\" list of cluster nodes and is required to have at least\
    \ one entry."
  name: "spring.redis.cluster.nodes"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.time.Duration"
  description: "Connection timeout."
  name: "spring.redis.connect-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.Integer"
  description: "Database index used by the connection factory."
  name: "spring.redis.database"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Redis server host."
  name: "spring.redis.host"
  defaultValue: "localhost"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum number of connections that can be allocated by the pool at\
    \ a given time. Use a negative value for no limit."
  name: "spring.redis.jedis.pool.max-active"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum number of \"idle\" connections in the pool. Use a negative\
    \ value to indicate an unlimited number of idle connections."
  name: "spring.redis.jedis.pool.max-idle"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum amount of time a connection allocation should block before\
    \ throwing an exception when the pool is exhausted. Use a negative value to block\
    \ indefinitely."
  name: "spring.redis.jedis.pool.max-wait"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if both it and time between eviction runs\
    \ are positive."
  name: "spring.redis.jedis.pool.min-idle"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.time.Duration"
  description: "Time between runs of the idle object evictor thread. When positive,\
    \ the idle object evictor thread starts, otherwise no idle object eviction is\
    \ performed."
  name: "spring.redis.jedis.pool.time-between-eviction-runs"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh"
  type: "java.lang.Boolean"
  description: "Whether adaptive topology refreshing using all available refresh triggers\
    \ should be used."
  name: "spring.redis.lettuce.cluster.refresh.adaptive"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh"
  type: "java.lang.Boolean"
  description: "Whether to discover and query all cluster nodes for obtaining the\
    \ cluster topology. When set to false, only the initial seed nodes are used as\
    \ sources for topology discovery."
  name: "spring.redis.lettuce.cluster.refresh.dynamic-refresh-sources"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh"
  type: "java.time.Duration"
  description: "Cluster topology refresh period."
  name: "spring.redis.lettuce.cluster.refresh.period"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum number of connections that can be allocated by the pool at\
    \ a given time. Use a negative value for no limit."
  name: "spring.redis.lettuce.pool.max-active"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum number of \"idle\" connections in the pool. Use a negative\
    \ value to indicate an unlimited number of idle connections."
  name: "spring.redis.lettuce.pool.max-idle"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.time.Duration"
  description: "Maximum amount of time a connection allocation should block before\
    \ throwing an exception when the pool is exhausted. Use a negative value to block\
    \ indefinitely."
  name: "spring.redis.lettuce.pool.max-wait"
  defaultValue: "-1ms"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.lang.Integer"
  description: "Target for the minimum number of idle connections to maintain in the\
    \ pool. This setting only has an effect if both it and time between eviction runs\
    \ are positive."
  name: "spring.redis.lettuce.pool.min-idle"
  defaultValue: 0
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool"
  type: "java.time.Duration"
  description: "Time between runs of the idle object evictor thread. When positive,\
    \ the idle object evictor thread starts, otherwise no idle object eviction is\
    \ performed."
  name: "spring.redis.lettuce.pool.time-between-eviction-runs"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce"
  type: "java.time.Duration"
  description: "Shutdown timeout."
  name: "spring.redis.lettuce.shutdown-timeout"
  defaultValue: "100ms"
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Login password of the redis server."
  name: "spring.redis.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.Integer"
  description: "Redis server port."
  name: "spring.redis.port"
  defaultValue: 6379
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
  type: "java.lang.String"
  description: "Name of the Redis server."
  name: "spring.redis.sentinel.master"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
  type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of \"host:port\" pairs."
  name: "spring.redis.sentinel.nodes"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
  type: "java.lang.String"
  description: "Password for authenticating with sentinel(s)."
  name: "spring.redis.sentinel.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable SSL support."
  name: "spring.redis.ssl"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.time.Duration"
  description: "Read timeout."
  name: "spring.redis.timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Connection URL. Overrides host, port, and password. User is ignored.\
    \ Example: redis://user:password@example.com:6379"
  name: "spring.redis.url"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
  type: "java.lang.String"
  description: "Login username of the redis server."
  name: "spring.redis.username"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable default resource handling."
  name: "spring.resources.add-mappings"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.add-mappings"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that the response message is intended for a single user and\
    \ must not be stored by a shared cache."
  name: "spring.resources.cache.cachecontrol.cache-private"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.cache-private"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that any cache may store the response."
  name: "spring.resources.cache.cachecontrol.cache-public"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.cache-public"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response should be cached, in seconds if no duration\
    \ suffix is not specified."
  name: "spring.resources.cache.cachecontrol.max-age"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.max-age"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that once it has become stale, a cache must not use the response\
    \ without re-validating it with the server."
  name: "spring.resources.cache.cachecontrol.must-revalidate"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.must-revalidate"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that the cached response can be reused only if re-validated\
    \ with the server."
  name: "spring.resources.cache.cachecontrol.no-cache"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.no-cache"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate to not cache the response in any case."
  name: "spring.resources.cache.cachecontrol.no-store"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.no-store"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate intermediaries (caches and others) that they should not transform\
    \ the response content."
  name: "spring.resources.cache.cachecontrol.no-transform"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.no-transform"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Same meaning as the \"must-revalidate\" directive, except that it\
    \ does not apply to private caches."
  name: "spring.resources.cache.cachecontrol.proxy-revalidate"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.proxy-revalidate"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response should be cached by shared caches, in seconds\
    \ if no duration suffix is not specified."
  name: "spring.resources.cache.cachecontrol.s-max-age"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.s-max-age"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response may be used when errors are encountered,\
    \ in seconds if no duration suffix is not specified."
  name: "spring.resources.cache.cachecontrol.stale-if-error"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.stale-if-error"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response can be served after it becomes stale, in\
    \ seconds if no duration suffix is not specified."
  name: "spring.resources.cache.cachecontrol.stale-while-revalidate"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.cachecontrol.stale-while-revalidate"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache"
  type: "java.time.Duration"
  description: "Cache period for the resources served by the resource handler. If\
    \ a duration suffix is not specified, seconds will be used. Can be overridden\
    \ by the 'spring.web.resources.cache.cachecontrol' properties."
  name: "spring.resources.cache.period"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.period"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Cache"
  type: "java.lang.Boolean"
  description: "Whether we should use the \"lastModified\" metadata of the files in\
    \ HTTP caching headers."
  name: "spring.resources.cache.use-last-modified"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.cache.use-last-modified"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable caching in the Resource chain."
  name: "spring.resources.chain.cache"
  defaultValue: true
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.cache"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable resolution of already compressed resources (gzip,\
    \ brotli). Checks for a resource name with the '.gz' or '.br' file extensions."
  name: "spring.resources.chain.compressed"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.compressed"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable the Spring Resource Handling chain. By default,\
    \ disabled unless at least one strategy has been enabled."
  name: "spring.resources.chain.enabled"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.enabled"
- type: "java.lang.Boolean"
  description: "Whether to enable resolution of already gzipped resources. Checks\
    \ for a resource name variant with the \"*.gz\" extension."
  name: "spring.resources.chain.gzipped"
  defaultValue: ""
  deprecationLevel: "ERROR"
  deprecationReplacement: "spring.resources.chain.compressed"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable HTML5 application cache manifest rewriting."
  name: "spring.resources.chain.html-application-cache"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReason: "The appcache manifest feature is being removed from browsers."
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Content"
  type: "java.lang.Boolean"
  description: "Whether to enable the content Version Strategy."
  name: "spring.resources.chain.strategy.content.enabled"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.content.enabled"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Content"
  type: "java.lang.String[]"
  description: "Comma-separated list of patterns to apply to the content Version Strategy."
  name: "spring.resources.chain.strategy.content.paths"
  defaultValue:
  - "/**"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.content.paths"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Fixed"
  type: "java.lang.Boolean"
  description: "Whether to enable the fixed Version Strategy."
  name: "spring.resources.chain.strategy.fixed.enabled"
  defaultValue: false
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.fixed.enabled"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Fixed"
  type: "java.lang.String[]"
  description: "Comma-separated list of patterns to apply to the fixed Version Strategy."
  name: "spring.resources.chain.strategy.fixed.paths"
  defaultValue:
  - "/**"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.fixed.paths"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties$Fixed"
  type: "java.lang.String"
  description: "Version string to use for the fixed Version Strategy."
  name: "spring.resources.chain.strategy.fixed.version"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.chain.strategy.fixed.version"
- owner: "org.springframework.boot.autoconfigure.web.ResourceProperties"
  type: "java.lang.String[]"
  description: "Locations of static resources. Defaults to classpath:[/META-INF/resources/,\
    \ /resources/, /static/, /public/]."
  name: "spring.resources.static-locations"
  defaultValue:
  - "classpath:/META-INF/resources/"
  - "classpath:/resources/"
  - "classpath:/static/"
  - "classpath:/public/"
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.web.resources.static-locations"
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "java.net.InetAddress"
  description: "Network address to which the server should bind."
  name: "spring.rsocket.server.address"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum transmission unit. Frames larger than the specified value\
    \ are fragmented."
  name: "spring.rsocket.server.fragment-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "java.lang.String"
  description: "Path under which RSocket handles requests (only works with websocket\
    \ transport)."
  name: "spring.rsocket.server.mapping-path"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "java.lang.Integer"
  description: "Server port."
  name: "spring.rsocket.server.port"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  name: "spring.rsocket.server.ssl.ciphers"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "org.springframework.boot.web.server.Ssl$ClientAuth"
  name: "spring.rsocket.server.ssl.client-auth"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.Boolean"
  name: "spring.rsocket.server.ssl.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String[]"
  name: "spring.rsocket.server.ssl.enabled-protocols"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-alias"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.key-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.protocol"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.trust-store"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.trust-store-password"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.trust-store-provider"
  defaultValue: ""
- owner: "org.springframework.boot.web.server.Ssl"
  type: "java.lang.String"
  name: "spring.rsocket.server.ssl.trust-store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server"
  type: "org.springframework.boot.rsocket.server.RSocketServer$Transport"
  description: "RSocket transport protocol."
  name: "spring.rsocket.server.transport"
  defaultValue: "tcp"
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"
  type: "java.util.Set<org.springframework.boot.web.servlet.DispatcherType>"
  description: "Security filter chain dispatcher types."
  name: "spring.security.filter.dispatcher-types"
  defaultValue:
  - "async"
  - "error"
  - "request"
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter"
  type: "java.lang.Integer"
  description: "Security filter chain order."
  name: "spring.security.filter.order"
  defaultValue: -100
- owner: "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties"
  type: "java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties$Provider>"
  description: "OAuth provider details."
  name: "spring.security.oauth2.client.provider"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties"
  type: "java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientProperties$Registration>"
  description: "OAuth client registrations."
  name: "spring.security.oauth2.client.registration"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  type: "java.lang.String"
  description: "URI that can either be an OpenID Connect discovery endpoint or an\
    \ OAuth 2.0 Authorization Server Metadata endpoint defined by RFC 8414."
  name: "spring.security.oauth2.resourceserver.jwt.issuer-uri"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  type: "java.lang.String"
  description: "JSON Web Key URI to use to verify the JWT token."
  name: "spring.security.oauth2.resourceserver.jwt.jwk-set-uri"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  type: "java.lang.String"
  description: "JSON Web Algorithm used for verifying the digital signatures."
  name: "spring.security.oauth2.resourceserver.jwt.jws-algorithm"
  defaultValue: "RS256"
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt"
  type: "org.springframework.core.io.Resource"
  description: "Location of the file containing the public key used to verify a JWT."
  name: "spring.security.oauth2.resourceserver.jwt.public-key-location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken"
  type: "java.lang.String"
  description: "Client id used to authenticate with the token introspection endpoint."
  name: "spring.security.oauth2.resourceserver.opaquetoken.client-id"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken"
  type: "java.lang.String"
  description: "Client secret used to authenticate with the token introspection endpoint."
  name: "spring.security.oauth2.resourceserver.opaquetoken.client-secret"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken"
  type: "java.lang.String"
  description: "OAuth 2.0 endpoint through which token introspection is accomplished."
  name: "spring.security.oauth2.resourceserver.opaquetoken.introspection-uri"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties"
  type: "java.util.Map<java.lang.String,org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyProperties$Registration>"
  description: "SAML2 relying party registrations."
  name: "spring.security.saml2.relyingparty.registration"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$User"
  type: "java.lang.String"
  description: "Default user name."
  name: "spring.security.user.name"
  defaultValue: "user"
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$User"
  type: "java.lang.String"
  description: "Password for the default user name."
  name: "spring.security.user.password"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.security.SecurityProperties$User"
  type: "java.util.List<java.lang.String>"
  description: "Granted roles for the default user name."
  name: "spring.security.user.roles"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sendgrid.SendGridProperties"
  type: "java.lang.String"
  description: "SendGrid API key."
  name: "spring.sendgrid.api-key"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sendgrid.SendGridProperties$Proxy"
  type: "java.lang.String"
  description: "SendGrid proxy host."
  name: "spring.sendgrid.proxy.host"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.sendgrid.SendGridProperties$Proxy"
  type: "java.lang.Integer"
  description: "SendGrid proxy port."
  name: "spring.sendgrid.proxy.port"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable support of multipart uploads."
  name: "spring.servlet.multipart.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Threshold after which files are written to disk."
  name: "spring.servlet.multipart.file-size-threshold"
  defaultValue: "0B"
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "java.lang.String"
  description: "Intermediate location of uploaded files."
  name: "spring.servlet.multipart.location"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Max file size."
  name: "spring.servlet.multipart.max-file-size"
  defaultValue: "1MB"
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "org.springframework.util.unit.DataSize"
  description: "Max request size."
  name: "spring.servlet.multipart.max-request-size"
  defaultValue: "10MB"
- owner: "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
  type: "java.lang.Boolean"
  description: "Whether to resolve the multipart request lazily at the time of file\
    \ or parameter access."
  name: "spring.servlet.multipart.resolve-lazily"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.session.HazelcastSessionProperties"
  type: "org.springframework.session.FlushMode"
  description: "Sessions flush mode. Determines when session changes are written to\
    \ the session store."
  name: "spring.session.hazelcast.flush-mode"
  defaultValue: "on-save"
- owner: "org.springframework.boot.autoconfigure.session.HazelcastSessionProperties"
  type: "java.lang.String"
  description: "Name of the map used to store sessions."
  name: "spring.session.hazelcast.map-name"
  defaultValue: "spring:session:sessions"
- owner: "org.springframework.boot.autoconfigure.session.HazelcastSessionProperties"
  type: "org.springframework.session.SaveMode"
  description: "Sessions save mode. Determines how session changes are tracked and\
    \ saved to the session store."
  name: "spring.session.hazelcast.save-mode"
  defaultValue: "on-set-attribute"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "java.lang.String"
  description: "Cron expression for expired session cleanup job."
  name: "spring.session.jdbc.cleanup-cron"
  defaultValue: "0 * * * * *"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "org.springframework.session.FlushMode"
  description: "Sessions flush mode. Determines when session changes are written to\
    \ the session store."
  name: "spring.session.jdbc.flush-mode"
  defaultValue: "on-save"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "org.springframework.boot.jdbc.DataSourceInitializationMode"
  description: "Database schema initialization mode."
  name: "spring.session.jdbc.initialize-schema"
  defaultValue: "embedded"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "org.springframework.session.SaveMode"
  description: "Sessions save mode. Determines how session changes are tracked and\
    \ saved to the session store."
  name: "spring.session.jdbc.save-mode"
  defaultValue: "on-set-attribute"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "java.lang.String"
  description: "Path to the SQL file to use to initialize the database schema."
  name: "spring.session.jdbc.schema"
  defaultValue: "classpath:org/springframework/session/jdbc/schema-@@platform@@.sql"
- owner: "org.springframework.boot.autoconfigure.session.JdbcSessionProperties"
  type: "java.lang.String"
  description: "Name of the database table used to store sessions."
  name: "spring.session.jdbc.table-name"
  defaultValue: "SPRING_SESSION"
- owner: "org.springframework.boot.autoconfigure.session.MongoSessionProperties"
  type: "java.lang.String"
  description: "Collection name used to store sessions."
  name: "spring.session.mongodb.collection-name"
  defaultValue: "sessions"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "java.lang.String"
  description: "Cron expression for expired session cleanup job."
  name: "spring.session.redis.cleanup-cron"
  defaultValue: "0 * * * * *"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "org.springframework.boot.autoconfigure.session.RedisSessionProperties$ConfigureAction"
  description: "The configure action to apply when no user defined ConfigureRedisAction\
    \ bean is present."
  name: "spring.session.redis.configure-action"
  defaultValue: "notify-keyspace-events"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "org.springframework.session.FlushMode"
  description: "Sessions flush mode. Determines when session changes are written to\
    \ the session store."
  name: "spring.session.redis.flush-mode"
  defaultValue: "on-save"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "java.lang.String"
  description: "Namespace for keys used to store sessions."
  name: "spring.session.redis.namespace"
  defaultValue: "spring:session"
- owner: "org.springframework.boot.autoconfigure.session.RedisSessionProperties"
  type: "org.springframework.session.SaveMode"
  description: "Sessions save mode. Determines how session changes are tracked and\
    \ saved to the session store."
  name: "spring.session.redis.save-mode"
  defaultValue: "on-set-attribute"
- owner: "org.springframework.boot.autoconfigure.session.SessionProperties$Servlet"
  type: "java.util.Set<org.springframework.boot.web.servlet.DispatcherType>"
  description: "Session repository filter dispatcher types."
  name: "spring.session.servlet.filter-dispatcher-types"
  defaultValue:
  - "async"
  - "error"
  - "request"
- owner: "org.springframework.boot.autoconfigure.session.SessionProperties$Servlet"
  type: "java.lang.Integer"
  description: "Session repository filter order."
  name: "spring.session.servlet.filter-order"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.session.SessionProperties"
  type: "org.springframework.boot.autoconfigure.session.StoreType"
  description: "Session store type."
  name: "spring.session.store-type"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.session.SessionProperties"
  type: "java.time.Duration"
  description: "Session timeout. If a duration suffix is not specified, seconds will\
    \ be used."
  name: "spring.session.timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.lang.Boolean"
  description: "Whether core threads are allowed to time out. This enables dynamic\
    \ growing and shrinking of the pool."
  name: "spring.task.execution.pool.allow-core-thread-timeout"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.lang.Integer"
  description: "Core number of threads."
  name: "spring.task.execution.pool.core-size"
  defaultValue: 8
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.time.Duration"
  description: "Time limit for which threads may remain idle before being terminated."
  name: "spring.task.execution.pool.keep-alive"
  defaultValue: "60s"
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum allowed number of threads. If tasks are filling up the queue,\
    \ the pool can expand up to that size to accommodate the load. Ignored if the\
    \ queue is unbounded."
  name: "spring.task.execution.pool.max-size"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
  type: "java.lang.Integer"
  description: "Queue capacity. An unbounded capacity does not increase the pool and\
    \ therefore ignores the \"max-size\" property."
  name: "spring.task.execution.pool.queue-capacity"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
  type: "java.lang.Boolean"
  description: "Whether the executor should wait for scheduled tasks to complete on\
    \ shutdown."
  name: "spring.task.execution.shutdown.await-termination"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
  type: "java.time.Duration"
  description: "Maximum time the executor should wait for remaining tasks to complete."
  name: "spring.task.execution.shutdown.await-termination-period"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskExecutionProperties"
  type: "java.lang.String"
  description: "Prefix to use for the names of newly created threads."
  name: "spring.task.execution.thread-name-prefix"
  defaultValue: "task-"
- owner: "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
  type: "java.lang.Integer"
  description: "Maximum allowed number of threads."
  name: "spring.task.scheduling.pool.size"
  defaultValue: 1
- owner: "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
  type: "java.lang.Boolean"
  description: "Whether the executor should wait for scheduled tasks to complete on\
    \ shutdown."
  name: "spring.task.scheduling.shutdown.await-termination"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
  type: "java.time.Duration"
  description: "Maximum time the executor should wait for remaining tasks to complete."
  name: "spring.task.scheduling.shutdown.await-termination-period"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties"
  type: "java.lang.String"
  description: "Prefix to use for the names of newly created threads."
  name: "spring.task.scheduling.thread-name-prefix"
  defaultValue: "scheduling-"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable template caching."
  name: "spring.thymeleaf.cache"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the template exists before rendering it."
  name: "spring.thymeleaf.check-template"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether to check that the templates location exists."
  name: "spring.thymeleaf.check-template-location"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Enable the SpringEL compiler in SpringEL expressions."
  name: "spring.thymeleaf.enable-spring-el-compiler"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether to enable Thymeleaf view resolution for Web frameworks."
  name: "spring.thymeleaf.enabled"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.nio.charset.Charset"
  description: "Template files encoding."
  name: "spring.thymeleaf.encoding"
  defaultValue: "UTF-8"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String[]"
  description: "Comma-separated list of view names (patterns allowed) that should\
    \ be excluded from resolution."
  name: "spring.thymeleaf.excluded-view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String"
  description: "Template mode to be applied to templates. See also Thymeleaf's TemplateMode\
    \ enum."
  name: "spring.thymeleaf.mode"
  defaultValue: "HTML"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String"
  description: "Prefix that gets prepended to view names when building a URL."
  name: "spring.thymeleaf.prefix"
  defaultValue: "classpath:/templates/"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  type: "java.lang.String[]"
  description: "Comma-separated list of view names (patterns allowed) that should\
    \ be the only ones executed in CHUNKED mode when a max chunk size is set."
  name: "spring.thymeleaf.reactive.chunked-mode-view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  type: "java.lang.String[]"
  description: "Comma-separated list of view names (patterns allowed) that should\
    \ be executed in FULL mode even if a max chunk size is set."
  name: "spring.thymeleaf.reactive.full-mode-view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  type: "org.springframework.util.unit.DataSize"
  description: "Maximum size of data buffers used for writing to the response. Templates\
    \ will execute in CHUNKED mode by default if this is set."
  name: "spring.thymeleaf.reactive.max-chunk-size"
  defaultValue: "0B"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
  type: "java.util.List<org.springframework.http.MediaType>"
  description: "Media types supported by the view technology."
  name: "spring.thymeleaf.reactive.media-types"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Boolean"
  description: "Whether hidden form inputs acting as markers for checkboxes should\
    \ be rendered before the checkbox element itself."
  name: "spring.thymeleaf.render-hidden-markers-before-checkboxes"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet"
  type: "org.springframework.util.MimeType"
  description: "Content-Type value written to HTTP responses."
  name: "spring.thymeleaf.servlet.content-type"
  defaultValue: "text/html"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet"
  type: "java.lang.Boolean"
  description: "Whether Thymeleaf should start writing partial output as soon as possible\
    \ or buffer until template processing is finished."
  name: "spring.thymeleaf.servlet.produce-partial-output-while-processing"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String"
  description: "Suffix that gets appended to view names when building a URL."
  name: "spring.thymeleaf.suffix"
  defaultValue: ".html"
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.Integer"
  description: "Order of the template resolver in the chain. By default, the template\
    \ resolver is first in the chain. Order start at 1 and should only be set if you\
    \ have defined additional \"TemplateResolver\" beans."
  name: "spring.thymeleaf.template-resolver-order"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties"
  type: "java.lang.String[]"
  description: "Comma-separated list of view names (patterns allowed) that can be\
    \ resolved."
  name: "spring.thymeleaf.view-names"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.transaction.TransactionProperties"
  type: "java.time.Duration"
  description: "Default transaction timeout. If a duration suffix is not specified,\
    \ seconds will be used."
  name: "spring.transaction.default-timeout"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.transaction.TransactionProperties"
  type: "java.lang.Boolean"
  description: "Whether to roll back on commit failures."
  name: "spring.transaction.rollback-on-commit-failure"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties"
  type: "java.util.Locale"
  description: "Locale to use. By default, this locale is overridden by the \"Accept-Language\"\
    \ header."
  name: "spring.web.locale"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties"
  type: "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
  description: "Define how the locale should be resolved."
  name: "spring.web.locale-resolver"
  defaultValue: "accept-header"
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
  type: "java.lang.Boolean"
  description: "Whether to enable default resource handling."
  name: "spring.web.resources.add-mappings"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that the response message is intended for a single user and\
    \ must not be stored by a shared cache."
  name: "spring.web.resources.cache.cachecontrol.cache-private"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that any cache may store the response."
  name: "spring.web.resources.cache.cachecontrol.cache-public"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response should be cached, in seconds if no duration\
    \ suffix is not specified."
  name: "spring.web.resources.cache.cachecontrol.max-age"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that once it has become stale, a cache must not use the response\
    \ without re-validating it with the server."
  name: "spring.web.resources.cache.cachecontrol.must-revalidate"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate that the cached response can be reused only if re-validated\
    \ with the server."
  name: "spring.web.resources.cache.cachecontrol.no-cache"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate to not cache the response in any case."
  name: "spring.web.resources.cache.cachecontrol.no-store"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Indicate intermediaries (caches and others) that they should not transform\
    \ the response content."
  name: "spring.web.resources.cache.cachecontrol.no-transform"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.lang.Boolean"
  description: "Same meaning as the \"must-revalidate\" directive, except that it\
    \ does not apply to private caches."
  name: "spring.web.resources.cache.cachecontrol.proxy-revalidate"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response should be cached by shared caches, in seconds\
    \ if no duration suffix is not specified."
  name: "spring.web.resources.cache.cachecontrol.s-max-age"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response may be used when errors are encountered,\
    \ in seconds if no duration suffix is not specified."
  name: "spring.web.resources.cache.cachecontrol.stale-if-error"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol"
  type: "java.time.Duration"
  description: "Maximum time the response can be served after it becomes stale, in\
    \ seconds if no duration suffix is not specified."
  name: "spring.web.resources.cache.cachecontrol.stale-while-revalidate"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache"
  type: "java.time.Duration"
  description: "Cache period for the resources served by the resource handler. If\
    \ a duration suffix is not specified, seconds will be used. Can be overridden\
    \ by the 'spring.web.resources.cache.cachecontrol' properties."
  name: "spring.web.resources.cache.period"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache"
  type: "java.lang.Boolean"
  description: "Whether we should use the \"lastModified\" metadata of the files in\
    \ HTTP caching headers."
  name: "spring.web.resources.cache.use-last-modified"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable caching in the Resource chain."
  name: "spring.web.resources.chain.cache"
  defaultValue: true
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable resolution of already compressed resources (gzip,\
    \ brotli). Checks for a resource name with the '.gz' or '.br' file extensions."
  name: "spring.web.resources.chain.compressed"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain"
  type: "java.lang.Boolean"
  description: "Whether to enable the Spring Resource Handling chain. By default,\
    \ disabled unless at least one strategy has been enabled."
  name: "spring.web.resources.chain.enabled"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content"
  type: "java.lang.Boolean"
  description: "Whether to enable the content Version Strategy."
  name: "spring.web.resources.chain.strategy.content.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content"
  type: "java.lang.String[]"
  description: "Comma-separated list of patterns to apply to the content Version Strategy."
  name: "spring.web.resources.chain.strategy.content.paths"
  defaultValue:
  - "/**"
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed"
  type: "java.lang.Boolean"
  description: "Whether to enable the fixed Version Strategy."
  name: "spring.web.resources.chain.strategy.fixed.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed"
  type: "java.lang.String[]"
  description: "Comma-separated list of patterns to apply to the fixed Version Strategy."
  name: "spring.web.resources.chain.strategy.fixed.paths"
  defaultValue:
  - "/**"
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed"
  type: "java.lang.String"
  description: "Version string to use for the fixed Version Strategy."
  name: "spring.web.resources.chain.strategy.fixed.version"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.WebProperties$Resources"
  type: "java.lang.String[]"
  description: "Locations of static resources. Defaults to classpath:[/META-INF/resources/,\
    \ /resources/, /static/, /public/]."
  name: "spring.web.resources.static-locations"
  defaultValue:
  - "classpath:/META-INF/resources/"
  - "classpath:/resources/"
  - "classpath:/static/"
  - "classpath:/public/"
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
  type: "java.lang.String"
  description: "Base path for all web handlers."
  name: "spring.webflux.base-path"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
  type: "java.lang.String"
  name: "spring.webflux.date-format"
  defaultValue: ""
  deprecationLevel: "WARNING"
  deprecationReplacement: "spring.webflux.format.date"
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"
  type: "java.lang.String"
  description: "Date format to use, for example `dd/MM/yyyy`."
  name: "spring.webflux.format.date"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"
  type: "java.lang.String"
  description: "Date-time format to use, for example `yyyy-MM-dd HH:mm:ss`."
  name: "spring.webflux.format.date-time"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format"
  type: "java.lang.String"
  description: "Time format to use, for example `HH:mm:ss`."
  name: "spring.webflux.format.time"
  defaultValue: ""
- type: "java.lang.Boolean"
  description: "Whether to enable Spring's HiddenHttpMethodFilter."
  name: "spring.webflux.hiddenmethod.filter.enabled"
  defaultValue: false
- owner: "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
  type: "java.lang.String"
  description: "Path pattern used for static resources."
  name: "spring.webflux.static-path-pattern"
  defaultValue: "/**"
- owner: "org.springframework.boot.autoconfigure.webservices.WebServicesProperties"
  type: "java.lang.String"
  description: "Path that serves as the base URI for the services."
  name: "spring.webservices.path"
  defaultValue: "/services"
- owner: "org.springframework.boot.autoconfigure.webservices.WebServicesProperties$Servlet"
  type: "java.util.Map<java.lang.String,java.lang.String>"
  description: "Servlet init parameters to pass to Spring Web Services."
  name: "spring.webservices.servlet.init"
  defaultValue: ""
- owner: "org.springframework.boot.autoconfigure.webservices.WebServicesProperties$Servlet"
  type: "java.lang.Integer"
  description: "Load on startup priority of the Spring Web Services servlet."
  name: "spring.webservices.servlet.load-on-startup"
  defaultValue: -1
- type: "java.util.List<java.lang.String>"
  description: "Comma-separated list of locations of WSDLs and accompanying XSDs to\
    \ be exposed as beans."
  name: "spring.webservices.wsdl-locations"
  defaultValue: ""
- owner: "org.springframework.boot.context.logging.LoggingApplicationListener"
  type: "java.lang.Boolean"
  description: "Enable trace logs."
  name: "trace"
  defaultValue: false
